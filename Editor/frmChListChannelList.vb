Public Class frmChListChannelList

    '****************************************************
    'Ver2.0.0.0 2016.12.06 ｾﾝｻｰﾌｪｲﾙ Over Underの仕様
    '
    ' エディタ上は、UseNotUseとOver,Underをbit処理とする。
    '  ※ﾌﾟﾛｸﾞﾗﾑ修正上の問題にて本仕様を採用。
    '  0bit:0=NotUse 1=Use 
    '  1bit:0=Under NotUse 1=Under Use
    '  2bit:0=Over NotUse 1=Over Use
    '
    ' このﾋﾞｯﾄ仕様は、プログラム上だけであり、ﾌｧｲﾙ仕様とは無関係である。
    '
    '  ゆえに、ファイルへ読み書きの際は注意が必要。
    '****************************************************

#Region "定数定義"

    ''グリッドNULL値
    Private Const mcstNullValue As String = ""

#End Region

#Region "詳細画面用定義"

#Region "アナログ"

    ''アナログチャンネル情報格納
    Public Structure mAnalogInfo
        Public RowNo As Integer
        Public RowNoFirst As Integer
        Public RowNoEnd As Integer
        Public SysNo As String
        Public ChNo As String
        Public TagNo As String
        Public ItemName As String
        Public ValueHH As String
        Public ValueH As String
        Public ValueL As String
        Public ValueLL As String
        Public ValueSF As String
        Public ExtGHH As String
        Public ExtGH As String
        Public ExtGL As String
        Public ExtGLL As String
        Public ExtGSF As String
        Public DelayHH As String
        Public DelayH As String
        Public DelayL As String
        Public DelayLL As String
        Public DelaySF As String
        Public GRep1HH As String
        Public GRep1H As String
        Public GRep1L As String
        Public GRep1LL As String
        Public GRep1SF As String
        Public GRep2HH As String
        Public GRep2H As String
        Public GRep2L As String
        Public GRep2LL As String
        Public GRep2SF As String
        Public StatusHH As String
        Public StatusH As String
        Public StatusL As String
        Public StatusLL As String
        Public FlagDmy As String
        Public FlagSC As String
        Public FlagSIO As String
        Public FlagGWS As String
        Public FlagWK As String
        Public FlagRL As String
        Public FlagAC As String
        Public FlagEP As String
        Public FlagPLC As String
        Public FlagSP As String
        Public FlagMin As String
        Public FuNo As String
        Public FUPortNo As String
        Public FUPin As String
        Public DataType As String
        Public PortNo As String
        Public RangeType As String
        Public RangeFrom As String
        Public RangeTo As String
        Public Status As String
        Public NormalLO As String
        Public NormalHI As String
        Public DecimalPosition As String
        Public OffSet As String
        Public Unit As String
        Public strString As String
        Public FlagCenterGraph As Boolean
        Public FlagPowerFactor As Integer   '' Ver1.10.1 2016.02.29 力率対応 追加
        Public FlagPSDisp As Boolean    '' Ver1.11.9.3 2016.11.26 P/S表示対応
        Public ShareType As String
        Public ShareChNo As String
        Public Remarks As String
        Public AlmLevel As String      ' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
        Public AlmMimic As String       'Ver2.0.0.2 南日本M761対応 2017.02.27追加
        Public intAdjPSW As Integer     'Ver2.0.7.C ｵﾌｾｯﾄ調整ﾊﾟｽﾜｰﾄﾞ有無 0=無 1=有
        Public intMmHgFlg As Integer    'Ver2.0.8.5 mmHgレンジ下限小数点対応
        Public intMmHgDec As Integer    'Ver2.0.8.5 mmHgレンジ下限小数点対応
        '▼▼▼ 20110614 仮設定機能対応（アナログ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
        Public DummyFuAddress As Boolean
        Public DummyStatusName As Boolean
        Public DummyUnitName As Boolean

        Public DummyDelayHH As Boolean
        Public DummyValueHH As Boolean
        Public DummyExtGrHH As Boolean
        Public DummyGRep1HH As Boolean
        Public DummyGRep2HH As Boolean
        Public DummyStaNmHH As Boolean

        Public DummyDelayH As Boolean
        Public DummyValueH As Boolean
        Public DummyExtGrH As Boolean
        Public DummyGRep1H As Boolean
        Public DummyGRep2H As Boolean
        Public DummyStaNmH As Boolean

        Public DummyDelayL As Boolean
        Public DummyValueL As Boolean
        Public DummyExtGrL As Boolean
        Public DummyGRep1L As Boolean
        Public DummyGRep2L As Boolean
        Public DummyStaNmL As Boolean

        Public DummyDelayLL As Boolean
        Public DummyValueLL As Boolean
        Public DummyExtGrLL As Boolean
        Public DummyGRep1LL As Boolean
        Public DummyGRep2LL As Boolean
        Public DummyStaNmLL As Boolean

        Public DummyDelaySF As Boolean
        Public DummyValueSF As Boolean
        Public DummyExtGrSF As Boolean
        Public DummyGRep1SF As Boolean
        Public DummyGRep2SF As Boolean
        Public DummyStaNmSF As Boolean

        Public DummyRangeScale As Boolean
        Public DummyRangeNormalHi As Boolean
        Public DummyRangeNormalLo As Boolean
        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

    End Structure

#End Region

#Region "デジタル"

    ''デジタルチャンネル情報格納
    Public Structure mDigitalInfo
        Public RowNo As Integer
        Public RowNoFirst As Integer
        Public RowNoEnd As Integer
        Public SysNo As String
        Public ChNo As String
        Public TagNo As String      '' 2015.10.26 Ver1.7.5 ﾀｸﾞ表示追加
        Public ItemName As String
        Public ExtGH As String
        Public DelayH As String
        Public GRep1H As String
        Public GRep2H As String
        Public FlagDmy As String
        Public FlagSC As String
        Public FlagSIO As String
        Public FlagGWS As String
        Public FlagWK As String
        Public FlagRL As String
        Public FlagAC As String
        Public FlagEP As String
        Public FlagPLC As String        '' 2014.11.18
        Public FlagSP As String
        Public FlagMin As String
        Public FuNo As String
        Public FUPortNo As String
        Public FUPin As String
        Public DataType As String
        Public PortNo As String
        Public Status As String
        Public FlagStatusAlarm As Boolean
        Public FilterCoef As String
        Public EccFunc As String
        Public ShareType As String
        Public ShareChNo As String
        Public Remarks As String
        Public AlmLevel As String      ' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
        Public AlmMimic As String       'Ver2.0.0.2 南日本M761対応 2017.02.27追加
        '▼▼▼ 20110614 仮設定機能対応（デジタル） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
        Public DummyExtG As Boolean
        Public DummyDelay As Boolean
        Public DummyGroupRepose1 As Boolean
        Public DummyGroupRepose2 As Boolean
        Public DummyFuAddress As Boolean
        Public DummyStatusName As Boolean
        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

        ''16ステータス分
        Public DeviceStatus As String
        Public DeviceStatusUse() As Boolean
        Public DeviceStatusCode() As String
        Public DeviceStatusName() As String
    End Structure

#End Region

#Region "モーター"

    ''モーターチャンネル情報格納
    Public Structure mMotorInfo
        Public RowNo As Integer
        Public RowNoFirst As Integer
        Public RowNoEnd As Integer
        Public SysNo As String
        Public ChNo As String
        Public TagNo As String      '' 2015.10.26 Ver1.7.5 ﾀｸﾞ表示追加
        Public ItemName As String
        Public ExtGH As String
        Public DelayH As String
        Public GRep1H As String
        Public GRep2H As String
        Public FlagDmy As String
        Public FlagSC As String
        Public FlagSIO As String
        Public FlagGWS As String
        Public FlagWK As String
        Public FlagRL As String
        Public FlagAC As String
        Public FlagEP As String
        Public FlagPLC As String        '' 2014.11.18
        Public FlagSP As String
        Public FlagMin As String
        Public FlagMotorCol As String   '' ver2.0.8.C 保安庁向け表示色変更　2018.11.14

        Public DIStart As String
        Public DIPortStart As String
        Public DIPinStart As String
        Public DOStart As String
        Public DOPortStart As String
        Public DOPinStart As String

        Public DataType As String
        Public PortNo As String
        Public StatusIn As String
        Public StatusOut As String
        Public StatusDO() As String
        Public FlagStatusAlarm As Boolean
        Public FilterCoef As String
        Public AlarmTimeup As String
        Public ControlType As String
        Public PulseWidth As String
        Public ShareType As String
        Public ShareChNo As String
        Public Remarks As String
        Public ExtgDoAlarm As String
        Public DelayDoAlarm As String
        Public GRep1DoAlarm As String
        Public GRep2DoAlarm As String
        Public StatusDoAlarm As String
        Public AlmLevel As String      ' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
        Public AlmMimic As String       'Ver2.0.0.2 南日本M761対応 2017.02.27追加
        '▼▼▼ 20110614 仮設定機能対応（モーター） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
        Public DummyExtG As Boolean
        Public DummyGroupRepose1 As Boolean
        Public DummyGroupRepose2 As Boolean
        Public DummyFuAddress As Boolean

        Public DummyOutFuAddress As Boolean
        Public DummyOutBitCount As Boolean
        Public DummyOutStatusType As Boolean

        Public DummyOutStatus1 As Boolean
        Public DummyOutStatus2 As Boolean
        Public DummyOutStatus3 As Boolean
        Public DummyOutStatus4 As Boolean
        Public DummyOutStatus5 As Boolean

        Public DummyFaExtGr As Boolean
        Public DummyFaDelay As Boolean
        Public DummyFaGrep1 As Boolean
        Public DummyFaGrep2 As Boolean
        Public DummyFaStaNm As Boolean
        Public DummyFaTimeV As Boolean
        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
    End Structure

#End Region

#Region "バルブ"

    ''バルブチャンネル情報格納
    Public Structure mValveInfo
        Public RowNo As Integer
        Public RowNoFirst As Integer
        Public RowNoEnd As Integer
        Public SysNo As String
        Public ChNo As String
        Public TagNo As String      '' 2015.10.26 Ver1.7.5 ﾀｸﾞ表示追加
        Public ItemName As String
        Public ExtGH_I As String
        Public DelayH_I As String
        Public GRep1H_I As String
        Public GRep2H_I As String
        Public FlagDmy As String
        Public FlagSC As String
        Public FlagSIO As String
        Public FlagGWS As String
        Public FlagWK As String
        Public FlagRL As String
        Public FlagAC As String
        Public FlagEP As String
        Public FlagPLC As String        '' 2014.11.18
        Public FlagSP As String
        Public FlagMin As String
        Public BitCount As String

        Public DIStart As String
        Public DIPortStart As String
        Public DIPinStart As String

        Public DOStart As String
        Public DOPortStart As String
        Public DOPinStart As String

        Public AITerm As String
        Public AIPortTerm As String
        Public AIPinTerm As String

        Public AOTerm As String
        Public AOPortTerm As String
        Public AOPinTerm As String

        Public DataType As String
        Public PortNo As String
        Public StatusIn As String
        Public StatusOut As String
        Public StatusDO() As String
        Public FlagStatusAlarm As Boolean
        Public FilterCoef As String
        Public AlarmTimeup As String
        Public EccFunc As String
        Public ShareType As String
        Public ShareChNo As String
        Public Remarks As String

        Public Extg_O As String
        Public Delay_O As String
        Public GRep1_O As String
        Public GRep2_O As String
        Public Status_O As String
        Public Sp1_O As String
        Public Sp2_O As String
        Public Hys1_O As String
        Public Hys2_O As String
        Public St_O As String
        Public Var_O As String

        Public ControlType As String
        Public PulseWidth As String
        Public CompositeIndex As Integer

        Public ValueHH As String
        Public ValueH As String
        Public ValueL As String
        Public ValueLL As String
        Public ValueSF As String
        Public ExtGHH As String
        Public ExtGH As String
        Public ExtGL As String
        Public ExtGLL As String
        Public ExtGSF As String
        Public DelayHH As String
        Public DelayH As String
        Public DelayL As String
        Public DelayLL As String
        Public DelaySF As String
        Public GRep1HH As String
        Public GRep1H As String
        Public GRep1L As String
        Public GRep1LL As String
        Public GRep2HH As String
        Public GRep2H As String
        Public GRep2L As String
        Public GRep2LL As String
        Public StatusHH As String
        Public StatusH As String
        Public StatusL As String
        Public StatusLL As String
        Public RangeFrom As String
        Public RangeTo As String
        Public NormalLO As String
        Public NormalHI As String
        Public DecimalPosition As String
        Public OffSet As String
        Public Unit As String
        Public strString As String
        Public FlagCenterGraph As Boolean
        Public AlmLevel As String      ' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
        Public AlmMimic As String       'Ver2.0.0.2 南日本M761対応 2017.02.27追加
        '▼▼▼ 20110614 仮設定機能対応（バルブ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
        Public DummyExtG As Boolean
        Public DummyDelay As Boolean
        Public DummyGroupRepose1 As Boolean
        Public DummyGroupRepose2 As Boolean
        Public DummyFuAddress As Boolean
        Public DummyBitCount As Boolean
        Public DummyStatusName As Boolean
        Public DummyUnitName As Boolean

        Public DummyDelayHH As Boolean
        Public DummyValueHH As Boolean
        Public DummyExtGrHH As Boolean
        Public DummyGRep1HH As Boolean
        Public DummyGRep2HH As Boolean
        Public DummyStaNmHH As Boolean

        Public DummyDelayH As Boolean
        Public DummyValueH As Boolean
        Public DummyExtGrH As Boolean
        Public DummyGRep1H As Boolean
        Public DummyGRep2H As Boolean
        Public DummyStaNmH As Boolean

        Public DummyDelayL As Boolean
        Public DummyValueL As Boolean
        Public DummyExtGrL As Boolean
        Public DummyGRep1L As Boolean
        Public DummyGRep2L As Boolean
        Public DummyStaNmL As Boolean

        Public DummyDelayLL As Boolean
        Public DummyValueLL As Boolean
        Public DummyExtGrLL As Boolean
        Public DummyGRep1LL As Boolean
        Public DummyGRep2LL As Boolean
        Public DummyStaNmLL As Boolean

        Public DummyDelaySF As Boolean
        Public DummyValueSF As Boolean
        Public DummyExtGrSF As Boolean
        Public DummyGRep1SF As Boolean
        Public DummyGRep2SF As Boolean
        Public DummyStaNmSF As Boolean

        Public DummyRangeScale As Boolean
        Public DummyRangeNormalHi As Boolean
        Public DummyRangeNormalLo As Boolean

        Public DummyOutFuAddress As Boolean
        Public DummyOutBitCount As Boolean
        Public DummyOutStatusType As Boolean

        Public DummyOutStatus1 As Boolean
        Public DummyOutStatus2 As Boolean
        Public DummyOutStatus3 As Boolean
        Public DummyOutStatus4 As Boolean
        Public DummyOutStatus5 As Boolean
        Public DummyOutStatus6 As Boolean
        Public DummyOutStatus7 As Boolean
        Public DummyOutStatus8 As Boolean

        Public DummySp1 As Boolean
        Public DummySp2 As Boolean
        Public DummyHysOpen As Boolean
        Public DummyHysClose As Boolean
        Public DummySmpTime As Boolean
        Public DummyVar As Boolean

        Public DummyFaExtGr As Boolean
        Public DummyFaDelay As Boolean
        Public DummyFaGrep1 As Boolean
        Public DummyFaGrep2 As Boolean
        Public DummyFaStaNm As Boolean
        Public DummyFaTimeV As Boolean

        Public DummyCmpStatus1Delay As Boolean
        Public DummyCmpStatus1ExtGr As Boolean
        Public DummyCmpStatus1GRep1 As Boolean
        Public DummyCmpStatus1GRep2 As Boolean
        Public DummyCmpStatus1StaNm As Boolean

        Public DummyCmpStatus2Delay As Boolean
        Public DummyCmpStatus2ExtGr As Boolean
        Public DummyCmpStatus2GRep1 As Boolean
        Public DummyCmpStatus2GRep2 As Boolean
        Public DummyCmpStatus2StaNm As Boolean

        Public DummyCmpStatus3Delay As Boolean
        Public DummyCmpStatus3ExtGr As Boolean
        Public DummyCmpStatus3GRep1 As Boolean
        Public DummyCmpStatus3GRep2 As Boolean
        Public DummyCmpStatus3StaNm As Boolean

        Public DummyCmpStatus4Delay As Boolean
        Public DummyCmpStatus4ExtGr As Boolean
        Public DummyCmpStatus4GRep1 As Boolean
        Public DummyCmpStatus4GRep2 As Boolean
        Public DummyCmpStatus4StaNm As Boolean

        Public DummyCmpStatus5Delay As Boolean
        Public DummyCmpStatus5ExtGr As Boolean
        Public DummyCmpStatus5GRep1 As Boolean
        Public DummyCmpStatus5GRep2 As Boolean
        Public DummyCmpStatus5StaNm As Boolean

        Public DummyCmpStatus6Delay As Boolean
        Public DummyCmpStatus6ExtGr As Boolean
        Public DummyCmpStatus6GRep1 As Boolean
        Public DummyCmpStatus6GRep2 As Boolean
        Public DummyCmpStatus6StaNm As Boolean

        Public DummyCmpStatus7Delay As Boolean
        Public DummyCmpStatus7ExtGr As Boolean
        Public DummyCmpStatus7GRep1 As Boolean
        Public DummyCmpStatus7GRep2 As Boolean
        Public DummyCmpStatus7StaNm As Boolean

        Public DummyCmpStatus8Delay As Boolean
        Public DummyCmpStatus8ExtGr As Boolean
        Public DummyCmpStatus8GRep1 As Boolean
        Public DummyCmpStatus8GRep2 As Boolean
        Public DummyCmpStatus8StaNm As Boolean

        Public DummyCmpStatus9Delay As Boolean
        Public DummyCmpStatus9ExtGr As Boolean
        Public DummyCmpStatus9GRep1 As Boolean
        Public DummyCmpStatus9GRep2 As Boolean
        Public DummyCmpStatus9StaNm As Boolean
        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲


    End Structure

#End Region

#Region "コンポジット"

    ''デジタルコンポジットチャンネル情報格納
    Public Structure mCompositeInfo
        Public RowNo As Integer
        Public RowNoFirst As Integer
        Public RowNoEnd As Integer
        Public SysNo As String
        Public ChNo As String
        Public TagNo As String      '' 2015.10.26 Ver1.7.5 ﾀｸﾞ表示追加
        Public ItemName As String
        Public ExtGH As String
        Public DelayH As String
        Public GRep1H As String
        Public GRep2H As String
        Public FlagDmy As String
        Public FlagSC As String
        Public FlagSIO As String
        Public FlagGWS As String
        Public FlagWK As String
        Public FlagRL As String
        Public FlagAC As String
        Public FlagEP As String
        Public FlagPLC As String        '' 2014.11.18
        Public FlagSP As String
        Public FlagMin As String
        Public BitCount As String

        Public StartNo As String
        Public StartPortNo As String
        Public StartPinNo As String

        Public DataType As String
        Public CompositeStatus As String
        Public ShareType As String
        Public ShareChNo As String
        Public Remarks As String
        Public CompositeIndex As Integer
        Public Status As String
        Public AlmLevel As String      ' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
        Public AlmMimic As String       'Ver2.0.0.2 南日本M761対応 2017.02.27追加
        '▼▼▼ 20110614 仮設定機能対応（コンポジット） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
        Public DummyExtG As Boolean
        Public DummyDelay As Boolean
        Public DummyGroupRepose1 As Boolean
        Public DummyGroupRepose2 As Boolean
        Public DummyFuAddress As Boolean
        Public DummyBitCount As Boolean
        Public DummyStatusName As Boolean

        Public DummyCmpStatus1Delay As Boolean
        Public DummyCmpStatus1ExtGr As Boolean
        Public DummyCmpStatus1GRep1 As Boolean
        Public DummyCmpStatus1GRep2 As Boolean
        Public DummyCmpStatus1StaNm As Boolean

        Public DummyCmpStatus2Delay As Boolean
        Public DummyCmpStatus2ExtGr As Boolean
        Public DummyCmpStatus2GRep1 As Boolean
        Public DummyCmpStatus2GRep2 As Boolean
        Public DummyCmpStatus2StaNm As Boolean

        Public DummyCmpStatus3Delay As Boolean
        Public DummyCmpStatus3ExtGr As Boolean
        Public DummyCmpStatus3GRep1 As Boolean
        Public DummyCmpStatus3GRep2 As Boolean
        Public DummyCmpStatus3StaNm As Boolean

        Public DummyCmpStatus4Delay As Boolean
        Public DummyCmpStatus4ExtGr As Boolean
        Public DummyCmpStatus4GRep1 As Boolean
        Public DummyCmpStatus4GRep2 As Boolean
        Public DummyCmpStatus4StaNm As Boolean

        Public DummyCmpStatus5Delay As Boolean
        Public DummyCmpStatus5ExtGr As Boolean
        Public DummyCmpStatus5GRep1 As Boolean
        Public DummyCmpStatus5GRep2 As Boolean
        Public DummyCmpStatus5StaNm As Boolean

        Public DummyCmpStatus6Delay As Boolean
        Public DummyCmpStatus6ExtGr As Boolean
        Public DummyCmpStatus6GRep1 As Boolean
        Public DummyCmpStatus6GRep2 As Boolean
        Public DummyCmpStatus6StaNm As Boolean

        Public DummyCmpStatus7Delay As Boolean
        Public DummyCmpStatus7ExtGr As Boolean
        Public DummyCmpStatus7GRep1 As Boolean
        Public DummyCmpStatus7GRep2 As Boolean
        Public DummyCmpStatus7StaNm As Boolean

        Public DummyCmpStatus8Delay As Boolean
        Public DummyCmpStatus8ExtGr As Boolean
        Public DummyCmpStatus8GRep1 As Boolean
        Public DummyCmpStatus8GRep2 As Boolean
        Public DummyCmpStatus8StaNm As Boolean

        Public DummyCmpStatus9Delay As Boolean
        Public DummyCmpStatus9ExtGr As Boolean
        Public DummyCmpStatus9GRep1 As Boolean
        Public DummyCmpStatus9GRep2 As Boolean
        Public DummyCmpStatus9StaNm As Boolean
        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
    End Structure

#End Region

#Region "パルス"

    ''パルス積算チャンネル情報格納
    Public Structure mPulseInfo
        Public RowNo As Integer
        Public RowNoFirst As Integer
        Public RowNoEnd As Integer
        Public SysNo As String
        Public ChNo As String
        Public TagNo As String      '' 2015.10.26 Ver1.7.5 ﾀｸﾞ表示追加
        Public ItemName As String
        Public ValueH As String
        Public ExtGH As String
        Public DelayH As String
        Public GRep1H As String
        Public GRep2H As String
        Public FlagDmy As String
        Public FlagSC As String
        Public FlagSIO As String
        Public FlagGWS As String
        Public FlagWK As String
        Public FlagRL As String
        Public FlagAC As String
        Public FlagEP As String
        Public FlagPLC As String        '' 2014.11.18
        Public FlagSP As String
        Public FlagMin As String
        Public FuNo As String
        Public FUPortNo As String
        Public FUPin As String
        Public DataType As String
        Public Unit As String
        Public strString As String
        Public strDecimalPoint As String
        Public FilterCoef As String
        Public ShareType As String
        Public ShareChNo As String
        Public Remarks As String
        Public Status As String
        Public StatusH As String

        'T.Ueki
        Public RangeLo As String
        Public RangeHi As String

        'T.Ueki
        Public FlagStatusAlarm As String
        



        Public AlmLevel As String      ' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
        Public AlmMimic As String       'Ver2.0.0.2 南日本M761対応 2017.02.27追加
        '▼▼▼ 20110614 仮設定機能対応（パルス） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
        Public DummyExtG As Boolean
        Public DummyDelay As Boolean
        Public DummyGroupRepose1 As Boolean
        Public DummyGroupRepose2 As Boolean
        Public DummyFuAddress As Boolean
        Public DummyUnitName As Boolean
        Public DummyStatusName As Boolean
        Public DummyAlarmValue As Boolean
        Public DummyAlarmStatus As Boolean
        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
    End Structure

#End Region

#Region "システム（コメントアウト）"

    ' ''システムチャンネル情報格納
    'Public Structure mSystemInfo
    '    Public RowNo As Integer
    '    Public RowNoFirst As Integer
    '    Public RowNoEnd As Integer
    '    Public SysNo As String
    '    Public ChNo As String
    '    Public ItemName As String
    '    Public ExtGH As String
    '    Public DelayH As String
    '    Public GRep1H As String
    '    Public GRep2H As String
    '    Public FlagDmy As String
    '    Public FlagSC As String
    '    Public FlagSIO As String
    '    Public FlagGWS As String
    '    Public FlagWK As String
    '    Public FlagRL As String
    '    Public FlagAC As String
    '    Public FlagEP As String
    '    Public FlagPrt1 As String
    '    Public FlagPrt2 As String
    '    Public FlagMin As String
    '    Public FuNo As String
    '    Public FUPortNo As String
    '    Public FUPin As String
    '    Public DataType As String
    '    Public PortNo As String
    '    Public Status As String
    '    Public FlagStatusAlarm As Boolean
    '    Public FilterCoef As String
    '    Public ShareType As String
    '    Public ShareChNo As String
    '    Public Remarks As String

    '    ''16ステータス分
    '    Public DeviceStatus As String
    '    Public DeviceStatusUse() As Boolean
    '    Public DeviceStatusCode() As String
    '    Public DeviceStatusName() As String
    'End Structure
    'Private mSystemData As mSystemInfo

#End Region

#Region "PID"

    'PIDチャンネル情報格納
    Public Structure mPIDInfo
        Public RowNo As Integer
        Public RowNoFirst As Integer
        Public RowNoEnd As Integer
        Public SysNo As String
        Public ChNo As String
        Public TagNo As String
        Public ItemName As String
        Public ValueHH As String
        Public ValueH As String
        Public ValueL As String
        Public ValueLL As String
        Public ValueSF As String
        Public ExtGHH As String
        Public ExtGH As String
        Public ExtGL As String
        Public ExtGLL As String
        Public ExtGSF As String
        Public DelayHH As String
        Public DelayH As String
        Public DelayL As String
        Public DelayLL As String
        Public DelaySF As String
        Public GRep1HH As String
        Public GRep1H As String
        Public GRep1L As String
        Public GRep1LL As String
        Public GRep1SF As String
        Public GRep2HH As String
        Public GRep2H As String
        Public GRep2L As String
        Public GRep2LL As String
        Public GRep2SF As String
        Public StatusHH As String
        Public StatusH As String
        Public StatusL As String
        Public StatusLL As String
        Public FlagDmy As String
        Public FlagSC As String
        Public FlagSIO As String
        Public FlagGWS As String
        Public FlagWK As String
        Public FlagRL As String
        Public FlagAC As String
        Public FlagEP As String
        Public FlagPLC As String
        Public FlagSP As String
        Public FlagMin As String
        Public FuNo As String
        Public FUPortNo As String
        Public FUPin As String
        Public DataType As String
        Public PortNo As String
        Public RangeType As String
        Public RangeFrom As String
        Public RangeTo As String
        Public Status As String
        Public NormalLO As String
        Public NormalHI As String
        Public DecimalPosition As String
        Public OffSet As String
        Public Unit As String
        Public strString As String
        Public FlagCenterGraph As Boolean
        Public FlagPowerFactor As Integer
        Public FlagPSDisp As Boolean
        Public ShareType As String
        Public ShareChNo As String
        Public Remarks As String
        Public AlmLevel As String
        'PID
        Public OutFuNo As String
        Public OutFUPortNo As String
        Public OutFUPin As String
        Public OutPinNo As String
        Public OutMode As String
        Public CasMode As String
        Public SpTracking As String
        'PID DEF
        Public DefSpHi As String
        Public DefSpLo As String
        Public DefMvHi As String
        Public DefMvLo As String
        Public DefPB As String
        Public DefTI As String
        Public DefTD As String
        Public DefGAP As String
        'PID EXT
        ' 1
        Public ExtPara1 As String
        Public ExtParaHi1 As String
        Public ExtParaLo1 As String
        Public ExtParaName1 As String
        Public ExtParaUnit1 As String
        ' 2
        Public ExtPara2 As String
        Public ExtParaHi2 As String
        Public ExtParaLo2 As String
        Public ExtParaName2 As String
        Public ExtParaUnit2 As String
        ' 3
        Public ExtPara3 As String
        Public ExtParaHi3 As String
        Public ExtParaLo3 As String
        Public ExtParaName3 As String
        Public ExtParaUnit3 As String
        ' 4
        Public ExtPara4 As String
        Public ExtParaHi4 As String
        Public ExtParaLo4 As String
        Public ExtParaName4 As String
        Public ExtParaUnit4 As String
        '▼▼▼ 仮設定機能対応（PID） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
        Public DummyFuAddress As Boolean
        Public DummyStatusName As Boolean
        Public DummyUnitName As Boolean

        Public DummyDelayHH As Boolean
        Public DummyValueHH As Boolean
        Public DummyExtGrHH As Boolean
        Public DummyGRep1HH As Boolean
        Public DummyGRep2HH As Boolean
        Public DummyStaNmHH As Boolean

        Public DummyDelayH As Boolean
        Public DummyValueH As Boolean
        Public DummyExtGrH As Boolean
        Public DummyGRep1H As Boolean
        Public DummyGRep2H As Boolean
        Public DummyStaNmH As Boolean

        Public DummyDelayL As Boolean
        Public DummyValueL As Boolean
        Public DummyExtGrL As Boolean
        Public DummyGRep1L As Boolean
        Public DummyGRep2L As Boolean
        Public DummyStaNmL As Boolean

        Public DummyDelayLL As Boolean
        Public DummyValueLL As Boolean
        Public DummyExtGrLL As Boolean
        Public DummyGRep1LL As Boolean
        Public DummyGRep2LL As Boolean
        Public DummyStaNmLL As Boolean

        Public DummyDelaySF As Boolean
        Public DummyValueSF As Boolean
        Public DummyExtGrSF As Boolean
        Public DummyGRep1SF As Boolean
        Public DummyGRep2SF As Boolean
        Public DummyStaNmSF As Boolean

        Public DummyRangeScale As Boolean
        Public DummyRangeNormalHi As Boolean
        Public DummyRangeNormalLo As Boolean
        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

    End Structure

#End Region


#End Region

#Region "変数定義"

    ''CH ID 格納領域
    Private mintChID(gCstOneGroupChannelMax - 1) As Integer

    ''チャンネルグループ情報 格納領域
    Private mudtChannelGroup As gTypChannelGroup

    ''FCU台数
    Private mintFcuNo As Integer  ''1 or 2

    ''モーターのステータス情報格納
    Private mMotorStatus1() As String
    Private mMotorStatus2() As String
    Private mMotorBitPos1() As String
    Private mMotorBitPos2() As String

    'コピー回数カウント
    Private CopyCount As Integer

    ''フラグ
    Private mFlagChange As Boolean                  ''true: 変更あり            false: 変更なし
    Private mFlagSave As Boolean                    ''true: データ保存　        false: 未保存
    Private mFlagFirst As Boolean                   ''true: 初期化処理中        false: 初期化処理外
    Private mFlagEventCancel As Boolean = False     ''true: イベントキャンセル  false: イベントキャンセル外


    ''グループ画面からのパラメータ情報 ------------------
    Private mSelectGroupNo As Integer                       ''選択済みグループ番号
    Private mSelectGroupIndex As Integer                    ''選択済みグループ情報格納インデックス
    Private mGroupName1(gCstChannelGroupMax - 1) As String  ''Machinery
    Private mGroupName2(gCstChannelGroupMax - 1) As String  ''Cargo
    Private mGroupNo1(gCstChannelGroupMax - 1) As Integer   ''Machinery
    Private mGroupNo2(gCstChannelGroupMax - 1) As Integer   ''Cargo
    Private mGroupIndex(gCstChannelGroupMax - 1) As Integer ''グループ情報格納インデックス
    Private mKubun As Integer                               ''0:Machinery　1:Cargo

    ''---------------------------------------------------
    ''チャンネル情報格納作業メモリ
    Private mChDataGroup(gCstOneGroupChannelMax - 1) As gTypSetChRec

    ''チャンネル情報バックアップ用作業メモリ
    Private mChDataGroupBK(gCstOneGroupChannelMax - 1) As gTypSetChRec

    ''チャンネル情報データ(FU表示名称設定データ)バックアップ用作業メモリ(ケーブルマーク用)
    Private mChDispRec(20) As gTypSetChDispRec

    ''システムチャンネル用(16ステータス分)
    Private mSystemChDeviceStatus(gCstOneGroupChannelMax - 1) As String
    Private mSystemChStatusUse(gCstOneGroupChannelMax - 1, 15) As Boolean
    Private mSystemChStatusCode(gCstOneGroupChannelMax - 1, 15) As String
    Private mSystemChStatusName(gCstOneGroupChannelMax - 1, 15) As String

    ''---------------------------------------------------
    ''コンポジットテーブル使用フラグ
    ''既に使用CH設定済みのテーブル + 一時保存のテーブルのテーブル使用状況
    ''（ChList - ChCompositeSet - CompositeList - CompositeDetail 間で使用する）
    ''           ChValve(DiDo)Set
    Private mblnCompositeTableUse() As Boolean

    ''詳細データ
    Private mAnalogData As mAnalogInfo          ''アナログ
    Private mDigitalData As mDigitalInfo        ''デジタル
    Private mMotorData As mMotorInfo            ''モーター
    Private mValveData As mValveInfo            ''バルブ
    Private mCompositeData As mCompositeInfo    ''コンポジット
    Private mPulseData As mPulseInfo            ''パルス

    'Ver2.0.6.5 PID
    Private mPidData As mPIDInfo                'PID

#End Region

#Region "画面イベント"

    '--------------------------------------------------------------------
    ' 機能      : 画面表示関数
    ' 返り値    : 0:SAVE  <> 0:キャンセル
    ' 引き数    : ARG1 - (I ) 選択済みグループNo
    '           : ARG2 - (I ) 選択済みグループNoの構造体インデックス(=チャンネル構造体のグループ番号)
    '           : ARG3 - (I ) グループ名1（Machinery）
    '           : ARG3 - (I ) グループ名2（Cargo）
    '           : ARG4 - (I ) グループNO1（Machinery）
    '           : ARG5 - (I ) グループNO2（Cargo）
    '           : ARG6 - (I ) グループインデックス（構造体インデックス）
    '           : ARG7 - (I ) マシナリー/カーゴ区分（0:Machinery　1:Cargo）
    '--------------------------------------------------------------------
    Friend Function gShow(ByVal hSelectGroupNo As Integer, _
                          ByVal hSelectGroupIndex As Integer, _
                          ByVal hGroupName1() As String, _
                          ByVal hGroupName2() As String, _
                          ByVal hGroupNo1() As Integer, _
                          ByVal hGroupNo2() As Integer, _
                          ByVal hGroupIndex() As Integer, _
                          ByVal hKubun As Integer, _
                          ByRef frmOwner As Form) As Integer

        Try

            ''グループ情報GET
            For i As Integer = 0 To gCstChannelGroupMax - 1
                mGroupName1(i) = hGroupName1(i)
                mGroupName2(i) = hGroupName2(i)
                mGroupNo1(i) = hGroupNo1(i)
                mGroupNo2(i) = hGroupNo2(i)
                mGroupIndex(i) = hGroupIndex(i)
                mKubun = hKubun
            Next

            ''選択済みグループNo
            mSelectGroupNo = hSelectGroupNo

            ''選択済みグループNoの構造体インデックス
            mSelectGroupIndex = hSelectGroupIndex

            Call gShowFormModelessForCloseWait2(Me, frmOwner)

            gShow = IIf(mFlagSave, 0, 1)

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : フォームロード
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : 画面表示初期処理を行う
    '--------------------------------------------------------------------
    Private Sub frmChListChannelList_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        Try
            'Ver2.0.1.5 画面キャプションにﾌｧｲﾙ番号設定
            Me.Text = "[" & gudtFileInfo.strFileVersion & "] " & Me.Text

            'Ver2.0.2.8 ｳｨﾝﾄﾞｳｻｲｽﾞを保持するように変更
            Me.Height = m_ChListWndH
            Me.Width = m_ChListWndW

            'Ver2.0.2.9
            'ShaerCH USE
            If gudt.SetSystem.udtSysFcu.shtShareChUse = 1 Then
                'ShareChkﾎﾞﾀﾝ表示
                cmdShareChk.Visible = True
            Else
                'ShareChkﾎﾞﾀﾝ非表示
                cmdShareChk.Visible = False
            End If


            grdCHList.Enabled = False

            ''参照モードの設定
            Call gSetChListDispOnly(Me, cmdSave)
            RemoveHandler Me.FormClosing, AddressOf frmChListChannelList_FormClosing

            ''初期化中フラグON
            mFlagFirst = True

            ''チャンネルグループ情報取得
            Call gMakeChannelGroupData(gudt.SetChInfo, mudtChannelGroup)

            ''チャネルの最大数を確認する
            Call mGetChannelMax(gudt.SetChInfo.udtChannel)

            ''選択済みグループの情報をGET
            mChDataGroup = mudtChannelGroup.udtGroup(mSelectGroupIndex).udtChannelData

            ''配列初期化(システムCH用)
            ReDim mDigitalData.DeviceStatusUse(15)
            ReDim mDigitalData.DeviceStatusCode(15)
            ReDim mDigitalData.DeviceStatusName(15)

            ''配列初期化(モーターCH用)
            ReDim mMotorData.StatusDO(7)

            ''配列初期化(バルブCH用)
            ReDim mValveData.StatusDO(7)

            '▼▼▼ 20110627 FCU2台設定≠コンバイン 対応 ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
            ''FCU構成台数
            mintFcuNo = gudt.SetSystem.udtSysFcu.shtFcuNo
            '---------------------------------------------------------------------------------
            ' ''コンバイン設定時のみ 2 をセットする
            ' ''（mintFcuCnt = 2 をコンバイン設定の判断としているため）
            'If gChkCombineSetting() Then
            '    mintFcuCnt = 2
            'Else
            '    mintFcuCnt = 1
            'End If
            '---------------------------------------------------------------------------------
            ' ''FCU構成台数
            'mintFcuCnt = gudt.SetSystem.udtSysFcu.shtFcuCnt

            ' ''FCU 1台の場合もコンバイン設定が有りの場合は2をセットする
            'If mintFcuCnt = 1 Then
            '    If gudt.SetSystem.udtSysSystem.shtCombineUse = 1 Then
            '        mintFcuCnt = 2
            '    End If
            'End If
            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

            ''モーターチャンネルのステータス情報を獲得する
            Call GetStatusMotor2(mMotorStatus1, mMotorStatus2, "StatusMotor", mMotorBitPos1, mMotorBitPos2)

            ''グループNoコンボ 値セット
            Dim dstTbl As New DataSet
            Dim strWk(1) As String

            dstTbl.Tables.Add("Table1")
            dstTbl.Tables(0).Columns.Add("Index")
            dstTbl.Tables(0).Columns.Add("Group")

            For i As Integer = 0 To gCstChannelGroupMax - 1

                strWk(0) = mGroupIndex(i)
                strWk(1) = mGroupNo1(i).ToString("00") & ":" & mGroupName1(i).Trim.PadRight(53)

                ''コンバイン時はファイルを分けないように変更     2014.03.12
                ''▼▼▼ 20110627 FCU2台設定≠コンバイン 対応 ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                'If gChkCombineSetting() Then
                '    strWk(1) += "" & mGroupNo2(i).ToString("00") & ":" & mGroupName2(i).Trim.PadRight(53)
                'End If
                ''---------------------------------------------------------------------------------
                ''If mintFcuCnt = 2 Then
                ''    strWk(1) += "" & mGroupNo2(i).ToString("00") & ":" & mGroupName2(i).Trim.PadRight(53)
                ''End If
                ''▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                Call dstTbl.Tables(0).Rows.Add(strWk)
            Next

            cmbGroup.DataSource = Nothing
            cmbGroup.Items.Clear()
            cmbGroup.ValueMember = dstTbl.Tables(0).Columns(0).ColumnName
            cmbGroup.DisplayMember = dstTbl.Tables(0).Columns(1).ColumnName
            cmbGroup.DataSource = dstTbl.Tables(0)
            cmbGroup.SelectedIndex = -1

            mFlagFirst = False

            ''グリッドを初期化する
            grdCHList.Rows.Clear()
            Call mInitialDataGrid()

            ''選択済みグループ Select　-----------------------------------------
            ''　　SelectedIndexChangedイベントが発生しデータのセットを行う -----
            cmbGroup.SelectedValue = mSelectGroupIndex
            ''------------------------------------------------------------------

            ''コンポジットテーブル使用フラグ初期化
            Call gInitCompositeTableUse(mblnCompositeTableUse)

            mFlagSave = False
            mFlagChange = False
            mFlagFirst = False

            'エラー一覧初期化
            For i As Integer = 0 To UBound(gChListWarningData, 1) Step 1
                For j As Integer = 0 To UBound(gChListWarningData, 2) Step 1
                    gChListWarningData(i, j) = ""
                Next j
            Next i
        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    Private Sub frmChListChannelList_Shown(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Shown

        Try

            'ダミーテキストにフォーカス
            txtDummy.Focus()

            tmrShow.Interval = 10
            tmrShow.Enabled = True
            tmrShow.Start()

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    Private Sub tmrShow_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrShow.Tick

        tmrShow.Stop()
        tmrShow.Enabled = False
        grdCHList.Enabled = True

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : Saveボタンクリック
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : 保存処理を行う
    '--------------------------------------------------------------------
    Private Sub cmdSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSave.Click

        Try

            ''入力チェック
            If Not mChkInput() Then Return

            ''データが変更されているか？
            If mFlagChange Then

                Me.Cursor = Cursors.WaitCursor

                '前回チェック時の赤と黄色のバック色を一回初期化
                For i = 0 To grdCHList.Rows.Count - 1

                    For j As Integer = 0 To grdCHList.ColumnCount - 1
                        If i Mod 2 <> 0 Then
                            If i >= 0 And i <= 19 Then
                                If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                    grdCHList.Rows(i).Cells(j).Style.BackColor = gColorGridRowBack
                                End If
                            ElseIf i >= 20 And i <= 39 Then
                                If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                    grdCHList.Rows(i).Cells(j).Style.BackColor = Color.LavenderBlush
                                End If
                            ElseIf i >= 40 And i <= 59 Then
                                If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                    grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Lavender
                                End If
                            ElseIf i >= 60 And i <= 79 Then
                                If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                    grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Beige
                                End If
                            ElseIf i >= 80 And i <= 99 Then
                                If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                    grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Honeydew
                                End If
                            End If
                        Else
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.White
                            End If
                        End If
                    Next
                Next

            ''データ保存処理
            Dim blnSaveDataChkFlg As Boolean = mSaveChData()

            '入力エラー時は処理しない
            If blnSaveDataChkFlg = True Then

                mFlagFirst = True

                ''一覧クリア
                For i As Integer = 0 To grdCHList.RowCount - 1
                    Call mClearCH(i, 0)
                    ' ver1.4.0 2011.07.21 保存時に構造体インデックスをクリア後に再設定
                    '                   保存後継続編集した場合に違うコンポジットテーブルがクリアされる
                    grdCHList(gCstChListColPosIndex, i).Value = Nothing
                Next

                ''画面設定
                Call mSetDisplay()
                Call mSetDisplayDummySettingAll()

                ''コンポジットテーブル使用フラグ初期化
                Call gInitCompositeTableUse(mblnCompositeTableUse)

                'Ver2.0.4.9 センターバーグラフのﾁｪｯｸが実際とあわない問題解消
                grdCHList.RefreshEdit()

                Me.Cursor = Cursors.Default

                ''メッセージ表示
                Call MessageBox.Show("It saved.", Me.Text, MessageBoxButtons.OK, MessageBoxIcon.Information)

                ''更新フラグ設定
                gblnUpdateAll = True
                gudt.SetEditorUpdateInfo.udtSave.bytChannel = 1
                gudt.SetEditorUpdateInfo.udtSave.bytChConvNow = 1
                gudt.SetEditorUpdateInfo.udtSave.bytChConvPrev = 1
                gudt.SetEditorUpdateInfo.udtCompile.bytChannel = 1
                gudt.SetEditorUpdateInfo.udtCompile.bytChConvNow = 1
                gudt.SetEditorUpdateInfo.udtCompile.bytChConvPrev = 1

                '' 端子設定も保存  2014.01.17
                gudt.SetEditorUpdateInfo.udtSave.bytChDisp = 1
                gudt.SetEditorUpdateInfo.udtCompile.bytChDisp = 1

                mFlagChange = False
                mFlagFirst = False

            End If

            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        Finally
            Me.Cursor = Cursors.Default
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： ErrChkボタン クリック
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub cmdErrCHK_Click(sender As System.Object, e As System.EventArgs) Handles cmdErrCHK.Click
        'Ver2.0.1.8
        'Save前のｴﾗｰﾁｪｯｸと同様の処理を行う
        Try
            Me.Cursor = Cursors.WaitCursor

            '前回チェック時の赤と黄色のバック色を一回初期化
            For i = 0 To grdCHList.Rows.Count - 1

                For j As Integer = 0 To grdCHList.ColumnCount - 1
                    If i Mod 2 <> 0 Then
                        If i >= 0 And i <= 19 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = gColorGridRowBack
                            End If
                        ElseIf i >= 20 And i <= 39 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.LavenderBlush
                            End If
                        ElseIf i >= 40 And i <= 59 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Lavender
                            End If
                        ElseIf i >= 60 And i <= 79 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Beige
                            End If
                        ElseIf i >= 80 And i <= 99 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Honeydew
                            End If
                        End If
                    Else
                        If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                            grdCHList.Rows(i).Cells(j).Style.BackColor = Color.White
                        End If
                    End If
                Next
            Next

            frmChListWarning.Close()

            Dim intCHCount As Integer = 0
            Dim intCol As Integer = 0

            Dim blnCautFlg As Boolean = True
            Dim blnSaveOKFlg As Boolean = True
            Dim blnChkFlg As Integer

            '保存前のチェック
            For intCHCount = 0 To gCstOneGroupChannelMax - 1
                For intCol = 0 To gCstChListColPosFlagMotorColor  '' 116→117 ver2.0.8.C 2018.11.14
                    gChkChList(intCol) = grdCHList(intCol, intCHCount).Value
                Next

                blnChkFlg = SetInputDataChk(gChkChList, intCHCount)

                'どこか一か所でもエラーが発生した場合確実に保存しない
                If blnChkFlg = 20 Then
                    blnSaveOKFlg = False
                End If
                If blnChkFlg = 10 Then
                    blnCautFlg = False
                End If
            Next
            If blnSaveOKFlg = True Or blnCautFlg = True Then
                frmChListWarning.Show()
                Me.Focus()
            End If
            

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        Finally
            Me.Cursor = Cursors.Default
        End Try
    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： ShareChkボタン クリック
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub cmdShareChk_Click(sender As System.Object, e As System.EventArgs) Handles cmdShareChk.Click
        'Ver2.0.2.9
        'Shareのﾁｪｯｸを行う
        Dim i As Integer = 0
        Dim j As Integer = 0

        Try
            Me.Cursor = Cursors.WaitCursor

            '前回チェック時の赤と黄色のバック色を一回初期化
            For i = 0 To grdCHList.Rows.Count - 1

                For j = 0 To grdCHList.ColumnCount - 1
                    If i Mod 2 <> 0 Then
                        If i >= 0 And i <= 19 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = gColorGridRowBack
                            End If
                        ElseIf i >= 20 And i <= 39 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.LavenderBlush
                            End If
                        ElseIf i >= 40 And i <= 59 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Lavender
                            End If
                        ElseIf i >= 60 And i <= 79 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Beige
                            End If
                        ElseIf i >= 80 And i <= 99 Then
                            If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                                grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Honeydew
                            End If
                        End If
                    Else
                        If grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Red Or grdCHList.Rows(i).Cells(j).Style.BackColor = Color.Yellow Then
                            grdCHList.Rows(i).Cells(j).Style.BackColor = Color.White
                        End If
                    End If
                Next j
            Next i

            'ShareTypeがNothing以外のCH色変え
            For i = 0 To grdCHList.Rows.Count - 1 Step 1
                If NZf(grdCHList.Rows(i).Cells(gCstChListColPosChNo).Value) <> "" Then
                    If NZfZero(grdCHList.Rows(i).Cells(gCstChListColPosShareType).Value) <> "0" Then
                        grdCHList.Rows(i).Cells(gCstChListColPosChNo).Style.BackColor = Color.Yellow
                    End If
                End If
            Next i

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        Finally
            Me.Cursor = Cursors.Default

            MessageBox.Show("OK.", "ShareType Check", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Try
    End Sub


    '--------------------------------------------------------------------
    ' 機能      : フォームクローズ中
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : 設定が変更されている場合は確認メッセージを表示する
    '--------------------------------------------------------------------
    Private Sub frmChListChannelList_FormClosing(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing

        Try
            'Ver2.0.0.2 重度でも注意でもエラーがあった場合のエラーﾀﾞｲｱﾛｸﾞ消去
            frmChListWarning.Close()

            If mFlagChange Then

                ''変更されている場合はメッセージ表示
                Select Case MessageBox.Show("Setting has been changed." & vbNewLine & _
                                            "Do you save the changes?", Me.Text, MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question)

                    Case Windows.Forms.DialogResult.Yes

                        ''入力チェック
                        If Not mChkInput() Then
                            e.Cancel = True
                            Return
                        End If

                        ''データ保存処理
                        Dim blnSaveDataChkFlg As Boolean = mSaveChData()

                        'エラーの場合は処理しない
                        If blnSaveDataChkFlg = True Then

                            ''更新フラグ設定
                            gblnUpdateAll = True
                            gudt.SetEditorUpdateInfo.udtSave.bytChannel = 1
                            gudt.SetEditorUpdateInfo.udtSave.bytChConvNow = 1
                            gudt.SetEditorUpdateInfo.udtSave.bytChConvPrev = 1
                            gudt.SetEditorUpdateInfo.udtCompile.bytChannel = 1
                            gudt.SetEditorUpdateInfo.udtCompile.bytChConvNow = 1
                            gudt.SetEditorUpdateInfo.udtCompile.bytChConvPrev = 1

                            '' 端子設定も保存  2014.01.17
                            gudt.SetEditorUpdateInfo.udtSave.bytChDisp = 1
                            gudt.SetEditorUpdateInfo.udtCompile.bytChDisp = 1
                        Else
                            '保存しないとした場合画面を閉じない
                            e.Cancel = True
                        End If

                    Case Windows.Forms.DialogResult.No

                        ''何もしない

                    Case Windows.Forms.DialogResult.Cancel

                        ''画面を閉じない
                        e.Cancel = True

                End Select

            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： フォームクローズ
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub frmChListChannelList_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed

        Try
            Me.Dispose()
        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： Exitボタン クリック
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub cmdExit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdExit.Click

        Try
            'Ver2.0.0.2 重度でも注意でもエラーがあった場合のエラーﾀﾞｲｱﾛｸﾞ消去
            frmChListWarning.Close()

            If cmdSave.Enabled = True Then

                If mFlagChange Then

                    ''変更されている場合はメッセージ表示
                    Select Case MessageBox.Show("Setting has been changed." & vbNewLine & _
                                                "Do you save the changes?", Me.Text, MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question)

                        Case Windows.Forms.DialogResult.Yes

                            ''入力チェック
                            If Not mChkInput() Then
                                Return
                            End If

                            'Ver2.0.0.0 保存しないのに画面遷移してしまう対策
                            ''データ保存処理
                            If mSaveChData() = True Then
                                ''更新フラグ設定
                                gblnUpdateAll = True
                                gudt.SetEditorUpdateInfo.udtSave.bytChannel = 1
                                gudt.SetEditorUpdateInfo.udtSave.bytChConvNow = 1
                                gudt.SetEditorUpdateInfo.udtSave.bytChConvPrev = 1
                                gudt.SetEditorUpdateInfo.udtCompile.bytChannel = 1
                                gudt.SetEditorUpdateInfo.udtCompile.bytChConvNow = 1
                                gudt.SetEditorUpdateInfo.udtCompile.bytChConvPrev = 1

                                '' 端子設定も保存  2014.01.17
                                gudt.SetEditorUpdateInfo.udtSave.bytChDisp = 1
                                gudt.SetEditorUpdateInfo.udtCompile.bytChDisp = 1
                            Else
                                ''画面を閉じない
                                Return
                            End If
                        Case Windows.Forms.DialogResult.No

                            ''何もしない

                        Case Windows.Forms.DialogResult.Cancel

                            ''画面を閉じない
                            Return

                    End Select

                End If

            End If

            Me.Close()

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： Printボタン クリック
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub btnPrintPrev_Click(sender As System.Object, e As System.EventArgs) Handles btnPrintPrev.Click
        Try
            'Ver2.0.1.3 印刷は直接印刷プレビューではなく、いったん印刷設定へ行くように変更
            'frmPrtChannelPreview.mCHNoFg = chkCHNo.Checked
            'Call frmPrtChannelPreview.gShow(1, 0, 0, 0, chkSecretChannel.Checked, chkDummyData.Checked, "", mSelectGroupIndex + 1)

            If mFlagChange = True Then
                ''データ保存処理
                Dim blnSaveDataChkFlg As Boolean = mSaveChData()

                'エラーの場合は処理しない
                If blnSaveDataChkFlg = True Then

                    ''更新フラグ設定
                    gblnUpdateAll = True
                    gudt.SetEditorUpdateInfo.udtSave.bytChannel = 1
                    gudt.SetEditorUpdateInfo.udtSave.bytChConvNow = 1
                    gudt.SetEditorUpdateInfo.udtSave.bytChConvPrev = 1
                    gudt.SetEditorUpdateInfo.udtCompile.bytChannel = 1
                    gudt.SetEditorUpdateInfo.udtCompile.bytChConvNow = 1
                    gudt.SetEditorUpdateInfo.udtCompile.bytChConvPrev = 1

                    '' 端子設定も保存  2014.01.17
                    gudt.SetEditorUpdateInfo.udtSave.bytChDisp = 1
                    gudt.SetEditorUpdateInfo.udtCompile.bytChDisp = 1
                Else
                    Return
                End If
            End If
            gintChPrintGrNo = mSelectGroupIndex + 1
            frmPrtChannel.ShowDialog()

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try
    End Sub


    '--------------------------------------------------------------------
    ' 機能説明  ： グリッドエラー
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub grdCHList_DataError(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewDataErrorEventArgs) Handles grdCHList.DataError

        Try

            'If Not (e.Exception Is Nothing) Then
            '    MessageBox.Show(Me, _
            '        String.Format("(Column:{0}, Row:{1}) のセルでエラーが発生しました。" + _
            '            vbCrLf + vbCrLf + "説明: {2}", _
            '            e.ColumnIndex, e.RowIndex, e.Exception.Message), _
            '        "エラーが発生しました", _
            '        MessageBoxButtons.OK, _
            '        MessageBoxIcon.Error)
            'End If

            ''エラーが発生した時に、元の値に戻るようにする
            e.Cancel = False

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： グリッドの横スクロールを連動させる
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub grdCHList_Scroll(ByVal sender As Object, ByVal e As System.Windows.Forms.ScrollEventArgs) Handles grdCHList.Scroll

        Try

            grdHead1.HorizontalScrollingOffset = grdCHList.HorizontalScrollingOffset

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    Private Sub frmChListChannelList_Resize(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Resize

        Try

            grdHead1.HorizontalScrollingOffset = grdCHList.HorizontalScrollingOffset

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '----------------------------------------------------------------------------
    '  ｳｨﾝﾄﾞｳｻｲｽﾞ変更完了時
    '
    '   Ver2.0.2.8 ｳｨﾝﾄﾞｳｻｲｽﾞを保持するように変更
    '----------------------------------------------------------------------------
    Private Sub frmChListChannelList_ResizeEnd(sender As Object, e As System.EventArgs) Handles Me.ResizeEnd
        m_ChListWndH = Me.Height
        m_ChListWndW = Me.Width
    End Sub

    '--------------------------------------------------------------------
    ' 機能      ： 行ダブルクリック
    ' 引数      ： なし
    ' 戻値      ： なし
    ' 機能説明　： チャンネルタイプ選択画面を表示する  or  チャンネル詳細画面を表示する
    '--------------------------------------------------------------------
    Private Sub grdCHList_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdCHList.CellDoubleClick

        Try

            Dim iChType As Integer, iFlg As Integer = 0, iMode As Integer = 0
            Dim iChFlag As Integer = 0, iCnt As Integer = 0
            Dim i As Integer = 0
            Dim intRowFirst As Integer, intRowEnd As Integer

            If e.RowIndex < 0 Then Exit Sub

            Dim dgv As DataGridView = CType(sender, DataGridView)
            If e.ColumnIndex >= 0 And dgv.CurrentCell.OwningColumn.Name.Substring(0, 3) = "cmb" Then Exit Sub

            If grdCHList(0, e.RowIndex).Value = Nothing Then

                ''チャンネルタイプ選択画面表示
                iChType = frmChListSelectType.gShow(Me)

                If iChType = 0 Then
                    iFlg = 1    ''Cancel
                Else
                    grdCHList(0, e.RowIndex).Value = iChType.ToString
                    iMode = 1   ''チャンネルタイプ選択画面を経緯
                End If

            End If

            If iFlg = 0 Then

                ''設定済みCHの最初と最後をサーチする
                For rw As Integer = 0 To grdCHList.RowCount - 1

                    If grdCHList(0, rw).Value <> Nothing Then
                        If iCnt = 0 Then
                            intRowFirst = rw
                            intRowEnd = rw
                        Else
                            intRowEnd = rw
                        End If
                        iCnt += 1
                    End If

                Next

                iCnt = 0
                Do Until iChFlag = 9

                    ''チャンネル情報を内部メモリに格納 ============================
                    grdCHList.EndEdit()
                    Call mGetChannelInfo(e.RowIndex + iCnt, intRowFirst, intRowEnd)
                    ''=============================================================

                    Select Case grdCHList(0, e.RowIndex + iCnt).Value

                        Case gCstCodeChTypeAnalog       ''アナログ

                            ''詳細画面表示 -----------------------------------------
                            If frmChListAnalog.gShow(mAnalogData, iChFlag, Me) = 0 Then

                                ''チャンネル情報を更新
                                Call mSetChannelInfo(e.RowIndex + iCnt)
                            Else

                                If iMode = 1 Then grdCHList(0, e.RowIndex + iCnt).Value = gCstCodeChTypeNothing.ToString
                            End If

                        Case gCstCodeChTypeDigital      ''デジタル

                            ''詳細画面表示 -----------------------------------------
                            If frmChListDigital.gShow(mDigitalData, iChFlag, Me) = 0 Then

                                ''チャンネル情報を更新
                                Call mSetChannelInfo(e.RowIndex + iCnt)
                            Else

                                If iMode = 1 Then grdCHList(0, e.RowIndex + iCnt).Value = gCstCodeChTypeNothing.ToString
                            End If

                        Case gCstCodeChTypeMotor        ''モーター

                            ''詳細画面表示 -----------------------------------------
                            If frmChListMotor.gShow(mMotorData, iChFlag, Me) = 0 Then

                                ''チャンネル情報を更新
                                Call mSetChannelInfo(e.RowIndex + iCnt)
                            Else

                                If iMode = 1 Then grdCHList(0, e.RowIndex + iCnt).Value = gCstCodeChTypeNothing.ToString
                            End If

                        Case gCstCodeChTypeValve        ''バルブ

                            ''詳細画面表示 -----------------------------------------
                            If frmChListValve.gShow(mValveData, mblnCompositeTableUse, iChFlag, Me) = 0 Then

                                ''チャンネル情報を更新
                                Call mSetChannelInfo(e.RowIndex + iCnt)
                            Else

                                If iMode = 1 Then grdCHList(0, e.RowIndex + iCnt).Value = gCstCodeChTypeNothing.ToString
                            End If

                        Case gCstCodeChTypeComposite    ''デジタルコンポジット

                            ''詳細画面表示 -----------------------------------------
                            If frmChListComposite.gShow(mCompositeData, mblnCompositeTableUse, iChFlag, Me) = 0 Then

                                ''チャンネル情報を更新
                                Call mSetChannelInfo(e.RowIndex + iCnt)
                            Else

                                If iMode = 1 Then grdCHList(0, e.RowIndex + iCnt).Value = gCstCodeChTypeNothing.ToString
                            End If

                        Case gCstCodeChTypePulse        ''パルス

                            ''詳細画面表示 -----------------------------------------
                            If frmChListPulse.gShow(mPulseData, iChFlag, Me) = 0 Then

                                ''チャンネル情報を更新
                                Call mSetChannelInfo(e.RowIndex + iCnt)
                            Else

                                If iMode = 1 Then grdCHList(0, e.RowIndex + iCnt).Value = gCstCodeChTypeNothing.ToString
                            End If

                        Case gCstCodeChTypePID          'PID
                            '詳細画面表示 -----------------------------------------
                            If frmChListPID.gShow(mPidData, iChFlag, Me) = 0 Then
                                ''チャンネル情報を更新
                                Call mSetChannelInfo(e.RowIndex + iCnt)
                            Else
                                If iMode = 1 Then grdCHList(0, e.RowIndex + iCnt).Value = gCstCodeChTypeNothing.ToString
                            End If
                    End Select

                    ''詳細画面からの戻り値のチェック -------------------------------
                    If iChFlag = 0 Then
                        ''LOOP End
                        iChFlag = 9

                    ElseIf iChFlag = 1 Then
                        ''Next CH
                        iCnt += 1
                        For i = e.RowIndex + iCnt To grdCHList.RowCount - 1
                            If grdCHList(0, i).Value <> Nothing Then Exit For
                            iCnt += 1
                        Next
                        grdCHList.CurrentCell = grdCHList(0, e.RowIndex + iCnt)
                        grdCHList.CurrentCell.Selected = True

                    ElseIf iChFlag = 2 Then
                        ''Before CH
                        iCnt -= 1
                        For i = e.RowIndex + iCnt To 0 Step -1
                            If grdCHList(0, i).Value <> Nothing Then Exit For
                            iCnt -= 1
                        Next
                        grdCHList.CurrentCell = grdCHList(0, e.RowIndex + iCnt)
                        grdCHList.CurrentCell.Selected = True
                    End If

                    iMode = 0

                Loop

            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能　　  ： PageUp / PageDown / 矢印ボタン / TAB  クリック時
    ' 引数      ： なし
    ' 戻値      ： なし
    ' 機能説明　： Ctrl + X / Delete / 仮設定Key
    '--------------------------------------------------------------------
    Private Sub grdCHList_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles grdCHList.KeyDown


        Try
            Dim RowIndex As Integer = 0

            If e.KeyCode = Keys.PageDown Then
                ''次のグループへ
                If grdCHList.CurrentRow.Index >= gCstOneGroupChannelMax - 1 Then
                    Dim ColIndex As Integer = grdCHList.CurrentCell.ColumnIndex

                    If cmbGroup.SelectedIndex = cmbGroup.Items.Count - 1 Then
                        cmbGroup.SelectedIndex = 0

                        'Ver2.0.0.2 ADD
                        grdCHList.CurrentCell = grdCHList(ColIndex, 0)
                        grdCHList.CurrentCell.Selected = True

                        e.Handled = True
                    Else

                        cmbGroup.SelectedIndex = cmbGroup.SelectedIndex + 1

                        'Ver2.0.0.2 CHG
                        'grdCHList.CurrentCell = grdCHList(3, 0)
                        grdCHList.CurrentCell = grdCHList(ColIndex, 0)

                        grdCHList.CurrentCell.Selected = True

                        e.Handled = True
                    End If

                End If

            ElseIf e.KeyCode = Keys.PageUp Then

                ''前のグループへ
                If grdCHList.CurrentRow.Index <= 0 Then
                    Dim ColIndex As Integer = grdCHList.CurrentCell.ColumnIndex

                    If cmbGroup.SelectedIndex = 0 Then
                        cmbGroup.SelectedIndex = cmbGroup.Items.Count - 1

                        'Ver2.0.0.2 ADD
                        grdCHList.CurrentCell = grdCHList(ColIndex, 99)
                        grdCHList.CurrentCell.Selected = True

                        e.Handled = True
                    Else
                        cmbGroup.SelectedIndex = cmbGroup.SelectedIndex - 1

                        'Ver2.0.0.2 CHG
                        'grdCHList.CurrentCell = grdCHList(3, 99)
                        grdCHList.CurrentCell = grdCHList(ColIndex, 99)

                        grdCHList.CurrentCell.Selected = True

                        e.Handled = True
                    End If

                End If

            ElseIf e.KeyCode = Keys.Right Then  ''右矢印ボタン（→）

                ''右矢印ボタンで一番右まで移動しても最後の列が表示されないので、強制的にスクロール値を最大にする
                If grdCHList.CurrentCell.ColumnIndex > 85 Then
                    grdCHList.HorizontalScrollingOffset = 3869
                End If

            ElseIf (e.Modifiers And Keys.Control) = Keys.Control And e.KeyCode = Keys.Down Then
                'Ver2.0.2.8 ｺﾝﾄﾛｰﾙ+下↓ﾎﾞﾀﾝの機能をころす
                e.Handled = True
            ElseIf (e.Modifiers And Keys.Control) = Keys.Control And e.KeyCode = Keys.X Then
                ''Ctrl+C を実行する
                SendKeys.Send("^C")
                Application.DoEvents()

                CopyCount = 0
                For Each row As DataGridViewRow In grdCHList.SelectedRows
                    ' 選択されている個々の行「row」についての処理
                    CopyCount = CopyCount + 1
                Next

                ''CHTypeをクリアする
                For i As Integer = 0 To grdCHList.SelectedCells.Count - 1
                    If grdCHList.SelectedCells(i).ColumnIndex = 0 Then
                        mClearCH(grdCHList.SelectedCells(i).RowIndex, gCstCodeChTypeNothing)
                    End If
                Next

            ElseIf e.KeyCode = Keys.Delete Then

                'CHTypeをクリアする
                For i As Integer = 0 To grdCHList.SelectedCells.Count - 1

                    Select Case grdCHList.SelectedCells(i).ColumnIndex

                        Case 0  '行すべてクリア
                            mClearCH(grdCHList.SelectedCells(i).RowIndex, gCstCodeChTypeNothing)
                        Case 10 'ステータスアラーム処理
                            grdCHList(gCstChListColPosStatusAlarm, grdCHList.SelectedCells(i).RowIndex).Value = False
                    End Select

                Next

            ElseIf (e.Modifiers And Keys.Control) = Keys.Control And e.KeyCode = Keys.C Then

                '配列初期化
                gCopyChList = New String(gCstOneGroupChannelMax - 1, 115) {}
                gCopyDummyChList = New Boolean(gCstOneGroupChannelMax - 1, 115) {}

                CopyCount = 0
                For Each row As DataGridViewRow In grdCHList.SelectedRows
                    ' 選択されている個々の行「row」についての処理
                    CopyCount = CopyCount + 1
                Next

                '選択されているセルの行および列番号を取得
                Dim intSelectColNo As Integer = grdCHList.CurrentCell.ColumnIndex
                Dim intSelectRowNo As Integer = grdCHList.CurrentCell.RowIndex


                '列番が0以外の場合は行全体ではないため単体処理
                If intSelectColNo = 0 Then

                    'カウント初期化
                    intgridlineCount = 0

                    If grdCHList.SelectedRows.Count > 0 Then

                        Dim rowDatas(grdCHList.SelectedRows.Count - 1) As DataRow
                        Dim intIndexs(grdCHList.SelectedRows.Count - 1) As Integer

                        Dim i As Integer

                        '選択されている行の番号
                        For i = 0 To grdCHList.SelectedRows.Count - 1
                            intIndexs(i) = grdCHList.SelectedRows(i).Index
                        Next

                        '選択された複数行カウント
                        intgridlineCount = intIndexs.Length - 1

                        Array.Sort(intIndexs)

                        '選択された行すべてをメモリーにコピーする(非表示エリアを含む)
                        For intRowPlace As Integer = 0 To intIndexs.Length - 1
                            For j As Integer = 0 To gCstChListColPosDecimalPoint

                                If j = gCstChListColPosCopyRow Then
                                    gCopyChList(intRowPlace, j) = Trim(Str(intIndexs(intRowPlace)))
                                Else
                                    'CopyRow行は処理しない
                                    gCopyChList(intRowPlace, j) = grdCHList.Rows(intIndexs(intRowPlace)).Cells(j).Value
                                End If
                            Next
                        Next

                        '選択された行のダミー設定をメモリーにコピーする(表示エリアのみ)
                        For intRowPlace As Integer = 0 To intIndexs.Length - 1
                            For j As Integer = 0 To 87
                                gCopyDummyChList(intRowPlace, j) = cSetDummy(grdCHList.Rows(intIndexs(intRowPlace)).Cells(j).Style.BackColor)
                            Next
                        Next

                        '行全体の選択完了
                        blnAllRowFlg = True

                    End If

                    '行全体以外のコピー
                Else

                    '単体コピーへ切り替え
                    blnAllRowFlg = False

                End If

            ElseIf e.KeyCode = gCstDummySetKey Then

                    ''選択されているセルがある場合
                    If grdCHList.SelectedCells.Count > 0 Then

                        Dim blnFlgAnalog As Boolean = False
                        Dim blnFlgAnalogRangeSet(99) As Boolean

                        For i As Integer = 0 To grdCHList.SelectedCells.Count - 1

                            blnFlgAnalog = False

                            With grdCHList.SelectedCells(i)

                                ''仮設定可能な列の場合
                                If mChkDummySetColumn(grdCHList(0, .RowIndex).Value, .ColumnIndex, grdCHList(gCstChListColPosDataType, .RowIndex).Value) Then

                                    ''連動して背景色を変更しなければならない項目の場合
                                    Select Case grdCHList(gCstChListColPosChType, .RowIndex).Value
                                        Case gCstCodeChTypeAnalog, gCstCodeChTypeValve

                                            If .ColumnIndex = gCstChListColPosRangeType _
                                            Or .ColumnIndex = gCstChListColPosRangeHi _
                                            Or .ColumnIndex = gCstChListColPosRangeLo Then

                                                If Not blnFlgAnalogRangeSet(.RowIndex) Then

                                                    ''レンジ関連セルの色を同時に変更
                                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosRangeType).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosRangeType).Style.BackColor, .RowIndex, gCstChListColPosRangeType, grdCHList)
                                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosRangeHi).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosRangeHi).Style.BackColor, .RowIndex, gCstChListColPosRangeHi, grdCHList)
                                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosRangeLo).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosRangeLo).Style.BackColor, .RowIndex, gCstChListColPosRangeLo, grdCHList)
                                                    blnFlgAnalogRangeSet(.RowIndex) = True

                                                End If

                                                blnFlgAnalog = True

                                            End If

                                End Select

                                '' アドレス共通 2014.01.14
                                If .ColumnIndex = gCstChListColPosFuAddress _
                                Or .ColumnIndex = gCstChListColPosPortAddress _
                                Or .ColumnIndex = gCstChListColPosPinAddress Then
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosFuAddress).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosFuAddress).Style.BackColor, .RowIndex, gCstChListColPosFuAddress, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortAddress).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortAddress).Style.BackColor, .RowIndex, gCstChListColPosPortAddress, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinAddress).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinAddress).Style.BackColor, .RowIndex, gCstChListColPosPinAddress, grdCHList)

                                    blnFlgAnalog = True
                                End If

                                '' DIアドレス共通 2014.01.14
                                If .ColumnIndex = gCstChListColPosDiStart _
                                Or .ColumnIndex = gCstChListColPosPortDiStart _
                                Or .ColumnIndex = gCstChListColPosPinDiStart Then
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosDiStart).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosDiStart).Style.BackColor, .RowIndex, gCstChListColPosDiStart, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortDiStart).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortDiStart).Style.BackColor, .RowIndex, gCstChListColPosPortDiStart, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinDiStart).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinDiStart).Style.BackColor, .RowIndex, gCstChListColPosPinDiStart, grdCHList)

                                    blnFlgAnalog = True
                                End If

                                '' DOアドレス共通 2014.01.14
                                If .ColumnIndex = gCstChListColPosDoStart _
                                Or .ColumnIndex = gCstChListColPosPortDoStart _
                                Or .ColumnIndex = gCstChListColPosPinDoStart Then
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosDoStart).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosDoStart).Style.BackColor, .RowIndex, gCstChListColPosDoStart, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortDoStart).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortDoStart).Style.BackColor, .RowIndex, gCstChListColPosPortDoStart, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinDoStart).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinDoStart).Style.BackColor, .RowIndex, gCstChListColPosPinDoStart, grdCHList)

                                    blnFlgAnalog = True
                                End If

                                '' AIアドレス共通 2014.01.14
                                If .ColumnIndex = gCstChListColPosAiTerm _
                                Or .ColumnIndex = gCstChListColPosPortAiTerm _
                                Or .ColumnIndex = gCstChListColPosPinAiTerm Then
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosAiTerm).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosAiTerm).Style.BackColor, .RowIndex, gCstChListColPosAiTerm, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortAiTerm).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortAiTerm).Style.BackColor, .RowIndex, gCstChListColPosPortAiTerm, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinAiTerm).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinAiTerm).Style.BackColor, .RowIndex, gCstChListColPosPinAiTerm, grdCHList)

                                    blnFlgAnalog = True
                                End If

                                '' AOアドレス共通 2014.01.14
                                If .ColumnIndex = gCstChListColPosAoTerm _
                                Or .ColumnIndex = gCstChListColPosPortAoTerm _
                                Or .ColumnIndex = gCstChListColPosPinAoTerm Then
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosAoTerm).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosAoTerm).Style.BackColor, .RowIndex, gCstChListColPosAoTerm, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortAoTerm).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPortAoTerm).Style.BackColor, .RowIndex, gCstChListColPosPortAoTerm, grdCHList)
                                    grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinAoTerm).Style.BackColor = gDummyGetChangeBackColorGrid(grdCHList.Rows(.RowIndex).Cells(gCstChListColPosPinAoTerm).Style.BackColor, .RowIndex, gCstChListColPosPinAoTerm, grdCHList)

                                    blnFlgAnalog = True
                                End If


                                ''連動して背景色を変更しなければならない項目ではなかった場合は選択セルの背景色を変更する
                                If Not blnFlgAnalog Then Call gDummySetColorChangeGrid(grdCHList.SelectedCells(i), grdCHList)

                                ''変更フラグを設定
                                mFlagChange = True

                                End If

                            End With
                        Next
                    End If
            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    Private Sub grdCHList_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles grdCHList.KeyUp

        Try
            ''TABボタン
            If e.KeyCode = Keys.Tab Then

                If grdCHList(0, grdCHList.CurrentRow.Index).Value = Nothing Then

                    If grdCHList.CurrentRow.Index = grdCHList.RowCount - 1 Then
                        grdCHList.CurrentCell = grdCHList(0, grdCHList.CurrentRow.Index)
                        grdCHList.CurrentCell.Selected = True
                        e.Handled = True
                        Return
                    End If

                    grdCHList.CurrentCell = grdCHList(0, grdCHList.CurrentRow.Index + 1)
                    grdCHList.CurrentCell.Selected = True
                    e.Handled = True

                End If

                If grdCHList.CurrentCell.ColumnIndex >= grdCHList.ColumnCount - 2 Then Return

                Dim intFlg As Integer = 0, i As Integer = 0

                Do Until intFlg = 1

                    If grdCHList.CurrentCell.ColumnIndex + i > grdCHList.ColumnCount - 1 Then Return

                    If grdCHList(grdCHList.CurrentCell.ColumnIndex + i, grdCHList.CurrentRow.Index).ReadOnly = False Then

                        grdCHList.CurrentCell = grdCHList(grdCHList.CurrentCell.ColumnIndex + i, grdCHList.CurrentRow.Index)
                        grdCHList.CurrentCell.Selected = True
                        intFlg = 1
                        e.Handled = True

                        ''一番右まで移動しても最後の列が表示されないので、強制的にスクロール値を最大にする
                        If grdCHList.CurrentCell.ColumnIndex > 85 Then

                            grdCHList.HorizontalScrollingOffset = 3869

                        End If

                    End If

                    i += 1
                Loop

            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： KeyPressイベントを発生させる
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub grdCHList_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles grdCHList.EditingControlShowing

        Try

            Dim dgv As DataGridView = CType(sender, DataGridView)
            Dim strColumnName As String

            If TypeOf e.Control Is DataGridViewTextBoxEditingControl Then

                Dim tb As DataGridViewTextBoxEditingControl = CType(e.Control, DataGridViewTextBoxEditingControl)

                ''イベントハンドラを削除
                RemoveHandler tb.KeyPress, AddressOf grdCHList_KeyPress

                ''該当する列ならイベントハンドラを追加する
                strColumnName = dgv.CurrentCell.OwningColumn.Name

                If strColumnName.Substring(0, 3) = "txt" Then

                    AddHandler tb.KeyPress, AddressOf grdCHList_KeyPress

                End If

            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      ： KeyPressイベント発生時処理
    ' 引数      ： なし
    ' 戻値      ： なし
    ' 機能説明  ： 入力制限
    '--------------------------------------------------------------------
    Private Sub grdCHList_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles grdCHList.KeyPress

        Try
            'CTRL+V 'T.Ueki
            If Asc(e.KeyChar) = 22 Then

                For i As Integer = 0 To CopyCount - 1

                    Dim EXTGHi As String = grdCHList(gCstChListColPosExtGrH, grdCHList.CurrentCellAddress.Y + i).Value
                    Dim DataType As String = grdCHList(gCstChListColPosChType, grdCHList.CurrentCellAddress.Y + i).Value

                    'ステータスアラーム処理
                    If DataType = "1" Then
                        'アナログは処理しない
                    Else
                        If IsNumeric(EXTGHi) Then

                            If Val(EXTGHi) >= 0 Then
                                grdCHList(gCstChListColPosStatusAlarm, grdCHList.CurrentCellAddress.Y + i).Value = True
                            Else
                                grdCHList(gCstChListColPosStatusAlarm, grdCHList.CurrentCellAddress.Y + i).Value = False
                            End If
                        End If
                    End If
                Next

            End If

            If Asc(e.KeyChar) >= 0 And Asc(e.KeyChar) <= 31 Then Exit Sub

            If grdCHList.CurrentCell.ReadOnly Then Exit Sub

            Dim strColumnName As String = grdCHList.CurrentCell.OwningColumn.Name
            Dim intChType As Integer = grdCHList(0, grdCHList.CurrentCell.RowIndex).Value

            Select Case strColumnName

                Case "txtSysNo"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(1, dgv, e.KeyChar, True, False, False, False, "0,1,2")

                Case "txtChNo", "txtCompValue", "txtShareChid", "txtSp1_O", "txtSp2_O", "txtHys1_O", "txtHys2_O"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(5, dgv, e.KeyChar, True)

                Case "txtItemName"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(30, dgv, e.KeyChar, False)

                    'Ver2.0.2.0 インテリセンス機能削除
                    'インテリセンス機能
                    'Dim strGetWord As String, intSelStart As Integer
                    'intSelStart = dgv.Text.Length + 1
                    'strGetWord = mIntellisense(grdCHList.CurrentCell.RowIndex, grdCHList.CurrentCell.ColumnIndex, dgv.Text & e.KeyChar.ToString)
                    'If strGetWord <> "" Then
                    '    e.Handled = True
                    '    dgv.Text = strGetWord
                    '    dgv.SelectionStart = intSelStart
                    '    dgv.SelectionLength = strGetWord.Length - intSelStart
                    'End If

                Case "txtDoStatus1", "txtDoStatus2", "txtDoStatus3", "txtDoStatus4", "txtDoStatus5", "txtDoStatus6", "txtDoStatus7", "txtDoStatus8"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(8, dgv, e.KeyChar, False)

                    'Ver2.0.2.0 インテリセンス機能削除
                    'インテリセンス機能
                    'Dim strGetWord As String, intSelStart As Integer
                    'intSelStart = dgv.Text.Length + 1
                    'strGetWord = mIntellisense(grdCHList.CurrentCell.RowIndex, grdCHList.CurrentCell.ColumnIndex, dgv.Text & e.KeyChar.ToString)
                    'If strGetWord <> "" Then
                    '    e.Handled = True
                    '    dgv.Text = strGetWord
                    '    dgv.SelectionStart = intSelStart
                    '    dgv.SelectionLength = strGetWord.Length - intSelStart
                    'End If

                Case "txtRemarks"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(16, dgv, e.KeyChar, False)

                    'Ver2.0.2.0 インテリセンス機能削除
                    'インテリセンス機能
                    'Dim strGetWord As String, intSelStart As Integer
                    'intSelStart = dgv.Text.Length + 1
                    'strGetWord = mIntellisense(grdCHList.CurrentCell.RowIndex, grdCHList.CurrentCell.ColumnIndex, dgv.Text & e.KeyChar.ToString)
                    'If strGetWord <> "" Then
                    '    e.Handled = True
                    '    dgv.Text = strGetWord
                    '    dgv.SelectionStart = intSelStart
                    '    dgv.SelectionLength = strGetWord.Length - intSelStart
                    'End If

                Case "txtValueHH", "txtValueH", "txtValueL", "txtValueLL"
                    '数字(小数点有り, マイナス有り)
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(9, dgv, e.KeyChar, True, True, True)

                    If e.KeyChar = "-"c And dgv.Text.IndexOf("-") >= 0 Then e.Handled = True

                Case "txtExtGHH", "txtExtGH", "txtExtGL", "txtExtGLL", "txtExtGSF", _
                     "txtGRep1HH", "txtGRep1H", "txtGRep1L", "txtGRep1LL", "txtGRep1SF", _
                     "txtGRep2HH", "txtGRep2H", "txtGRep2L", "txtGRep2LL", "txtGRep2SF", _
                     "txtExtGHH_O", "txtExtGH_O", "txtExtGL_O", "txtExtGLL_O", "txtExtGSF_O", _
                     "txtGRep1HH_O", "txtGRep1H_O", "txtGRep1L_O", "txtGRep1LL_O", "txtGRep1SF_O", _
                     "txtGRep2HH_O", "txtGRep2H_O", "txtGRep2L_O", "txtGRep2LL_O", "txtGRep2SF_O", _
                     "txtComposite"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(2, dgv, e.KeyChar, True)

                Case "txtDelayHH", "txtDelayH", "txtDelayL", "txtDelayLL", "txtDelaySF", "txtFilterCoef"    '' フィルタ定数変更　ver.1.4.4 2012.05.08
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(3, dgv, e.KeyChar, True)

                Case "txtDelayHH_O", "txtDelayH_O", "txtDelayL_O", "txtDelayLL_O", "txtDelaySF_O"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(3, dgv, e.KeyChar, True)

                Case "txtPortNo", "txtSIO", "txtGWS", "txtPulseWidth", "txtSt_O"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(3, dgv, e.KeyChar, True)

                Case "txtAlarmTimeup"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(4, dgv, e.KeyChar, True)

                Case "txtLoNormal", "txtHiNormal"
                    '数字(小数点有り, マイナス有り)
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(9, dgv, e.KeyChar, True, True, True)

                    If e.KeyChar = "-"c And dgv.Text.IndexOf("-") >= 0 Then e.Handled = True

                Case "txtRangeLo", "txtRangeHi"
                    '数字(小数点有り, マイナス有り)
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(9, dgv, e.KeyChar, True, True, True)

                    If e.KeyChar = "-"c And dgv.Text.IndexOf("-") >= 0 Then e.Handled = True

                Case "txtBitCount"
                    If intChType = gCstCodeChTypeValve Then
                        ''バルブ
                        Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                        e.Handled = gCheckTextInput(1, dgv, e.KeyChar, True, False, False, False, "1,2,3,4,5,6,7,8")

                    ElseIf intChType = gCstCodeChTypeComposite Then
                        ''デジタルコンポジット
                        Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                        e.Handled = gCheckTextInput(1, dgv, e.KeyChar, True, False, False, False, "1,2,3,4,5,6,7,8")
                    End If

                Case "txtDecimalPosition", "txtString"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(1, dgv, e.KeyChar, True, False, False, False, "0,1,2,3,4,5,6,7,8")

                Case "txtOffSet", "txtHys_O"
                    '数字(小数点無し, マイナス有り)
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(9, dgv, e.KeyChar, True, True, False)

                    If e.KeyChar = "-"c And dgv.Text.IndexOf("-") >= 0 Then e.Handled = True

                Case "txtUnit"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(8, dgv, e.KeyChar, False)

                Case "txtDmy", "txtSC", "txtWK", "txtRL", "txtAC", "txtEP", "txtPLC", "txtSP", "txtMin"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(1, dgv, e.KeyChar, True, False, False, False, "0,1")

                Case "txtPowerFactor"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(1, dgv, e.KeyChar, True, False, False, False, "0,1,2")

                Case "txtStatusHH", "txtStatusH", "txtStatusL", "txtStatusLL", "txtStatusSF", _
                     "txtStatusHH_O", "txtStatusH_O", "txtStatusL_O", "txtStatusLL_O", "txtStatusSF_O"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(8, dgv, e.KeyChar, False)

                Case "txtStatusOut"

                    'プルダウンに変更 T.Ueki                    

                Case "txtStatusIn"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    Dim p As Integer = 0

                    If intChType = gCstCodeChTypeDigital Or intChType = gCstCodeChTypeComposite Then
                        If e.KeyChar = "/"c Then
                            p = dgv.Text.IndexOf("/")
                            If p >= 0 Then e.Handled = True ''再度スラッシュが入力
                        Else
                            p = dgv.Text.IndexOf("/")
                            If p < 0 Then
                                ''スラッシュがない場合は8文字まで
                                If dgv.Text.Length >= 8 Then e.Handled = True
                            Else
                                ''スラッシュがある場合
                                If dgv.SelectionStart <= p Then
                                    ''カーソルが前半
                                    'Ver2.0.7.L
                                    'If dgv.Text.Substring(0, p).Length >= 8 Then e.Handled = True
                                    If LenB(MidB(dgv.Text, 0, p)) >= 8 Then e.Handled = True

                                Else
                                    ''カーソルが後半
                                    'Ver2.0.7.L
                                    'If dgv.Text.Substring(p + 1).Length >= 8 Then e.Handled = True
                                    If LenB(MidB(dgv.Text, p + 1)) >= 8 Then e.Handled = True
                                End If
                            End If
                        End If
                    ElseIf intChType = gCstCodeChTypeAnalog Then
                        e.Handled = gCheckTextInput(39, dgv, e.KeyChar, False)
                    Else
                        e.Handled = gCheckTextInput(16, dgv, e.KeyChar, False)
                    End If

                Case "txtFUaddress", "txtFUDiStart", "txtFUDoStart", "txtFUAiTerm", "txtFUAoTerm"

                    If (e.KeyChar >= "0"c And e.KeyChar <= "9"c) Then

                        Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                        'MAX LENGTH = 2 Byte
                        If dgv.Text.Length >= 2 Then e.Handled = True

                    Else
                        e.Handled = True
                    End If

                Case "txtVar_O"
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    Dim p As Integer = 0

                    If (e.KeyChar >= "0"c And e.KeyChar <= "9"c) Then    ''数値(0～9)が入力された

                        p = dgv.Text.IndexOf(".")

                        If p < 0 Then
                            ''小数点がない場合は3文字まで
                            If dgv.Text.Length >= 3 Then e.Handled = True
                        Else
                            ''少数点がある場合
                            If dgv.SelectionStart <= p Then

                                ''カーソルが整数部
                                If dgv.Text.Substring(0, p).Length >= 3 Then e.Handled = True

                            Else
                                ''カーソルが小数点以下
                                If dgv.Text.Substring(p + 1).Length >= 1 Then e.Handled = True

                            End If

                        End If

                    ElseIf Asc(e.KeyChar) = 46 Then ''小数点が入力された

                        p = dgv.Text.IndexOf(".")

                        If p >= 0 Then
                            ''再度少数点が入力
                            If Asc(e.KeyChar) = 46 Then e.Handled = True
                        End If

                    Else
                        e.Handled = True
                    End If

                Case "txtAlmMimic"
                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    '0と201～299のため、数値のみ、MAX3桁とする
                    Dim dgv As DataGridViewTextBoxEditingControl = CType(sender, DataGridViewTextBoxEditingControl)
                    e.Handled = gCheckTextInput(3, dgv, e.KeyChar, True, False, False, False)
            End Select

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      ： 入力値をフォーマットする
    ' 引数      ： なし
    ' 戻値      ： なし
    ' 機能説明  ： Data Type、Status Alarmの自動設定
    '--------------------------------------------------------------------
    Private Sub grdCHList_CellValidated(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdCHList.CellValidated

        Try

            If e.RowIndex < 0 Or e.ColumnIndex < 0 Then Exit Sub

            Dim dgv As DataGridView = CType(sender, DataGridView)
            Dim strColumnName As String = dgv.CurrentCell.OwningColumn.Name
            Dim intPortNo As Integer = 0, intPin As Integer = 0
            Dim strValue As String = "", strFuNo As String = ""
            Dim Fuaddress As String = ""

            With dgv.Rows(e.RowIndex)

                If strColumnName = "txtChNo" Then

                    If IsNumeric(.Cells(gCstChListColPosChNo).Value) Then
                        .Cells(gCstChListColPosChNo).Value = Integer.Parse(.Cells(gCstChListColPosChNo).Value).ToString("0000")
                    End If

                ElseIf strColumnName = "txtShareChid" Then

                    If IsNumeric(.Cells(gCstChListColPosShareChid).Value) Then
                        If (.Cells(gCstChListColPosShareChid).Value <> 0) Then  '' Ver1.11.8.7 2016.11.15 CHNo.が0の場合は表示しない
                            .Cells(gCstChListColPosShareChid).Value = Integer.Parse(.Cells(gCstChListColPosShareChid).Value).ToString("0000")
                        End If
                    End If

                ElseIf strColumnName = "txtAlmMimic" Then
                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    If IsNumeric(.Cells(gCstChListColPosAlmMimic).Value) Then
                        If (.Cells(gCstChListColPosAlmMimic).Value <> 0) Then  '0の場合は表示しない
                            .Cells(gCstChListColPosAlmMimic).Value = .Cells(gCstChListColPosAlmMimic).Value
                        End If
                    Else
                        .Cells(gCstChListColPosAlmMimic).Value = ""
                    End If

                ElseIf strColumnName = "txtVar_O" Then

                    If IsNumeric(.Cells(gCstChListColPosOutVar).Value) Then
                        .Cells(gCstChListColPosOutVar).Value = Double.Parse(.Cells(gCstChListColPosOutVar).Value).ToString("0.0")
                    Else
                        .Cells(gCstChListColPosOutVar).Value = ""
                    End If

                    ElseIf strColumnName = "txtFUaddress" Or strColumnName = "txtFUDiStart" Or strColumnName = "txtFUDoStart" Or _
                           strColumnName = "txtFUAiTerm" Or strColumnName = "txtFUAoTerm" Then

                        Select Case strColumnName

                            Case "txtFUaddress"
                                If IsNumeric(.Cells(gCstChListColPosFuAddress).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = .Cells(gCstChListColPosFuAddress).Value
                                End If

                                ''アナログCHのFU Addressの場合、Data Typeを自動設定する
                                If strColumnName = .Cells(gCstChListColPosChType).Value = gCstCodeChTypeAnalog Then
                                    Call mSetDataType(e.RowIndex)
                                End If
                            Case "txtFUDiStart"
                                If IsNumeric(.Cells(gCstChListColPosDiStart).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = .Cells(gCstChListColPosDiStart).Value
                                End If
                            Case "txtFUDoStart"
                                If IsNumeric(.Cells(gCstChListColPosDoStart).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = .Cells(gCstChListColPosDoStart).Value
                                End If
                            Case "txtFUAiTerm"
                                If IsNumeric(.Cells(gCstChListColPosAiTerm).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = .Cells(gCstChListColPosAiTerm).Value
                                End If
                            Case "txtFUAoTerm"
                                If IsNumeric(.Cells(gCstChListColPosAoTerm).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = .Cells(gCstChListColPosAoTerm).Value
                                End If
                        End Select

                        'If grdCHList(e.ColumnIndex, e.RowIndex).Value <> Nothing Then

                        '    grdCHList(e.ColumnIndex, e.RowIndex).Value = .Cells(gCstChListColPosFuAddress).Value

                        '    ''アナログCHのFU Addressの場合、Data Typeを自動設定する
                        '    If strColumnName = "txtFUaddress" And .Cells(gCstChListColPosChType).Value = gCstCodeChTypeAnalog Then
                        '        Call mSetDataType(e.RowIndex)
                        '    End If

                        'End If

                    ElseIf strColumnName = "txtPortaddress" Or strColumnName = "txtPortDiStart" Or strColumnName = "txtPortDoStart" Or _
                           strColumnName = "txtPortAiTerm" Or strColumnName = "txtPortAoTerm" Then

                        Select Case strColumnName

                            Case "txtPortaddress"
                                If IsNumeric(.Cells(gCstChListColPosPortAddress).Value) Then
                                    '2015/4/17 T.Ueki
                                    'grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPortAddress).Value).ToString("0")
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = .Cells(gCstChListColPosPortAddress).Value
                                End If

                            Case "txtPortDiStart"
                                If IsNumeric(.Cells(gCstChListColPosPortDiStart).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPortDiStart).Value).ToString("0")
                                End If

                            Case "txtPortDoStart"
                                If IsNumeric(.Cells(gCstChListColPosPortDoStart).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPortDoStart).Value).ToString("0")
                                End If

                            Case "txtPortAiTerm"
                                If IsNumeric(.Cells(gCstChListColPosPortAiTerm).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPortAiTerm).Value).ToString("0")
                                End If

                            Case "txtPortAoTerm"
                                If IsNumeric(.Cells(gCstChListColPosPortAoTerm).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPortAoTerm).Value).ToString("0")
                                End If

                        End Select

                        'If grdCHList(e.ColumnIndex, e.RowIndex).Value <> Nothing Then
                        '    grdCHList(e.ColumnIndex, e.RowIndex).Value = intPortNo.ToString("0")
                        'End If

                    ElseIf strColumnName = "txtPinaddress" Or strColumnName = "txtPinDiStart" Or strColumnName = "txtPinDoStart" Or _
                           strColumnName = "txtPinAiTerm" Or strColumnName = "txtPinAoTerm" Then

                        Select Case strColumnName

                            Case "txtPinaddress"
                                If IsNumeric(.Cells(gCstChListColPosPinAddress).Value) Then

                                    Select Case grdCHList(gCstChListColPosChType, e.RowIndex).Value

                                        Case gCstCodeChTypeAnalog
                                            '' Ver1.11.1 2016.07.12 緯度・経度 追加
                                            If grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalogModbus Or _
                                                  grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalogExtDev Or _
                                                  grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalogLatitude Or _
                                                  grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalogLongitude Then
                                                grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00000")
                                            Else
                                                If grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalogJacom Or _
                                                   grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalogJacom55 Then
                                                    'そのまま表示
                                                Else
                                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00")
                                                End If

                                            End If
                                        Case gCstCodeChTypeDigital
                                            Select Case grdCHList(gCstChListColPosDataType, e.RowIndex).Value
                                                Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO
                                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00000")
                                            Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO, gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                                                'そのまま表示
                                                Case Else
                                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00")
                                            End Select

                                        Case gCstCodeChTypePulse
                                            If grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypePulseExtDev Then
                                                grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00000")
                                            Else
                                                grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00")
                                            End If

                                            '2016/10/14 JACOM用Port入力位置変更による追加 T.Ueki
                                        Case gCstCodeChTypeValve
                                        If grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValveJacom Or _
                                           grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValveJacom55 Then
                                            'そのまま表示
                                        Else
                                            grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00")
                                        End If

                                            '2016/10/14 JACOM用Port入力位置変更による追加 T.Ueki
                                        Case gCstCodeChTypeMotor
                                        If grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeMotorDeviceJacom Or _
                                        grdCHList(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeMotorDeviceJacom55 Then
                                            'そのまま表示
                                        Else
                                            grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00")
                                        End If
                                    Case Else
                                        'PIN はそのまま表示
                                        grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAddress).Value).ToString("00")
                                End Select
                                End If

                            Case "txtPinDiStart"
                                If IsNumeric(.Cells(gCstChListColPosPinDiStart).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinDiStart).Value).ToString("00")
                                End If

                            Case "txtPinDoStart"
                                If IsNumeric(.Cells(gCstChListColPosPinDoStart).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinDoStart).Value).ToString("00")
                                End If

                            Case "txtPinAiTerm"
                                If IsNumeric(.Cells(gCstChListColPosPinAiTerm).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAiTerm).Value).ToString("00")
                                End If

                            Case "txtPinAoTerm"
                                If IsNumeric(.Cells(gCstChListColPosPinAoTerm).Value) Then
                                    grdCHList(e.ColumnIndex, e.RowIndex).Value = Integer.Parse(.Cells(gCstChListColPosPinAoTerm).Value).ToString("00")
                                End If

                        End Select

                        'If grdCHList(e.ColumnIndex, e.RowIndex).Value <> Nothing Then
                        '    grdCHList(e.ColumnIndex, e.RowIndex).Value = intPin.ToString
                        'End If

                    ElseIf strColumnName = "txtExtGH" Then

                        'T.Ueki ﾊﾟﾙｽ処理追加
                        If .Cells(gCstChListColPosChType).Value = gCstCodeChTypeDigital Or _
                           .Cells(gCstChListColPosChType).Value = gCstCodeChTypeMotor Or _
                            .Cells(gCstChListColPosChType).Value = gCstCodeChTypePulse Or _
                           .Cells(gCstChListColPosChType).Value = gCstCodeChTypeValve And .Cells(gCstChListColPosDataType).Value = gCstCodeChDataTypeValveDI_DO Then

                            '▼▼▼ 2011.09.22 Ext.Gを無しにした場合は自動でStatusAlarmのチェックを外す ▼▼▼▼▼▼▼▼▼
                            ''EXT.Gに値が設定された場合、Status AlarmをTRUEにする
                            If IsNumeric(.Cells(gCstChListColPosExtGrH).Value) Then
                                'T.Ueki 設定値「0」も含める
                                'If CCInt(.Cells(gCstChListColPosExtGrH).Value) >= 1 Then
                                If CCInt(.Cells(gCstChListColPosExtGrH).Value) >= 0 Then
                                    .Cells(gCstChListColPosStatusAlarm).Value = True
                                Else
                                    .Cells(gCstChListColPosStatusAlarm).Value = False
                                End If
                            Else
                                'T.Ueki 2015/4/14
                                If .Cells(gCstChListColPosStatusAlarm).Value = True Then
                                    .Cells(gCstChListColPosStatusAlarm).Value = False
                                End If


                            End If
                        End If

                    End If

            End With

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      ： 行　入力チェック
    ' 引数      ： なし
    ' 戻値      ： なし
    ' 機能説明  ： Range, Normal, Valueの少数点以下桁数をチェックする
    '--------------------------------------------------------------------
    Private Sub grdCHList_RowValidating(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellCancelEventArgs) Handles grdCHList.RowValidating

        Try
            Dim strValue As String
            Dim dblValue As Double
            Dim lngValue As Long
            Dim intDecimalP As Integer, intRow As Integer

            Dim i As Integer

            If e.RowIndex < 0 Or e.ColumnIndex < 0 Then Exit Sub

            If IsNumeric(grdCHList(gCstChListColPosChType, e.RowIndex).Value) = False Then Exit Sub

            ''Range, Normal, Valueの桁あふれを防ぐためのチェック
            ''（小数点以下桁数との兼ね合い）
            intRow = e.RowIndex

            ''少数点以下桁数GET
            If grdCHList(gCstChListColPosDecimalPoint, intRow).ReadOnly = True Then
                ''RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする
                intDecimalP = mGetDecimalPosition(intRow)
            Else
                ''手入力値
                intDecimalP = Val(grdCHList(gCstChListColPosDecimalPoint, intRow).Value)
            End If

            For i = gCstChListColPosRangeLo To gCstChListColPosNormalHi

                Select Case i

                    Case gCstChListColPosRangeLo, gCstChListColPosRangeHi, gCstChListColPosValueH, gCstChListColPosValueL, gCstChListColPosValueHH, gCstChListColPosValueLL, gCstChListColPosNormalLo, gCstChListColPosNormalHi
                        strValue = grdCHList(i, intRow).EditedFormattedValue

                        If IsNumeric(strValue) Then

                            dblValue = Double.Parse(strValue)
                            ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                            lngValue = Int(dblValue * (10 ^ intDecimalP) + 0.5)

                            If lngValue.ToString.Length > 9 And (lngValue > 999999999 Or lngValue < -99999999) Then
                                MsgBox("The digit overflows. " & vbCrLf & _
                                       "Please review the input value and the decimal point. ", MsgBoxStyle.Exclamation, "Input error")
                                e.Cancel = True : Exit Sub
                            End If
                        End If

                    Case Else
                        '処理なし

                End Select

            Next

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： セル　入力チェック
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub grdCHList_CellValidating(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellValidatingEventArgs) Handles grdCHList.CellValidating

        Try

            If e.RowIndex < 0 Or e.ColumnIndex < 0 Then Exit Sub

            Dim dgv As DataGridView = CType(sender, DataGridView)
            Dim intChType As Integer
            Dim intDataType As Integer
            Dim strValue As String
            Dim strMsg As String = ""

            Dim InputErorr As Boolean = False
            
            Dim intPinNo As Integer

            Dim strColumnName As String = grdCHList.CurrentCell.OwningColumn.Name

            intChType = Val(grdCHList(gCstChListColPosChType, e.RowIndex).Value)
            intDataType = Val(grdCHList(gCstChListColPosDataType, e.RowIndex).Value)     ''現設定のData Type
            strValue = grdCHList(e.ColumnIndex, e.RowIndex).EditedFormattedValue


            If strValue <> "" Then

                If IsNumeric(strValue) Then

                    ''オーバーフローを防ぐために
                    If strColumnName.Substring(0, 3) = "txt" Then

                        Select Case strColumnName
                            Case "txtItemName", "txtStatusIn", "txtUnit", "txtRemarks", _
                                 "txtStatusHH", "txtStatusH", "txtStatusL", "txtStatusLL", "txtStatusSF", _
                                 "txtStatusHH_O", "txtStatusH_O", "txtStatusL_O", "txtStatusLL_O", "txtStatusSF_O", _
                                  "txtDoStatus1", "txtDoStatus2", "txtDoStatus3", "txtDoStatus4", "txtDoStatus5", "txtDoStatus6", "txtDoStatus7", "txtDoStatus8"
                                ''文字入力
                                '"txtStatusOut" プルダウンに変更

                            Case "txtValueHH", "txtValueH", "txtValueL", "txtValueLL", "txtVar_O", _
                                 "txtRangeLo", "txtRangeHi", "txtLoNormal", "txtHiNormal", "txtOffSet"
                                ''数値　4Byte
                                If strValue.Length > 9 And (CCInt(strValue) > 999999999 Or CCInt(strValue) < -99999999) Then
                                    MsgBox("The value is illegal.", MsgBoxStyle.Exclamation, "Channel List")
                                    e.Cancel = True : Exit Sub
                                End If

                            Case "txtFUaddress", "txtFUBitCount", "txtFUDiStart", "txtFUDoStart", "txtFUAiStart", "txtFUAoStart"
                                ''数値　4Byte
                                If strValue.Length > 3 Then
                                    MsgBox("The value is illegal.", MsgBoxStyle.Exclamation, "Channel List")
                                    e.Cancel = True : Exit Sub
                                End If

                            Case "txtPortaddress", "txtPortBitCount", "txtPortDiStart", "txtPortDoStart", "txtPortAiStart", "txtPortAoStart"
                                ''数値　4Byte
                                If strValue.Length > 2 Then
                                    MsgBox("The value is illegal.", MsgBoxStyle.Exclamation, "Channel List")
                                    e.Cancel = True : Exit Sub
                                End If

                            Case "txtPinaddress", "txtPinBitCount", "txtPinDiStart", "txtPinDoStart", "txtPinAiStart", "txtPinAoStart"
                                ''数値　4Byte
                                If strValue.Length > 5 Then
                                    MsgBox("The value is illegal.", MsgBoxStyle.Exclamation, "Channel List")
                                    e.Cancel = True : Exit Sub
                                End If

                            Case Else
                                ''数値　2Byte
                                If strValue.Length > 5 Then
                                    MsgBox("The value is illegal.", MsgBoxStyle.Exclamation, "Channel List")
                                    e.Cancel = True : Exit Sub
                                End If
                        End Select

                    End If

                    Select Case strColumnName

                        Case "txtChNo"
                            If Integer.Parse(strValue) > 65535 Then
                                MsgBox("Please set CH No. '1'-'65535'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtShareChid"
                            If Integer.Parse(strValue) > 65535 Then
                                MsgBox("Please set Remote CH No. '1'-'65535'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtAlmMimic"
                            'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                            Dim blMimic As Boolean = False
                            '0と201～299のみ認める
                            If Integer.Parse(strValue) >= 0 Then
                                If Integer.Parse(strValue) = 0 Then
                                    '0はＯＫ
                                    blMimic = True
                                Else
                                    If Integer.Parse(strValue) >= 201 And Integer.Parse(strValue) <= 299 Then
                                        '201～299はOK
                                        blMimic = True
                                    End If
                                End If
                            End If

                            If blMimic = False Then
                                MsgBox("Please set MimicNo '0' or '201'-'299'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtDelayHH", "txtDelayH", "txtDelayL", "txtDelayLL", "txtDelaySF"

                            If Integer.Parse(strValue) > 240 Then
                                MsgBox("Please set Delay '0'-'240'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtDelayHH_O", "txtDelayH_O", "txtDelayL_O", "txtDelayLL_O", "txtDelaySF_O"

                            If Integer.Parse(strValue) > 240 Then
                                MsgBox("Please set Delay '0'-'240'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtExtGHH", "txtExtGH", "txtExtGL", "txtExtGLL", "txtExtGSF", _
                             "txtExtGHH_O", "txtExtGH_O", "txtExtGL_O", "txtExtGLL_O", "txtExtGSF_O"
                            If Integer.Parse(strValue) > 24 Then
                                MsgBox("Please set EXT.G '0'-'24'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtGRep1HH", "txtGRep1H", "txtGRep1L", "txtGRep1LL", "txtGRep1SF", _
                             "txtGRep1HH_O", "txtGRep1H_O", "txtGRep1L_O", "txtGRep1LL_O", "txtGRep1SF_O"
                            If Integer.Parse(strValue) > gCstReposeSet Then
                                MsgBox("Please set G REP1 '0'-'" & gCstReposeSet & "'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtGRep2HH", "txtGRep2H", "txtGRep2L", "txtGRep2LL", "txtGRep2SF", _
                             "txtGRep2HH_O", "txtGRep2H_O", "txtGRep2L_O", "txtGRep2LL_O", "txtGRep2SF_O"
                            If Integer.Parse(strValue) > gCstReposeSet Then
                                MsgBox("Please set G REP2 '0'-'" & gCstReposeSet & "'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtSp1_O"
                            If Integer.Parse(strValue) > 65535 Then
                                MsgBox("Please set Sp1 '0'-'65535'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtSp2_O"
                            If Integer.Parse(strValue) > 65535 Then
                                MsgBox("Please set Sp2 '0'-'65535'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtHys1_O"
                            If Integer.Parse(strValue) > 65535 Then
                                MsgBox("Please set Hys1 '0'-'65535'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtHys2_O"
                            If Integer.Parse(strValue) > 65535 Then
                                MsgBox("Please set Hys2 '0'-'65535'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtVar_O"
                            If Double.Parse(strValue) > 100 Then
                                MsgBox("Please set Var '0'-'100.0'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtSt_O"
                            If Integer.Parse(strValue) = 0 Or Integer.Parse(strValue) > 600 Then
                                MsgBox("Please set St '1'-'600'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtSIO"
                            If Integer.Parse(strValue) > 511 Then
                                MsgBox("Please set SIO '0'-'511'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtGWS"
                            If Integer.Parse(strValue) > 255 Then
                                MsgBox("Please set GWS '0'-'255'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtPortNo"
                            If Integer.Parse(strValue) > 255 Then
                                MsgBox("Please set Port No '0'-'255'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtFilterCoef"
                            If Integer.Parse(strValue) = 0 Or Integer.Parse(strValue) > 250 Then
                                MsgBox("Please set Filter Coeficient '1'-'250'.", MsgBoxStyle.Exclamation, "Channel List")  '' フィルタ定数変更　ver.1.4.4 2012.05.08
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtAlarmTimeup"
                            If Integer.Parse(strValue) > 6000 Then
                                MsgBox("Please set Alarm Timeup Count '0'-'6000'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtPulseWidth"
                            'Ver2.0.7.X パルス出力の時のみ判定
                            If dgv.Rows(e.RowIndex).Cells(gCstChListColPosControlType).Value = 1 Then
                                If Integer.Parse(strValue) = 0 Or Integer.Parse(strValue) > 200 Then
                                    MsgBox("Please set Pulse Width '1'-'200'.", MsgBoxStyle.Exclamation, "Channel List")
                                    e.Cancel = True : Exit Sub
                                End If
                            End If

                        Case "txtRangeLo"
                            If strValue.Substring(0, 1) = "." Then
                                dgv.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = "0" & strValue
                            End If

                            If strValue.Substring(strValue.Length - 1, 1) = "." Then
                                dgv.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = strValue & "0"
                            End If

                            If strValue.Substring(strValue.Length - 1, 1) = "-" Then
                                strValue = "-" & strValue.Substring(0, strValue.Length - 1)
                                dgv.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = strValue
                            End If

                        Case "txtRangeHi"
                            If strValue.Substring(0, 1) = "." Then
                                dgv.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = "0" & strValue
                            End If

                            If strValue.Substring(strValue.Length - 1, 1) = "." Then
                                dgv.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = strValue & "0"
                            End If

                            If strValue.Substring(strValue.Length - 1, 1) = "-" Then
                                strValue = "-" & strValue.Substring(0, strValue.Length - 1)
                                dgv.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = strValue
                            End If

                        Case "txtComposite"
                            If Integer.Parse(strValue) > 64 Then
                                MsgBox("Please set Composite table index '1'-'64'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtPinaddress", "txtPinOutStart"

                            If strColumnName = "txtPinaddress" Then
                                strMsg = "There are injustice data.  [DI Pin Start]"
                            ElseIf strColumnName = "txtPinDiStart" Then
                                strMsg = "There are injustice data.  [DI Pin Start]"
                            ElseIf strColumnName = "txtPinDoStart" Then
                                strMsg = "There are injustice data.  [DO Pin Start]"
                            ElseIf strColumnName = "txtPinAiTerm" Then
                                strMsg = "There are injustice data.  [AI Pin Term]"
                            ElseIf strColumnName = "txtPinAoTerm" Then
                                strMsg = "There are injustice data.  [AO Pin Term]"
                            End If

                            'Pin番号が5桁以下の場合
                            If strValue.Length <= 5 Then
                                intPinNo = Val(strValue)

                                Select Case intChType
                                    Case gCstCodeChTypeAnalog   ''AI
                                        '' 通信CHのアドレスチェックを分ける    2014.12.01
                                        Select Case intDataType
                                            Case gCstCodeChDataTypeAnalogJacom
                                                If intPinNo >= 1 And intPinNo <= 57 Then
                                                Else
                                                    MsgBox("Please set Jacom port no '1'-'57' case of the Analog Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If
                                            Case gCstCodeChDataTypeAnalogJacom55
                                                If intPinNo >= 1 And intPinNo <= 57 Then
                                                Else
                                                    MsgBox("Please set Jacom55 port no '1'-'57' case of the Analog Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If
                                            Case gCstCodeChDataTypeAnalogModbus, gCstCodeChDataTypeAnalogLatitude, gCstCodeChDataTypeAnalogLongitude
                                                If intPinNo >= 1 And intPinNo <= 65535 Then
                                                Else
                                                    MsgBox("Please set pin no '1'-'65535' case of the Analog Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If
                                            Case Else
                                                If intPinNo >= 1 And intPinNo <= 16 Then
                                                Else
                                                    MsgBox("Please set pin no '1'-'16' case of the Analog Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If
                                        End Select

                                    Case gCstCodeChTypeDigital  ''DI
                                        '' 通信CHのアドレスチェックを分ける    2014.12.01
                                        Select Case intDataType
                                            Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO, gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                                                If intPinNo >= 1 And intPinNo <= 200 Then
                                                Else
                                                    MsgBox("Please set Jacom port no '1'-'200' case of the Digital Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If
                                            Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO
                                                If intPinNo >= 1 And intPinNo <= 65535 Then
                                                Else
                                                    MsgBox("Please set pin no '1'-'65535' case of the Digital Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If
                                            Case Else
                                                If intPinNo >= 1 And intPinNo <= 64 Then
                                                Else
                                                    MsgBox("Please set pin no '1'-'64' case of the Digital Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If
                                        End Select

                                    Case gCstCodeChTypeValve    ''Valve CH

                                        Select Case intDataType

                                            Case gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveJacom55
                                                If intPinNo >= 1 And intPinNo <= 44 Then
                                                Else
                                                    MsgBox("Please set Jacom port no '1'-'44'.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If

                                            Case gCstCodeChDataTypeValveDI_DO
                                                If intPinNo >= 1 And intPinNo <= 64 Then
                                                Else
                                                    MsgBox("Please set pin no '1'-'64' case of the Digital Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                    e.Cancel = True : Exit Sub
                                                End If

                                            Case gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, gCstCodeChDataTypeValvePT_DO2

                                                If strColumnName = "txtPinaddress" Then
                                                    If intPinNo >= 1 And intPinNo <= 16 Then
                                                    Else
                                                        MsgBox("Please set pin no '1'-'16' case of the AI or PT type.", MsgBoxStyle.Exclamation, "Channel List")
                                                        e.Cancel = True : Exit Sub
                                                    End If
                                                End If

                                                If strColumnName = "txtPinOutStart" Then
                                                    If intPinNo >= 1 And intPinNo <= 64 Then
                                                    Else
                                                        MsgBox("Please set pin no '1'-'64' case of the DO type.", MsgBoxStyle.Exclamation, "Channel List")
                                                        e.Cancel = True : Exit Sub
                                                    End If
                                                End If
                                        End Select

                                    Case gCstCodeChTypePulse
                                        '' 通信CHのアドレスチェックを分ける    2014.12.01
                                        '' Ver1.11.8.2 2016.11.08 運転積算 通信CH追加
                                        '' Ver1.12.0.1 2017.01.13 運転積算種類追加
                                        If (intDataType = gCstCodeChDataTypePulseExtDev) Or (intDataType >= gCstCodeChDataTypePulseRevoExtDev) Then
                                            If intPinNo >= 1 And intPinNo <= 65535 Then
                                            Else
                                                MsgBox("Please set pin no '1'-'65535' case of the Digital Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                e.Cancel = True : Exit Sub
                                            End If
                                        Else
                                            If intPinNo >= 1 And intPinNo <= 64 Then
                                            Else
                                                MsgBox("Please set pin no '1'-'64' case of the Digital Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                                e.Cancel = True : Exit Sub
                                            End If
                                        End If

                                    Case gCstCodeChTypeMotor    'MotorCH

                                        If intDataType = gCstCodeChDataTypeMotorDeviceJacom Then
                                            If intPinNo >= 1 And intPinNo <= 200 Then
                                            Else
                                                MsgBox("Please set Jacom port no '1'-'200'.", MsgBoxStyle.Exclamation, "Channel List")
                                                e.Cancel = True : Exit Sub
                                            End If
                                        End If

                                        If intDataType = gCstCodeChDataTypeMotorDeviceJacom55 Then
                                            If intPinNo >= 1 And intPinNo <= 200 Then
                                            Else
                                                MsgBox("Please set Jacom55 port no '1'-'200'.", MsgBoxStyle.Exclamation, "Channel List")
                                                e.Cancel = True : Exit Sub
                                            End If
                                        End If

                                    Case Else  ''DI,DO

                                        If intPinNo >= 1 And intPinNo <= 64 Then
                                        Else
                                            MsgBox("Please set pin no '1'-'64' case of the Digital Channel.", MsgBoxStyle.Exclamation, "Channel List")
                                            e.Cancel = True : Exit Sub
                                        End If
                                End Select

                            Else
                                MsgBox(strMsg, MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                    End Select

                ElseIf strValue = mcstNullValue Then
                    ''Nothing
                Else
                    ''数値以外の時エラーにする
                    Select Case strColumnName

                        Case "txtChNo"
                            MsgBox("CH No. is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtValueHH"
                            MsgBox("Value[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtValueH"
                            MsgBox("Value[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtValueL"
                            MsgBox("Value[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtValueLL"
                            MsgBox("Value[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGHH"
                            MsgBox("EXT.G[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGH"
                            MsgBox("EXT.G[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGL"
                            MsgBox("EXT.G[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGLL"
                            MsgBox("EXT.G[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGSF"
                            MsgBox("EXT.G[SF] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayHH"
                            MsgBox("Delay[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayH"
                            MsgBox("Delay[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayL"
                            MsgBox("Delay[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayLL"
                            MsgBox("Delay[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelaySF"
                            MsgBox("Delay[SF] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1HH"
                            MsgBox("G Rep1[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1H"
                            MsgBox("G Rep1[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1L"
                            MsgBox("G Rep1[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1LL"
                            MsgBox("G Rep1[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2HH"
                            MsgBox("G Rep2[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2H"
                            MsgBox("G Rep2[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2L"
                            MsgBox("G Rep2[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2LL"
                            MsgBox("G Rep2[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGHH_O"
                            MsgBox("EXT.G[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGH_O"
                            MsgBox("EXT.G[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGL_O"
                            MsgBox("EXT.G[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtExtGLL_O"
                            MsgBox("EXT.G[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayHH_O"
                            MsgBox("Delay[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayH_O"
                            MsgBox("Delay[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayL_O"
                            MsgBox("Delay[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDelayLL_O"
                            MsgBox("Delay[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1HH_O"
                            MsgBox("G Rep1[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1H_O"
                            MsgBox("G Rep1[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1L_O"
                            MsgBox("G Rep1[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep1LL_O"
                            MsgBox("G Rep1[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2HH_O"
                            MsgBox("G Rep2[HIHI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2H_O"
                            MsgBox("G Rep2[HI] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2L_O"
                            MsgBox("G Rep2[LO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtGRep2LL_O"
                            MsgBox("G Rep2[LOLO] is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtSp1_O"
                            MsgBox("Sp1 is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtSp2_O"
                            MsgBox("Sp2 is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtHys1_O"
                            MsgBox("Hysteresis 1 is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtHys2_O"
                            MsgBox("Hysteresis 2 is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtSt_O"
                            MsgBox("St is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtVar_O"
                            MsgBox("Var is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDmy", "txtSC", "txtSIO", "txtGWS", "txtWK", "txtRL", "txtAC", "txtEP", "txtPLC", "txtSP", "txtPowerFactor"
                            MsgBox("Flag is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtBitCount"
                            MsgBox("Bit Count is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtPortNo"
                            MsgBox("Port No. is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtRangeLo"
                            MsgBox("Range LO is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtRangeHi"
                            MsgBox("Range HI is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtLoNormal"
                            MsgBox("LO Normal is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtHiNormal"
                            MsgBox("HI Normal is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtOffSet"
                            MsgBox("Offset is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtString"
                            MsgBox("String is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtDecimalPosition"
                            MsgBox("Decimal Point is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtFilterCoef"
                            MsgBox("Please set Filter Coeficient '1'-'250'.", MsgBoxStyle.Exclamation, "Channel List")  '' フィルタ定数変更　ver.1.4.4 2012.05.08
                            e.Cancel = True : Exit Sub

                        Case "txtAlarmTimeup"
                            MsgBox("Alarm Timeup is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtPulseWidth"
                            'Ver2.0.7.X パルス出力の時のみ判定
                            If dgv.Rows(e.RowIndex).Cells(gCstChListColPosControlType).Value = 1 Then
                                MsgBox("Please set Pulse Width '1'-'200'.", MsgBoxStyle.Exclamation, "Channel List")
                                e.Cancel = True : Exit Sub
                            End If

                        Case "txtShareChid"
                            MsgBox("Remote CH No. is wrong.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtComposite"
                            MsgBox("Please set Composite table index '1'-'64'.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        Case "txtFUaddress", "txtDiStart", "txtDoStart", "txtAiTerm", "txtAoTerm", "txtPortaddress", "txtPortDiStart", "txtPortDoStart", "txtPortAiTerm", "txtPortAoTerm", "txtPinaddress", "txtPinDiStart", "txtPinDoStart", "txtPinAiTerm", "txtPinAoTerm"
                            If strColumnName = "txtFUaddress" Or strColumnName = "txtPortaddress" Or strColumnName = "txtPinaddress" Then
                                strMsg = "There are injustice data.  [FU Address]"
                            ElseIf strColumnName = "txtDiStart" Or strColumnName = "txtPortDiStart" Or strColumnName = "txtPinDiStart" Then
                                strMsg = "There are injustice data.  [DI Start]"
                            ElseIf strColumnName = "txtDoStart" Or strColumnName = "txtPortDoStart" Or strColumnName = "txtPinDoStart" Then
                                strMsg = "There are injustice data.  [DO Start]"
                            ElseIf strColumnName = "txtAiTerm" Or strColumnName = "txtPortAiTerm" Or strColumnName = "txtPinAiTerm" Then
                                strMsg = "There are injustice data.  [AI Term]"
                            ElseIf strColumnName = "txtAoTerm" Or strColumnName = "txtPortAoTerm" Or strColumnName = "txtPinAoTerm" Then
                                strMsg = "There are injustice data.  [AO Term]"
                            End If
                            MsgBox(strMsg, MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                    End Select

                End If

            Else

                ''未入力はNG

                If (dgv.Rows(e.RowIndex).Cells(gCstChListColPosChType).Value = gCstCodeChTypeDigital And _
                    dgv.Rows(e.RowIndex).Cells(gCstChListColPosDataType).Value <> gCstCodeChDataTypeDigitalDeviceStatus) Or _
                   (dgv.Rows(e.RowIndex).Cells(gCstChListColPosChType).Value = gCstCodeChTypeMotor) Or _
                   (dgv.Rows(e.RowIndex).Cells(gCstChListColPosChType).Value = gCstCodeChTypePulse) Then

                    If strColumnName = "txtFilterCoef" Then
                        MsgBox("Please set Filter Coeficient '1'-'250'.", MsgBoxStyle.Exclamation, "Channel List")      '' フィルタ定数変更　ver.1.4.4 2012.05.08
                        e.Cancel = True : Exit Sub
                    End If

                End If

                If dgv.Rows(e.RowIndex).Cells(gCstChListColPosChType).Value = gCstCodeChTypeValve Or _
                   dgv.Rows(e.RowIndex).Cells(gCstChListColPosChType).Value = gCstCodeChTypeMotor Then

                    If strColumnName = "txtPulseWidth" Then

                        ''パルス出力の場合のみ
                        If dgv.Rows(e.RowIndex).Cells(gCstChListColPosControlType).Value = 1 Then

                            MsgBox("Please set Pulse Width '1'-'200'.", MsgBoxStyle.Exclamation, "Channel List")
                            e.Cancel = True : Exit Sub

                        End If

                    End If

                End If

            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : グループ選択
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : グリッドを初期化し、対象グループのデータを一覧に表示する
    '--------------------------------------------------------------------
    Private Sub cmbGroup_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmbGroup.SelectedIndexChanged

        Try
            'Ver2.0.0.2 重度でも注意でもエラーがあった場合のエラーﾀﾞｲｱﾛｸﾞ消去
            frmChListWarning.Close()

            Static intFlg As Integer
            Dim strGroup As String = ""

            If mFlagFirst Then Exit Sub
            If intFlg = 1 Then intFlg = 0 : Exit Sub

            Cursor.Current = Cursors.WaitCursor

            If mFlagChange Then

                ''変更されている場合はメッセージ表示
                Select Case MessageBox.Show("Setting has been changed." & vbNewLine & _
                                            "Do you save the changes?", Me.Text, MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question)

                    Case Windows.Forms.DialogResult.Yes

                        ''入力チェック
                        If Not mChkInput() Then
                            intFlg = 1     ''再度SelectIndexChangeイベントが走ってしまうので回避するフラグ
                            cmbGroup.SelectedValue = mSelectGroupNo - 1 ''グループNoを戻す
                            Cursor.Current = Cursors.Default
                            Exit Sub
                        End If

                        'Ver2.0.0.0 保存しないのに画面遷移してしまう対策
                        ''データ保存処理
                        If mSaveChData() = False Then
                            ''グループの変更をしないで元に戻る
                            intFlg = 1     ''再度SelectIndexChangeイベントが走ってしまうので回避するフラグ
                            cmbGroup.SelectedValue = mSelectGroupNo - 1 ''グループNoを戻す
                            Cursor.Current = Cursors.Default
                            Exit Sub
                        End If

                    Case Windows.Forms.DialogResult.No

                        ''保存しないでグループの変更処理を続ける

                    Case Windows.Forms.DialogResult.Cancel

                        ''グループの変更をしないで元に戻る
                        intFlg = 1     ''再度SelectIndexChangeイベントが走ってしまうので回避するフラグ
                        cmbGroup.SelectedValue = mSelectGroupNo - 1 ''グループNoを戻す
                        Cursor.Current = Cursors.Default
                        Exit Sub

                End Select

            End If

            ''グループ番号GET
            strGroup = cmbGroup.Text
            If mKubun = 0 Then
                ''Machinery
                mSelectGroupNo = Integer.Parse(strGroup.Substring(0, 2))
            Else
                ''Cargo
                mSelectGroupNo = Integer.Parse(strGroup.Substring(56, 2))
            End If

            mSelectGroupIndex = cmbGroup.SelectedValue

            ''選択済みグループの情報をGET
            mChDataGroup = mudtChannelGroup.udtGroup(mSelectGroupIndex).udtChannelData

            ''保存時に前回の値を参照したい場合の為にバックアップを作成(参照渡しにならないようにLOOPでCOPY)
            For i As Integer = 0 To gCstOneGroupChannelMax - 1
                mChDataGroupBK(i) = mudtChannelGroup.udtGroup(mSelectGroupIndex).udtChannelData(i)
            Next

            ''チャンネル情報データ(FU表示名称設定データ)バックアップを作成(ケーブルマーク用)
            For i As Integer = 0 To UBound(gudt.SetChDisp.udtChDisp)

                ReDim mChDispRec(i).udtSlotInfo(7)
                For j As Integer = 0 To UBound(gudt.SetChDisp.udtChDisp(i).udtSlotInfo)

                    ReDim mChDispRec(i).udtSlotInfo(j).udtPinInfo(63)
                    For k As Integer = 0 To UBound(gudt.SetChDisp.udtChDisp(i).udtSlotInfo(j).udtPinInfo)

                        mChDispRec(i).udtSlotInfo(j).udtPinInfo(k) = gudt.SetChDisp.udtChDisp(i).udtSlotInfo(j).udtPinInfo(k)

                    Next
                Next
            Next

            ''チャネルの最大数を確認する
            Call mGetChannelMax(gudt.SetChInfo.udtChannel)

            mFlagFirst = True

            ''グリッドの完全初期化は処理速度を考慮してForm Loadの1回にする
            'Call mInitialDataGrid()

            ''全ての行をクリアする --------------------------
            For rw As Integer = 0 To grdCHList.RowCount - 1
                ''全ての項目をクリアする 
                mFlagEventCancel = True
                Call mClearCH(rw, gCstCodeChTypeNothing)
                mFlagEventCancel = False
            Next
            ''----------------------------------------------

            ''画面設定 ======================
            Call mSetDisplay()
            Call mSetDisplayDummySettingAll()
            ''===============================

            mFlagSave = False
            mFlagChange = False
            mFlagFirst = False

            Cursor.Current = Cursors.Default

        Catch ex As Exception
            Cursor.Current = Cursors.Default
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

#End Region

#Region "画面イベント（グリッド入力項目の制限）"

    '--------------------------------------------------------------------
    ' 機能説明  ： ◎設定値を変更した場合、対応する入力項目を限定する
    ' 引数      ： なし
    ' 戻値      ： なし
    ' 変更項目  ： CH Type, Data Type, Status In, Status Out
    ' 　　　　  ： Range Type, Share Type, ControlType, Device Status
    '--------------------------------------------------------------------
    Private Sub grdCHList_CellValueChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdCHList.CellValueChanged

        Try
            If mFlagEventCancel Then Exit Sub
            If e.RowIndex < 0 Or e.ColumnIndex < 0 Then Exit Sub

            Dim dgv As DataGridView = CType(sender, DataGridView)
            Dim intValue As Integer, intCnt As Integer, i As Integer
            Dim strValue As String
            Dim tblDataType As New DataTable("DataType")
            Dim tblStatus As New DataTable("Status")
            Dim tblControlType As New DataTable("ControlType")
            Dim col As System.Windows.Forms.DataGridViewComboBoxCell
            Dim grdCombo As System.Windows.Forms.DataGridViewComboBoxCell
            Dim grdCombo2 As System.Windows.Forms.DataGridViewComboBoxCell
            Dim intDecimalP As Integer
            Dim strDecimalFormat As String
            Dim Color1 As Color

            '偶数行の背景色を変える(20行毎に色替)
            If e.RowIndex Mod 2 <> 0 Then
                If e.RowIndex >= 0 And e.RowIndex <= 19 Then
                    Color1 = gColorGridRowBack
                ElseIf e.RowIndex >= 20 And e.RowIndex <= 39 Then
                    Color1 = Color.LavenderBlush
                ElseIf e.RowIndex >= 40 And e.RowIndex <= 59 Then
                    Color1 = Color.Lavender
                ElseIf e.RowIndex >= 60 And e.RowIndex <= 79 Then
                    Color1 = Color.Beige
                ElseIf e.RowIndex >= 80 And e.RowIndex <= 99 Then
                    Color1 = Color.Honeydew
                End If
            Else
                Color1 = Color.White
            End If

            With grdCHList.Rows(e.RowIndex)

                If e.ColumnIndex = gCstChListColPosChType Then      ''<<< CH Type 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    ''CHの総数が3000件を超えていないか？ ---------------------------
                    For i = 0 To grdCHList.RowCount - 1
                        If (dgv(gCstChListColPosChType, i).Value <> Nothing) And (Val(dgv(gCstChListColPosChType, i).Value) <> 0) Then intCnt += 1
                    Next
                    If intCnt + gMaxChannel > gCstChannelIdMax Then
                        MsgBox("The Channel exceeds " & gCstChannelIdMax.ToString & ".", MsgBoxStyle.Exclamation, "Channel List")
                        dgv(gCstChListColPosChType, e.RowIndex).Value = "0"
                        Return
                    End If
                    ''---------------------------------------------------------------

                    ''CH Typeが変更された時は、全ての項目をクリアする ---------------
                    Call mClearCH(e.RowIndex, Val(dgv(gCstChListColPosChType, e.RowIndex).Value))
                    ''---------------------------------------------------------------

                    intValue = dgv(gCstChListColPosChType, e.RowIndex).Value     ''intValue <-- CH Type

                    'Ver2.0.1.6
                    'FUadrはNothingの場合空白を格納
                    If IsNothing(.Cells(gCstChListColPosFuAddress).Value) = True Then
                        .Cells(gCstChListColPosFuAddress).Value = ""
                    End If
                    If IsNothing(.Cells(gCstChListColPosPortAddress).Value) = True Then
                        .Cells(gCstChListColPosPortAddress).Value = ""
                    End If
                    If IsNothing(.Cells(gCstChListColPosPinAddress).Value) = True Then
                        .Cells(gCstChListColPosPinAddress).Value = ""
                    End If


                    ''アナログCH以外 PID以外
                    If intValue <> gCstCodeChTypeAnalog And intValue <> gCstCodeChTypeNothing And intValue <> gCstCodeChTypePID Then

                        .Cells(gCstChListColPosValueHH).Value = ""
                        .Cells(gCstChListColPosValueL).Value = "" : .Cells(gCstChListColPosValueLL).Value = ""

                        If intValue <> gCstCodeChTypePulse Then
                            .Cells(gCstChListColPosValueH).Value = ""
                        End If

                        '' 'H' 以外
                        .Cells(gCstChListColPosExtGrHH).Value = "" : .Cells(gCstChListColPosExtGrL).Value = ""
                        .Cells(gCstChListColPosExtGrLL).Value = "" : .Cells(gCstChListColPosExtGrSF).Value = ""
                        .Cells(gCstChListColPosDelayHH).Value = "" : .Cells(gCstChListColPosDelayL).Value = ""
                        .Cells(gCstChListColPosDelayLL).Value = "" : .Cells(gCstChListColPosDelaySF).Value = ""
                        .Cells(gCstChListColPosGrep1HH).Value = "" : .Cells(gCstChListColPosGrep1L).Value = ""
                        .Cells(gCstChListColPosGrep1LL).Value = ""
                        .Cells(gCstChListColPosGrep2HH).Value = "" : .Cells(gCstChListColPosGrep2L).Value = ""
                        .Cells(gCstChListColPosGrep2LL).Value = ""
                        .Cells(gCstChListColPosStaNmHH).Value = "" : .Cells(gCstChListColPosStaNmH).Value = ""
                        .Cells(gCstChListColPosStaNmL).Value = "" : .Cells(gCstChListColPosStaNmLL).Value = ""
                        If intValue = gCstCodeChTypeMotor Then
                            .Cells(gCstChListColPosDelayH).Value = ""
                        End If

                    End If

                    ''ソフトウェアフィルタ定数　初期値
                    If intValue = gCstCodeChTypeDigital Or intValue = gCstCodeChTypeMotor Then
                        .Cells("txtFilterCoef").Value = 12  '' フィルタ定数 "1" → "12" に変更    2014.04.17
                    ElseIf intValue = gCstCodeChTypePulse Then
                        .Cells("txtFilterCoef").Value = 2   '' フィルタ定数 "1" → "2" に変更     2014.04.17
                    End If

                    ''出力パルス幅　初期値
                    If intValue = gCstCodeChTypeValve Or intValue = gCstCodeChTypeMotor Then .Cells("txtPulseWidth").Value = 1

                    ''Delay Time　初期値
                    If intValue = gCstCodeChTypeMotor Then
                        grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell)
                        grdCombo.Value = Nothing

                        grdCombo2 = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell)
                        grdCombo2.Value = "0"

                    ElseIf intValue <> gCstCodeChTypeNothing Then
                        grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell)
                        grdCombo.Value = "0"

                        grdCombo2 = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell)
                        grdCombo2.Value = Nothing
                    End If

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    'MimicAlmは書き込み可とする
                    .Cells(gCstChListColPosAlmMimic).Style.BackColor = Color1
                    .Cells(gCstChListColPosAlmMimic).ReadOnly = False



                    Select Case intValue    ''CH Type

                        Case gCstCodeChTypeAnalog, gCstCodeChTypePID    ''<<アナログ>> ---------------------- +PID

                            ''入力項目だけを書き込み可とする
                            For i = gCstChListColPosSysNo To gCstChListColPosOutStatusH

                                Select Case i
                                    Case gCstChListColPosSysNo, gCstChListColPosChNo, gCstChListColPosItemName, _
                                         gCstChListColPosValueHH, gCstChListColPosValueH, gCstChListColPosValueL, _
                                         gCstChListColPosValueLL, gCstChListColPosValueSF, _
                                         gCstChListColPosExtGrHH, gCstChListColPosExtGrH, gCstChListColPosExtGrL, _
                                         gCstChListColPosExtGrLL, gCstChListColPosExtGrSF, _
                                         gCstChListColPosDelayTime, gCstChListColPosDelayHH, gCstChListColPosDelayH, _
                                         gCstChListColPosDelayL, gCstChListColPosDelayLL, gCstChListColPosDelaySF, _
                                         gCstChListColPosGrep1HH, gCstChListColPosGrep1H, gCstChListColPosGrep1L, _
                                         gCstChListColPosGrep1LL, _
                                         gCstChListColPosGrep2HH, gCstChListColPosGrep2H, gCstChListColPosGrep2L, _
                                         gCstChListColPosGrep2LL, _
                                         gCstChListColPosStaNmHH, gCstChListColPosStaNmH, gCstChListColPosStaNmL, _
                                         gCstChListColPosStaNmLL, _
                                         gCstChListColPosFlagDmy, gCstChListColPosFlagSC, gCstChListColPosFlagSIO, _
                                         gCstChListColPosFlagGWS, gCstChListColPosFlagWK, gCstChListColPosFlagRL, _
                                         gCstChListColPosFlagAC, gCstChListColPosFlagEP, gCstChListColPosFlagPLC, _
                                         gCstChListColPosFlagSP, _
                                         gCstChListColPosFuAddress, gCstChListColPosDataType, _
                                         gCstChListColPosRangeLo, gCstChListColPosRangeHi, gCstChListColPosStatusIn, _
                                         gCstChListColPosNormalLo, gCstChListColPosNormalHi, gCstChListColPosOffset, _
                                         gCstChListColPosUnit, gCstChListColPosString, gCstChListColPosCenterGraph, _
                                         gCstChListColPosRemarks, gCstChListColPosPortAddress, gCstChListColPosPinAddress, _
                                         gCstChListPowerFactorRow

                                        .Cells(i).Style.BackColor = Color1
                                        .Cells(i).ReadOnly = False
                                    Case gCstChListColPosTagRow
                                        'Ver2.0.0.8
                                        'Tagは、ﾌﾗｸﾞが入ってれば入力可
                                        If gudt.SetSystem.udtSysOps.shtTagMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                    Case gCstChListColPosLRRow
                                        'Ver2.0.0.9
                                        'Alarm Levelは、ﾌﾗｸﾞが入って入れば入力可
                                        If gudt.SetSystem.udtSysOps.shtLRMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                End Select
                            Next

                            ''Sys No 初期値
                            grdCombo = CType(.Cells("cmbSysNo"), DataGridViewComboBoxCell)
                            grdCombo.Value = "0"

                            ''Value SF 初期値　
                            grdCombo = CType(.Cells("cmbValueSF"), DataGridViewComboBoxCell)
                            grdCombo.Value = "0"

                            ''DataTypeコンボ　値セット
                            'PID とアナログで分岐
                            If intValue = gCstCodeChTypePID Then
                                'PID
                                grdCombo = CType(.Cells("cmbDataType"), DataGridViewComboBoxCell)
                                Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDataTypePID)
                                grdCombo.Value = gCstCodeChDataTypePID_1_AI1_5.ToString
                            Else
                                'Analog
                                grdCombo = CType(.Cells("cmbDataType"), DataGridViewComboBoxCell)
                                Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDataTypeAnalog)
                                grdCombo.Value = gCstCodeChDataTypeAnalogK.ToString
                            End If
                            

                            ''Status
                            .Cells("txtStatusIn").Value = "*"

                            'Ver2.0.1.6 RangeはNothingの場合空白を格納
                            If IsNothing(.Cells(gCstChListColPosRangeLo).Value) = True Then
                                .Cells(gCstChListColPosRangeLo).Value = ""
                            End If
                            If IsNothing(.Cells(gCstChListColPosRangeHi).Value) = True Then
                                .Cells(gCstChListColPosRangeHi).Value = ""
                            End If

                            'Ver2.0.1.6UnitはNothingの場合空白を格納
                            If IsNothing(.Cells(gCstChListColPosUnit).Value) = True Then
                                .Cells(gCstChListColPosUnit).Value = ""
                            End If


                        Case gCstCodeChTypeDigital  ''<<デジタル>> ----------------------

                            ''入力項目だけを書き込み可とする
                            For i = gCstChListColPosSysNo To gCstChListColPosOutStatusH

                                Select Case i
                                    Case gCstChListColPosSysNo, gCstChListColPosChNo, gCstChListColPosItemName, _
                                         gCstChListColPosExtGrH, gCstChListColPosDelayTime, gCstChListColPosDelayH, _
                                         gCstChListColPosGrep1H, gCstChListColPosGrep2H, _
                                         gCstChListColPosFlagDmy, gCstChListColPosFlagSC, gCstChListColPosFlagSIO, _
                                         gCstChListColPosFlagGWS, gCstChListColPosFlagWK, gCstChListColPosFlagRL, _
                                         gCstChListColPosFlagAC, gCstChListColPosFlagEP, gCstChListColPosFlagPLC, _
                                         gCstChListColPosFlagSP, _
                                         gCstChListColPosFuAddress, gCstChListColPosDataType, _
                                         gCstChListColPosStatusIn, _
                                         gCstChListColPosFilterCoef, gCstChListColPosRemarks, gCstChListColPosPortAddress, gCstChListColPosPinAddress

                                        .Cells(i).Style.BackColor = Color1
                                        .Cells(i).ReadOnly = False
                                    Case gCstChListColPosTagRow
                                        'Ver2.0.0.8
                                        'Tagは、ﾌﾗｸﾞが入ってれば入力可
                                        If gudt.SetSystem.udtSysOps.shtTagMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                    Case gCstChListColPosLRRow
                                        'Ver2.0.0.9
                                        'Alarm Levelは、ﾌﾗｸﾞが入って入れば入力可
                                        If gudt.SetSystem.udtSysOps.shtLRMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                End Select
                            Next

                            ''Sys No 初期値
                            grdCombo = CType(.Cells("cmbSysNo"), DataGridViewComboBoxCell)
                            grdCombo.Value = "0"

                            ''DataTypeコンボ　値セット
                            grdCombo = CType(.Cells("cmbDataType"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDataTypeDigital)
                            grdCombo.Value = gCstCodeChDataTypeDigitalNC.ToString

                            ''Status
                            .Cells("txtStatusIn").Value = "*"

                        Case gCstCodeChTypeMotor    ''<<モーター>> ----------------------

                            ''入力項目だけを書き込み可とする
                            For i = gCstChListColPosSysNo To gCstChListColPosOutStatusH

                                Select Case i
                                    Case gCstChListColPosSysNo, gCstChListColPosChNo, gCstChListColPosItemName, _
                                         gCstChListColPosExtGrH, gCstChListColPosGrep1H, gCstChListColPosGrep2H, _
                                         gCstChListColPosOutExtgH, gCstChListColPosOutDelayTime, gCstChListColPosOutDelayH, _
                                         gCstChListColPosOutGrep1H, gCstChListColPosOutGrep2H, gCstChListColPosOutStatusH, _
                                         gCstChListColPosFlagDmy, gCstChListColPosFlagSC, gCstChListColPosFlagSIO, _
                                         gCstChListColPosFlagGWS, gCstChListColPosFlagWK, gCstChListColPosFlagRL, _
                                         gCstChListColPosFlagAC, gCstChListColPosFlagEP, gCstChListColPosFlagPLC, _
                                         gCstChListColPosFlagSP, _
                                         gCstChListColPosDoStart, gCstChListColPosPortDoStart, gCstChListColPosPinDoStart, gCstChListColPosDataType, _
                                         gCstChListColPosStatusOut, gCstChListColPosDoStatus1, gCstChListColPosDoStatus2, gCstChListColPosDoStatus3, gCstChListColPosDoStatus4, gCstChListColPosDoStatus5, _
                                         gCstChListColPosFilterCoef, _
                                         gCstChListColPosAlarmTimeup, gCstChListColPosControlType, _
                                         gCstChListColPosRemarks, gCstChListColPosFuAddress, gCstChListColPosPortAddress, gCstChListColPosPinAddress, _
                                         gCstChListColPosFlagMotorColor  '' ver2.0.8.C 2018.11.14

                                        .Cells(i).Style.BackColor = Color1
                                        .Cells(i).ReadOnly = False
                                    Case gCstChListColPosTagRow
                                        'Ver2.0.0.8
                                        'Tagは、ﾌﾗｸﾞが入ってれば入力可
                                        If gudt.SetSystem.udtSysOps.shtTagMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                    Case gCstChListColPosLRRow
                                        'Ver2.0.0.9
                                        'Alarm Levelは、ﾌﾗｸﾞが入って入れば入力可
                                        If gudt.SetSystem.udtSysOps.shtLRMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                End Select
                            Next

                            ''Sys No 初期値
                            grdCombo = CType(.Cells("cmbSysNo"), DataGridViewComboBoxCell)
                            grdCombo.Value = "0"

                            ''DataTypeコンボ　値セット
                            grdCombo = CType(.Cells("cmbDataType"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDataTypeMotor)
                            grdCombo.Value = gCstCodeChDataTypeMotorManRun.ToString

                            ''Control Typeコンボ　値セット
                            grdCombo = CType(.Cells("cmbControlType"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListOutputControlType)
                            grdCombo.Value = "0"

                            ''StatusOutコンボ　値セット
                            grdCombo = CType(.Cells("txtStatusOut"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListStatusMotor)
                            'grdCombo.Value = gCstCodeChStatusTypeMotorRun.ToString

                        Case gCstCodeChTypeValve    ''<<バルブ>> ------------------------

                            ''入力項目だけを書き込み可とする
                            For i = gCstChListColPosSysNo To gCstChListColPosOutStatusH
                                Select Case i
                                    Case gCstChListColPosSysNo, gCstChListColPosChNo, gCstChListColPosItemName, _
                                         gCstChListColPosExtGrH, gCstChListColPosDelayH, gCstChListColPosGrep1H, gCstChListColPosGrep2H, _
                                         gCstChListColPosOutExtgH, gCstChListColPosOutDelayH, gCstChListColPosOutGrep1H, gCstChListColPosOutGrep2H, _
                                        gCstChListColPosFlagDmy, gCstChListColPosFlagSC, gCstChListColPosFlagSIO, _
                                        gCstChListColPosFlagGWS, gCstChListColPosFlagWK, gCstChListColPosFlagRL, _
                                        gCstChListColPosFlagAC, gCstChListColPosFlagEP, gCstChListColPosDelayTime, gCstChListColPosFlagPLC, _
                                        gCstChListColPosFlagSP, gCstChListColPosOutStatusH, _
                                        gCstChListColPosBitCount, gCstChListColPosFuAddress, gCstChListColPosDoStart, _
                                        gCstChListColPosDataType, gCstChListColPosStatusIn, gCstChListColPosStatusOut, _
                                        gCstChListColPosAlarmTimeup, gCstChListColPosCompositeIndex, _
                                        gCstChListColPosControlType, gCstChListColPosComposite, gCstChListColPosRemarks, gCstChListColPosPortAddress, gCstChListColPosPinAddress, gCstChListColPosPortDoStart, gCstChListColPosPinDoStart
                                        'Ver2.0.7.J gCstChListColPosCompositeIndexも入力可能に変更
                                        .Cells(i).Style.BackColor = Color1
                                        .Cells(i).ReadOnly = False
                                    Case gCstChListColPosTagRow
                                        'Ver2.0.0.8
                                        'Tagは、ﾌﾗｸﾞが入ってれば入力可
                                        If gudt.SetSystem.udtSysOps.shtTagMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                    Case gCstChListColPosLRRow
                                        'Ver2.0.0.9
                                        'Alarm Levelは、ﾌﾗｸﾞが入って入れば入力可
                                        If gudt.SetSystem.udtSysOps.shtLRMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                End Select
                            Next

                            ''Sys No 初期値
                            grdCombo = CType(.Cells("cmbSysNo"), DataGridViewComboBoxCell)
                            grdCombo.Value = "0"

                            ''DataTypeコンボ　値セット
                            grdCombo = CType(.Cells("cmbDataType"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDataTypeValve)
                            grdCombo.Value = gCstCodeChDataTypeValveDI_DO.ToString

                            ''Control Typeコンボ　値セット
                            grdCombo = CType(.Cells("cmbControlType"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListOutputControlType)
                            grdCombo.Value = "0"

                            ''StatusOutコンボ　値セット
                            grdCombo = CType(.Cells("txtStatusOut"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListStatusDigital)
                            grdCombo.Value = gCstCodeChManualInputStatus.ToString

                            ''StatusIn
                            '.Cells("txtStatusIn").Value = "*"

                        Case gCstCodeChTypeComposite  ''<<デジタルコンポジット>> -----------

                            ''入力項目だけを書き込み可とする
                            For i = gCstChListColPosSysNo To gCstChListColPosOutStatusH

                                Select Case i
                                    Case gCstChListColPosSysNo, gCstChListColPosChNo, gCstChListColPosItemName, _
                                         gCstChListColPosExtGrH, gCstChListColPosDelayTime, gCstChListColPosDelayH, _
                                         gCstChListColPosGrep1H, gCstChListColPosGrep2H, _
                                         gCstChListColPosFlagDmy, gCstChListColPosFlagSC, gCstChListColPosFlagSIO, _
                                         gCstChListColPosFlagGWS, gCstChListColPosFlagWK, gCstChListColPosFlagRL, _
                                         gCstChListColPosFlagAC, gCstChListColPosFlagEP, gCstChListColPosFlagPLC, _
                                         gCstChListColPosFlagSP, gCstChListColPosCompositeIndex, _
                                         gCstChListColPosBitCount, gCstChListColPosDiStart, _
                                         gCstChListColPosDataType, gCstChListColPosStatusIn, _
                                         gCstChListColPosComposite, gCstChListColPosRemarks, gCstChListColPosPortDiStart, _
                                         gCstChListColPosPinDiStart, gCstChListColPosPortDoStart, gCstChListColPosPinDoStart
                                        'Ver2.0.7.J gCstChListColPosCompositeIndexも入力可能に変更
                                        .Cells(i).Style.BackColor = Color1
                                        .Cells(i).ReadOnly = False
                                    Case gCstChListColPosTagRow
                                        'Ver2.0.0.8
                                        'Tagは、ﾌﾗｸﾞが入ってれば入力可
                                        If gudt.SetSystem.udtSysOps.shtTagMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                    Case gCstChListColPosLRRow
                                        'Ver2.0.0.9
                                        'Alarm Levelは、ﾌﾗｸﾞが入って入れば入力可
                                        If gudt.SetSystem.udtSysOps.shtLRMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                End Select
                            Next

                            ''Sys No 初期値
                            grdCombo = CType(.Cells("cmbSysNo"), DataGridViewComboBoxCell)
                            grdCombo.Value = "0"

                            ''DataTypeコンボ　値セット
                            grdCombo = CType(.Cells("cmbDataType"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDataTypeComposite)
                            grdCombo.Value = gCstCodeChDataTypeCompTankLevel.ToString

                        Case gCstCodeChTypePulse    ''<<パルス積算>> ----------------------

                            ''入力項目だけを書き込み可とする
                            For i = gCstChListColPosSysNo To gCstChListColPosOutStatusH

                                Select Case i
                                    Case gCstChListColPosSysNo, gCstChListColPosChNo, gCstChListColPosItemName, _
                                         gCstChListColPosValueH, gCstChListColPosExtGrH, gCstChListColPosDelayTime, _
                                         gCstChListColPosDelayH, gCstChListColPosGrep1H, gCstChListColPosGrep2H, _
                                         gCstChListColPosStaNmH, _
                                         gCstChListColPosFlagDmy, gCstChListColPosFlagSC, gCstChListColPosFlagSIO, _
                                         gCstChListColPosFlagGWS, gCstChListColPosFlagWK, gCstChListColPosFlagRL, _
                                         gCstChListColPosFlagAC, gCstChListColPosFlagEP, gCstChListColPosFlagPLC, _
                                         gCstChListColPosFlagSP, _
                                         gCstChListColPosFuAddress, gCstChListColPosDataType, gCstChListColPosStatusIn, _
                                         gCstChListColPosUnit, _
                                         gCstChListColPosDecimalPoint, gCstChListColPosFilterCoef, gCstChListColPosRemarks, _
                                         gCstChListColPosPortAddress, gCstChListColPosPinAddress, gCstChListColPosRangeHi, gCstChListColPosString

                                        .Cells(i).Style.BackColor = Color1
                                        .Cells(i).ReadOnly = False
                                    Case gCstChListColPosTagRow
                                        'Ver2.0.0.8
                                        'Tagは、ﾌﾗｸﾞが入ってれば入力可
                                        If gudt.SetSystem.udtSysOps.shtTagMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                    Case gCstChListColPosLRRow
                                        'Ver2.0.0.9
                                        'Alarm Levelは、ﾌﾗｸﾞが入って入れば入力可
                                        If gudt.SetSystem.udtSysOps.shtLRMode <> 0 Then
                                            .Cells(i).Style.BackColor = Color1
                                            .Cells(i).ReadOnly = False
                                        End If
                                End Select
                            Next

                            ''Sys No 初期値
                            grdCombo = CType(.Cells("cmbSysNo"), DataGridViewComboBoxCell)
                            grdCombo.Value = "0"

                            ''DataTypeコンボ　値セット
                            grdCombo = CType(.Cells("cmbDataType"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDataTypePulse)
                            grdCombo.Value = gCstCodeChDataTypePulseTotal1_1.ToString

                            ''Status
                            .Cells("txtStatusIn").Value = "*"

                    End Select

                    'Ver2.0.1.8 SigCHG　CHTypeが変わればSig編集
                    Call subSigSet(e.RowIndex)

                ElseIf e.ColumnIndex = gCstChListColPosDataType Then        ''<<< Data Type 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    'MimicAlmは書き込み可とする
                    .Cells(gCstChListColPosAlmMimic).Style.BackColor = Color1
                    .Cells(gCstChListColPosAlmMimic).ReadOnly = False


                    If dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeAnalog Then        ''<アナログ>-------------------

                        col = CType(.Cells(gCstChListColPosRangeType), DataGridViewComboBoxCell)  ''Range Type

                        intValue = dgv(gCstChListColPosDataType, e.RowIndex).Value    ''intValue <-- [Data Type]

                        '排ガスリポーズから変更された場合に入力箇所を解放　T.Ueki
                        If intValue <> gCstCodeChDataTypeAnalogExhRepose Then

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "-", False, Color1)       '10
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "-", False, Color1)       '11
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "-", False, Color1)       '12

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "-", False, Color1)       '13
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "-", False, Color1)       '15
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "-", False, Color1)       '16
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "-", False, Color1)       '17
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "-", False, Color1)       '18

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "-", False, Color1)      '24
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "-", False, Color1)      '25
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "-", False, Color1)      '26
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "-", False, Color1)      '27

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "-", False, Color1)      '29
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "-", False, Color1)      '30
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "-", False, Color1)      '31
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "-", False, Color1)      '32

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "-", False, Color1)      '39
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "-", False, Color1)      '40

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "-", False, Color1)      '59
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "-", False, Color1)       '60
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "-", False, Color1)       '61
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "-", False, Color1)      '62

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "-", False, Color1)      '95 非表示部分
                        End If

                        Select Case intValue

                            Case gCstCodeChDataTypeAnalog2Pt, gCstCodeChDataTypeAnalog3Pt     ''2 Wire Pt100, 3 Wire Pt100

                                'Ver2.0.0.0 2016.12.07 行コポペで値が消える不具合対応
                                'Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, "C", False, Color1)           '8

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeType, "-", False, Color1)      '94 非表示部分
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDecimalPoint, "-", False, Color1)   '115 非表示部分

                                ''Range Typeコンボ　値セット
                                grdCombo = CType(.Cells("cmbRangeType"), DataGridViewComboBoxCell)
                                Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListRangeType1)
                                grdCombo.Value = gCstCodeChRangeAnalogPt0_700.ToString

                                intDecimalP = Val(.Cells(gCstChListColPosDecimalPoint).Value)
                                strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                'Ver2.0.0.0 2016.12.07 行コポペで値が消える不具合対応
                                ' ''文字列を分解してRangLowとRangeHighにセット
                                'strValue = grdCombo.FormattedValue          ''Range Type
                                'If strValue <> "" Then

                                '    strValue = strValue.Replace(" - ", "/")
                                '    Dim p As Integer = strValue.LastIndexOf("/")

                                '    .Cells(gCstChListColPosRangeLo).Value = Long.Parse(strValue.Substring(0, p)).ToString(strDecimalFormat)     ''上位 Low
                                '    .Cells(gCstChListColPosRangeHi).Value = Long.Parse(strValue.Substring(p + 1)).ToString(strDecimalFormat)    ''下位 High

                                'End If

                            Case gCstCodeChDataTypeAnalog2Jpt, gCstCodeChDataTypeAnalog3Jpt     ''2 Wire JPt100, 3 Wire JPt100

                                .Cells(gCstChListColPosRangeType).ReadOnly = False ''Range Type
                                .Cells(gCstChListColPosRangeType).Style.BackColor = Color1

                                ''Range Typeコンボ　値セット
                                grdCombo = CType(.Cells("cmbRangeType"), DataGridViewComboBoxCell)
                                Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListRangeType2)
                                grdCombo.Value = gCstCodeChRangeAnalogJpt0_200.ToString

                                intDecimalP = Val(.Cells(gCstChListColPosDecimalPoint).Value)
                                strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                'Ver2.0.0.0 2016.12.07 行コポペで値が消える不具合対応
                                ' ''文字列を分解してRangLowとRangeHighにセット
                                'strValue = grdCombo.FormattedValue          ''Range Type
                                'If strValue <> "" Then

                                '    strValue = strValue.Replace(" - ", "/")
                                '    Dim p As Integer = strValue.LastIndexOf("/")

                                '    .Cells(gCstChListColPosRangeLo).Value = Long.Parse(strValue.Substring(0, p)).ToString(strDecimalFormat)     ''上位 Low
                                '    .Cells(gCstChListColPosRangeHi).Value = Long.Parse(strValue.Substring(p + 1)).ToString(strDecimalFormat)    ''下位 High

                                'End If

                                .Cells(gCstChListColPosDecimalPoint).ReadOnly = False ''小数点以下桁数
                                .Cells(gCstChListColPosDecimalPoint).Style.BackColor = Color1

                                'Ver2.0.0.0 2016.12.07 行コポペで値が消える不具合対応
                                ''単位は℃
                                '.Cells(gCstChListColPosUnit).Value = "C"

                            Case gCstCodeChDataTypeAnalogK, gCstCodeChDataTypeAnalog1_5v, gCstCodeChDataTypeAnalog4_20mA, gCstCodeChDataTypeAnalogPT4_20mA, _
                                 gCstCodeChDataTypeAnalogExhAve, gCstCodeChDataTypeAnalogExhRepose, gCstCodeChDataTypeAnalogExtDev ''K, 1-5 V, 4-20 mA, Exhaust Gus

                                .Cells(gCstChListColPosRangeType).ReadOnly = True       ''Range Type
                                .Cells(gCstChListColPosRangeType).Style.BackColor = gColorGridRowBackReadOnly

                                .Cells(gCstChListColPosDecimalPoint).ReadOnly = True    ''小数点以下桁数
                                .Cells(gCstChListColPosDecimalPoint).Style.BackColor = gColorGridRowBackReadOnly
                                .Cells(gCstChListColPosDecimalPoint).Value = ""

                                'Range Type コンボ　クリア
                                tblDataType.Columns.Add("Type", GetType(String))
                                tblDataType.Clear()
                                col.Value = Nothing
                                col.DataSource = tblDataType

                                'Ver2.0.0.0 2016.12.07 行コポペで値が消える不具合対応
                                '.Cells(gCstChListColPosUnit).Value = "*"

                            Case Else   ''外部機器
                                'Ver2.0.0.7 UNIT RagneHi,Loクリアを行わない
                                'Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "", False, Color1)                        '6
                                'Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "", False, Color1)                        '7
                                'Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, "*", False, Color1)                          '8
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeType, "-", True, gColorGridRowBackReadOnly)   '94 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDecimalPoint, "", True, gColorGridRowBackReadOnly) '115 非表示

                                'Range Type コンボ　クリア
                                tblDataType.Columns.Add("Type", GetType(String))
                                tblDataType.Clear()
                                col.Value = Nothing
                                col.DataSource = tblDataType

                        End Select

                        Select Case intValue

                            ''Jacom、排ガスはFU Addressの入力は不可 ver.1.4.0 2011.09.22
                            ''Ext Device (JACOM-22)
                            Case gCstCodeChDataTypeAnalogJacom

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)   '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly) '36

                            Case gCstCodeChDataTypeAnalogJacom55

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)   '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly) '36
                                '2016/10/14 JACOM用Port番号入力位置変更 T.Ueki

                            Case gCstCodeChDataTypeAnalogExtDev, gCstCodeChDataTypeAnalogExhAve

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)   '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly) '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", True, gColorGridRowBackReadOnly)  '37
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "", True, gColorGridRowBackReadOnly)     '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "", True, gColorGridRowBackReadOnly)     '40
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "0", True, gColorGridRowBackReadOnly)    '95 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)      '114 非表示

                            Case gCstCodeChDataTypeAnalogExhRepose

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "", True, gColorGridRowBackReadOnly)      '10
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "", True, gColorGridRowBackReadOnly)      '11
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "", True, gColorGridRowBackReadOnly)      '12
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "", True, gColorGridRowBackReadOnly)      '13
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "", True, gColorGridRowBackReadOnly)      '15
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "", True, gColorGridRowBackReadOnly)      '16
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "", True, gColorGridRowBackReadOnly)      '17
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "", True, gColorGridRowBackReadOnly)      '18
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "", True, gColorGridRowBackReadOnly)     '24
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "", True, gColorGridRowBackReadOnly)     '25
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "", True, gColorGridRowBackReadOnly)     '26
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "", True, gColorGridRowBackReadOnly)     '27
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "", True, gColorGridRowBackReadOnly)     '29
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "", True, gColorGridRowBackReadOnly)     '30
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "", True, gColorGridRowBackReadOnly)     '31
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "", True, gColorGridRowBackReadOnly)     '32
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)   '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly) '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", True, gColorGridRowBackReadOnly)  '37
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "", True, gColorGridRowBackReadOnly)     '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "", True, gColorGridRowBackReadOnly)     '40
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)     '59
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)      '60
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)      '61
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)     '62
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "0", True, gColorGridRowBackReadOnly)    '95 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)      '114 非表示

                            Case gCstCodeChDataTtpeAnalogUTCyear, gCstCodeChDataTtpeAnalogUTCmonth, gCstCodeChDataTtpeAnalogUTCday, gCstCodeChDataTtpeAnalogUTChour, gCstCodeChDataTtpeAnalogUTCmin, gCstCodeChDataTtpeAnalogUTCsec
                                'Ver2.0.1.2 UTC TIMEはFU入力を行わない
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)   '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly) '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", True, gColorGridRowBackReadOnly)  '37

                                'WK
                                If grdCHList(gCstChListColPosFlagWK, e.RowIndex).Value = "1" Then
                                    grdCHList(gCstChListColPosSSig, e.RowIndex).Value = gCstChListSSigWork
                                Else
                                    grdCHList(gCstChListColPosSSig, e.RowIndex).Value = ""
                                End If
                            Case Else

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "-", False, Color1)                    '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "-", False, Color1)                  '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "-", False, Color1)                   '37
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)      '114 非表示

                        End Select

                        ''偏差CH バーグラフセンター表示をONにする ver1.4.0 2011.09.20
                        If intValue = gCstCodeChDataTypeAnalogExtDev Then
                            .Cells(gCstChListColPosCenterGraph).Value = True
                        End If

                    ElseIf dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeDigital Then        ''<デジタル>------

                        intValue = dgv(gCstChListColPosDataType, e.RowIndex).Value  ''Data Type

                        If intValue = gCstCodeChDataTypeDigitalDeviceStatus Then
                            ''システムCH

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDeviceStatus, "-", False, Color1)                  '93 非表示

                            ''Device Statusコンボ　値セット
                            grdCombo = CType(.Cells("cmbDeviceStatus"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListDeviceStatus)
                            grdCombo.Value = "1"

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)    '35
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly)  '36
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", True, gColorGridRowBackReadOnly)   '37
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFilterCoef, "", True, gColorGridRowBackReadOnly)   '64
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)       '114 非表示

                        Else
                            ''デジタルCH
                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDeviceStatus, "-", True, gColorGridRowBackReadOnly)  '93 非表示

                            'DeviceStatus コンボ　クリア
                            col = CType(.Cells(gCstChListColPosDeviceStatus), DataGridViewComboBoxCell)
                            tblDataType.Columns.Add("Type", GetType(String))
                            tblDataType.Clear()
                            mFlagEventCancel = True
                            col.Value = Nothing
                            col.DataSource = tblDataType
                            mFlagEventCancel = False

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFilterCoef, "12", False, Color1)   '64 フィルタ定数 "1" → "12" に変更    2014.04.17

                            Select Case intValue
                                ''JacomのみFU Addressの入力は不可
                                Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO, gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)    '35
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly)  '36
                                    '2016/10/14 JACOM用Port番号入力位置変更 T.Ueki
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "-", False, Color1)                    '37
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)       '114 非表示
                                Case Else
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "-", False, Color1)                     '35
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "-", False, Color1)                   '36
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "-", False, Color1)                    '37
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)       '114 非表示
                            End Select

                        End If

                        ''延長警報盤    Ext Device (EXT PANEL)　DI
                        col = CType(.Cells(gCstChListColPosEccFunc), DataGridViewComboBoxCell)  ''[Ecc Func]
                        If intValue = gCstCodeChDataTypeDigitalExt Then
                            ''延長警報盤コンボ　値セット
                            grdCombo = CType(.Cells("cmbEccFunc"), DataGridViewComboBoxCell)
                            Call gSetComboBox(grdCombo, gEnmComboType.ctChTerminalFunctionFuncDI)
                            grdCombo.Value = "17"

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosEccFunc, "-", False, Color1)                                '54
                        Else
                            '延長警報盤コンボ　クリア
                            'tblDataType.Columns.Add("Type", GetType(String))
                            tblDataType.Clear()
                            col.Value = Nothing
                            col.DataSource = tblDataType

                            Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosEccFunc, "-", True, gColorGridRowBackReadOnly)              '54
                        End If

                    ElseIf dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeMotor Then        ''<モーター>------

                        ''DO Status Clear
                        grdCHList(gCstChListColPosDoStatus1, e.RowIndex).Value = ""
                        grdCHList(gCstChListColPosDoStatus2, e.RowIndex).Value = ""
                        grdCHList(gCstChListColPosDoStatus3, e.RowIndex).Value = ""
                        grdCHList(gCstChListColPosDoStatus4, e.RowIndex).Value = ""
                        grdCHList(gCstChListColPosDoStatus5, e.RowIndex).Value = ""
                        grdCHList(gCstChListColPosDoStatus6, e.RowIndex).Value = ""
                        grdCHList(gCstChListColPosDoStatus7, e.RowIndex).Value = ""
                        grdCHList(gCstChListColPosDoStatus8, e.RowIndex).Value = ""

                        ''intValue <-- Data Type
                        intValue = dgv(gCstChListColPosDataType, e.RowIndex).Value

                        If intValue = gCstCodeChDataTypeMotorDevice Or intValue = gCstCodeChDataTypeMotorRDevice Then   'Ver2.0.0.2 モーター種別増加 R Device追加
                            'Ver2.0.1.8 入力値を消す処理を廃止

                            '隠しコマンドに移設のため設定変更
                            '.Cells(gCstChListColPosPortNo).Value = ""                       ''Port No
                            '.Cells(gCstChListColPosPortNo).ReadOnly = True
                            '.Cells(gCstChListColPosPortNo).Style.BackColor = gColorGridRowBackReadOnly

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            '.Cells(gCstChListColPosFuAddress).Value = ""
                            .Cells(gCstChListColPosFuAddress).ReadOnly = False                 ''FU ADDRESS
                            .Cells(gCstChListColPosFuAddress).Style.BackColor = Color1

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            '.Cells(gCstChListColPosPortAddress).Value = ""
                            .Cells(gCstChListColPosPortAddress).ReadOnly = False               ''FUPort
                            .Cells(gCstChListColPosPortAddress).Style.BackColor = Color1

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            '.Cells(gCstChListColPosPinAddress).Value = ""
                            .Cells(gCstChListColPosPinAddress).ReadOnly = False               ''FUPin
                            .Cells(gCstChListColPosPinAddress).Style.BackColor = Color1

                            .Cells(gCstChListColPosDoStart).Value = ""
                            .Cells(gCstChListColPosDoStart).ReadOnly = True                 ''DO Start
                            .Cells(gCstChListColPosDoStart).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosPortDoStart).Value = ""
                            .Cells(gCstChListColPosPortDoStart).ReadOnly = True                 ''DO Start
                            .Cells(gCstChListColPosPortDoStart).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosPinDoStart).Value = ""
                            .Cells(gCstChListColPosPinDoStart).ReadOnly = True                 ''DO Start
                            .Cells(gCstChListColPosPinDoStart).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosStatusOut).ReadOnly = True               ''Status Out
                            .Cells(gCstChListColPosStatusOut).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus1).Value = ""
                            .Cells(gCstChListColPosDoStatus1).ReadOnly = True               ''Status1
                            .Cells(gCstChListColPosDoStatus1).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus2).Value = ""
                            .Cells(gCstChListColPosDoStatus2).ReadOnly = True               ''Status2
                            .Cells(gCstChListColPosDoStatus2).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus3).Value = ""
                            .Cells(gCstChListColPosDoStatus3).ReadOnly = True               ''Status3
                            .Cells(gCstChListColPosDoStatus3).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus4).Value = ""
                            .Cells(gCstChListColPosDoStatus4).ReadOnly = True               ''Status4
                            .Cells(gCstChListColPosDoStatus4).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus5).Value = ""
                            .Cells(gCstChListColPosDoStatus5).ReadOnly = True               ''Status5
                            .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly


                        ElseIf intValue = gCstCodeChDataTypeMotorDeviceJacom Or intValue = gCstCodeChDataTypeMotorDeviceJacom55 Then

                            '隠しコマンドのため削除
                            ' ''Ext Device (JACOM-22)  →　Port No の設定が可となる
                            '.Cells(gCstChListColPosPortNo).Value = 1
                            '.Cells(gCstChListColPosPortNo).ReadOnly = False                 ''Port No
                            '.Cells(gCstChListColPosPortNo).Style.BackColor = Color1

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            .Cells(gCstChListColPosFuAddress).Value = ""
                            .Cells(gCstChListColPosFuAddress).ReadOnly = True                 ''FU ADDRESS
                            .Cells(gCstChListColPosFuAddress).Style.BackColor = gColorGridRowBackReadOnly

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            .Cells(gCstChListColPosPortAddress).Value = ""
                            .Cells(gCstChListColPosPortAddress).ReadOnly = True               ''FUPort
                            .Cells(gCstChListColPosPortAddress).Style.BackColor = gColorGridRowBackReadOnly

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            'Ver2.0.1.8 入力値を消す処理を廃止
                            '.Cells(gCstChListColPosPinAddress).Value = ""
                            .Cells(gCstChListColPosPinAddress).ReadOnly = False               ''FUPin
                            .Cells(gCstChListColPosPinAddress).Style.BackColor = Color1

                            .Cells(gCstChListColPosDoStart).Value = ""
                            .Cells(gCstChListColPosDoStart).ReadOnly = True                 ''DO Start
                            .Cells(gCstChListColPosDoStart).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosPortDoStart).Value = ""
                            .Cells(gCstChListColPosPortDoStart).ReadOnly = True                 ''DO Start(Port)
                            .Cells(gCstChListColPosPortDoStart).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosPinDoStart).Value = ""
                            .Cells(gCstChListColPosPinDoStart).ReadOnly = True                 ''DO Start(Pin)
                            .Cells(gCstChListColPosPinDoStart).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosStatusOut).ReadOnly = True               ''Status Out
                            .Cells(gCstChListColPosStatusOut).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus1).Value = ""
                            .Cells(gCstChListColPosDoStatus1).ReadOnly = True               ''Status1
                            .Cells(gCstChListColPosDoStatus1).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus2).Value = ""
                            .Cells(gCstChListColPosDoStatus2).ReadOnly = True               ''Status2
                            .Cells(gCstChListColPosDoStatus2).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus3).Value = ""
                            .Cells(gCstChListColPosDoStatus3).ReadOnly = True               ''Status3
                            .Cells(gCstChListColPosDoStatus3).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus4).Value = ""
                            .Cells(gCstChListColPosDoStatus4).ReadOnly = True               ''Status4
                            .Cells(gCstChListColPosDoStatus4).Style.BackColor = gColorGridRowBackReadOnly

                            .Cells(gCstChListColPosDoStatus5).Value = ""
                            .Cells(gCstChListColPosDoStatus5).ReadOnly = True               ''Status5
                            .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly

                        Else

                            '.Cells(gCstChListColPosPortNo).Value = ""                       ''Port No
                            '.Cells(gCstChListColPosPortNo).ReadOnly = True
                            '.Cells(gCstChListColPosPortNo).Style.BackColor = gColorGridRowBackReadOnly

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            .Cells(gCstChListColPosFuAddress).ReadOnly = False
                            .Cells(gCstChListColPosFuAddress).Style.BackColor = Color1

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            .Cells(gCstChListColPosPortAddress).ReadOnly = False
                            .Cells(gCstChListColPosPortAddress).Style.BackColor = Color1

                            '2016/10/14 DI欄からFU欄へ入力位置変更 T.Ueki
                            .Cells(gCstChListColPosPinAddress).ReadOnly = False
                            .Cells(gCstChListColPosPinAddress).Style.BackColor = Color1

                            .Cells(gCstChListColPosDoStart).ReadOnly = False                ''DO Start
                            .Cells(gCstChListColPosDoStart).Style.BackColor = Color1

                            .Cells(gCstChListColPosPortDoStart).ReadOnly = False                ''DO Start(Port)
                            .Cells(gCstChListColPosPortDoStart).Style.BackColor = Color1

                            .Cells(gCstChListColPosPinDoStart).ReadOnly = False                ''DO Start(Pin)
                            .Cells(gCstChListColPosPinDoStart).Style.BackColor = Color1

                            .Cells(gCstChListColPosStatusOut).ReadOnly = False              ''Status Out
                            .Cells(gCstChListColPosStatusOut).Style.BackColor = Color1

                            ''Status Output コンボ　値セット
                            'Ver2.0.1.5 Status Outputコンボは変更しない
                            'grdCombo = CType(.Cells("txtStatusOut"), DataGridViewComboBoxCell)
                            'Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListStatusMotor)
                            'grdCombo.Value = gCstCodeChManualInputStatus.ToString  'gCstCodeChStatusTypeMotorRun.ToString

                            ''Status I を自動設定する-----------
                            Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusMotor)

                            strValue = dgv(gCstChListColPosDataType, e.RowIndex).FormattedValue
                            If strValue.IndexOf(":") >= 0 Then
                                strValue = strValue.Substring(strValue.IndexOf(":") + 1)
                            Else
                                strValue = "RUN"
                            End If

                            If cmbStatus.FindStringExact(strValue) >= 0 Then
                                cmbStatus.SelectedIndex = cmbStatus.FindStringExact(strValue)
                            Else
                                cmbStatus.SelectedIndex = 0
                            End If
                            '.Cells(mcstStatusIn).Value = cmbStatus.Text    <--- 表示しない

                            ''--------------------------------
                            ''DO Status
                            Dim strwk() As String = Nothing
                            Dim strbp() As String = Nothing
                            Dim wkDoStatus(7) As String
                            For i = 0 To 7
                                wkDoStatus(i) = ""
                            Next

                            If intValue >= gCstCodeChDataTypeMotorManRun And _
                               intValue <= gCstCodeChDataTypeMotorManRunK Then  'Ver2.0.0.2 モーター種別増加 JをKへ
                                strwk = mMotorStatus1(cmbStatus.SelectedIndex).ToString.Split("_")
                                strbp = mMotorBitPos1(cmbStatus.SelectedIndex).ToString.Split("_")
                            Else
                                'Ver2.0.0.2 モーター種別増加 Rの処理を追加
                                If intValue >= gCstCodeChDataTypeMotorRManRun And _
                                    intValue <= gCstCodeChDataTypeMotorRManRunK Then
                                    '正常Rは正常ステータス扱い
                                    strwk = mMotorStatus1(cmbStatus.SelectedIndex).ToString.Split("_")
                                    strbp = mMotorBitPos1(cmbStatus.SelectedIndex).ToString.Split("_")
                                Else
                                    strwk = mMotorStatus2(cmbStatus.SelectedIndex).ToString.Split("_")
                                    strbp = mMotorBitPos2(cmbStatus.SelectedIndex).ToString.Split("_")
                                End If
                            End If

                            For i = 0 To 4
                                wkDoStatus(CCInt(strbp(i))) = strwk(i)
                            Next

                            'T.Ueki DOステータス表示
                            grdCHList(gCstChListColPosDoStatus1, e.RowIndex).Value = ""
                            grdCHList(gCstChListColPosDoStatus2, e.RowIndex).Value = ""
                            grdCHList(gCstChListColPosDoStatus3, e.RowIndex).Value = ""
                            grdCHList(gCstChListColPosDoStatus4, e.RowIndex).Value = ""
                            grdCHList(gCstChListColPosDoStatus5, e.RowIndex).Value = ""
                            grdCHList(gCstChListColPosDoStatus6, e.RowIndex).Value = ""
                            grdCHList(gCstChListColPosDoStatus7, e.RowIndex).Value = ""
                            grdCHList(gCstChListColPosDoStatus8, e.RowIndex).Value = ""

                        End If

                    ElseIf dgv(0, e.RowIndex).Value = gCstCodeChTypePulse Then                  ''<パルス>------
                        'Ver2.0.1.9 Unit BKUP
                        Dim strUnitBKUP As String = NZf(.Cells("txtUnit").Value)
                        .Cells("txtUnit").Value = "*"

                        If strUnitBKUP <> "" Then
                            .Cells("txtUnit").Value = strUnitBKUP
                        End If

                            intValue = dgv(gCstChListColPosDataType, e.RowIndex).Value  ''intValue <-- Data Type

                            ''DecimalPoint
                            If (intValue >= gCstCodeChDataTypePulseTotal1_1 And _
                                intValue <= gCstCodeChDataTypePulseDay1_100) Or _
                               (intValue = gCstCodeChDataTypePulseExtDev) Then
                                ''パルスCH
                                .Cells(gCstChListColPosDecimalPoint).Value = ""
                                .Cells(gCstChListColPosDecimalPoint).ReadOnly = False


                            '' Ver1.11.8.3 2016.11.08 運転積算CH追加
                            '' Ver1.12.0.1 2017.01.13 運転積算種類追加
                        ElseIf (intValue >= gCstCodeChDataTypePulseRevoTotalHour And _
                               intValue <= gCstCodeChDataTypePulseRevoLapMin) Or _
                                intValue >= gCstCodeChDataTypePulseRevoExtDev Then
                            ''積算CH
                            Select Case intValue
                                Case gCstCodeChDataTypePulseRevoTotalHour, gCstCodeChDataTypePulseRevoDayHour, _
                                     gCstCodeChDataTypePulseRevoLapHour, gCstCodeChDataTypePulseRevoExtDevDayHour, _
                                     gCstCodeChDataTypePulseRevoExtDevLapHour, gCstCodeChDataTypePulseRevoExtDev

                                    .Cells(gCstChListColPosDecimalPoint).ReadOnly = True : .Cells(gCstChListColPosDecimalPoint).Value = 0 : .Cells(gCstChListColPosDecimalPoint).Style.BackColor = gColorGridRowBackReadOnly

                                Case gCstCodeChDataTypePulseRevoTotalMin, gCstCodeChDataTypePulseRevoDayMin, _
                                     gCstCodeChDataTypePulseRevoLapMin, gCstCodeChDataTypePulseRevoExtDevTotalMin, _
                                     gCstCodeChDataTypePulseRevoExtDevDayMin, gCstCodeChDataTypePulseRevoExtDevLapMin

                                    .Cells(gCstChListColPosDecimalPoint).ReadOnly = True : .Cells(gCstChListColPosDecimalPoint).Value = 2 : .Cells(gCstChListColPosDecimalPoint).Style.BackColor = gColorGridRowBackReadOnly
                            End Select
                            End If

                    ElseIf dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeComposite Then     ''<デジタルコンポジット>------

                            intValue = dgv(gCstChListColPosDataType, e.RowIndex).Value  ''intValue <-- Data Type

                            If intValue = gCstCodeChDataTypeCompTankLevel Then
                                ''代表ステータス
                                .Cells(gCstChListColPosStatusIn).ReadOnly = False : .Cells(gCstChListColPosStatusIn).Style.BackColor = Color1
                            Else
                                ''個別ステータス
                                .Cells(gCstChListColPosStatusIn).ReadOnly = True : .Cells(gCstChListColPosStatusIn).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosStatusIn).Value = ""
                            End If

                    ElseIf dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeValve Then         ''<バルブ>------------------------

                            intValue = dgv(gCstChListColPosDataType, e.RowIndex).Value  ''intValue <-- Data Type

                        Dim strPasteUnit As String = ""

                            Select Case intValue

                                Case gCstCodeChDataTypeValveDI_DO         ''I/O : DI -> DO

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusIn, "-", False, Color1)                                             '5
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "", True, gColorGridRowBackReadOnly)                             '6
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "", True, gColorGridRowBackReadOnly)                             '7
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, "", True, gColorGridRowBackReadOnly)                                '8
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueH, "", True, gColorGridRowBackReadOnly)                              '9
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "-", False, Color1)                                               '10
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "-", False, Color1)                                               '11
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "-", False, Color1)                                               '12
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "-", False, Color1)                                               '13
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueL, "", True, gColorGridRowBackReadOnly)                              '14
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "", True, gColorGridRowBackReadOnly)                              '15
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "", True, gColorGridRowBackReadOnly)                              '16
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "", True, gColorGridRowBackReadOnly)                              '17
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "", True, gColorGridRowBackReadOnly)                              '18

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueHH, "", True, gColorGridRowBackReadOnly)                             '23
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "", True, gColorGridRowBackReadOnly)                             '24
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "", True, gColorGridRowBackReadOnly)                             '25
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "", True, gColorGridRowBackReadOnly)                             '26
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "", True, gColorGridRowBackReadOnly)                             '27
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueLL, "", True, gColorGridRowBackReadOnly)                             '28
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "", True, gColorGridRowBackReadOnly)                             '29
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "", True, gColorGridRowBackReadOnly)                             '30
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "", True, gColorGridRowBackReadOnly)                             '31
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "", True, gColorGridRowBackReadOnly)                             '32

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "-", False, Color1)                                            '35
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "-", False, Color1)                                          '36
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "-", False, Color1)                                           '37

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "", True, gColorGridRowBackReadOnly)                             '39
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "", True, gColorGridRowBackReadOnly)                             '40

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalLo, "", True, gColorGridRowBackReadOnly)                            '43
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalHi, "", True, gColorGridRowBackReadOnly)                            '44

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosString, "", True, gColorGridRowBackReadOnly)                              '52
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosCenterGraph, "", True, gColorGridRowBackReadOnly)                         '53

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)                             '59
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)                              '60
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)                              '61
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)                             '62
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOffset, "", True, gColorGridRowBackReadOnly)                              '63

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosComposite, "", True, gColorGridRowBackReadOnly)                           '65

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStart, "-", False, Color1)                                              '67
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDoStart, "-", False, Color1)                                          '68
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDoStart, "-", False, Color1)                                           '69
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosBitCount, "1", False, Color1)                                             '70
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosControlType, "0", False, Color1)                                          '71
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPulseWidth, "", True, gColorGridRowBackReadOnly)                          '72
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusOut, gCstCodeChManualInputStatus, True, gColorGridRowBackReadOnly)  '73
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus1, "", False, Color1)                                             '74
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus2, "", True, gColorGridRowBackReadOnly)                           '75
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus3, "", True, gColorGridRowBackReadOnly)                           '76
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus4, "", True, gColorGridRowBackReadOnly)                           '77
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus5, "", True, gColorGridRowBackReadOnly)                           '78
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus6, "", True, gColorGridRowBackReadOnly)                           '79
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus7, "", True, gColorGridRowBackReadOnly)                           '80
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus8, "", True, gColorGridRowBackReadOnly)                           '81
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp1, "", True, gColorGridRowBackReadOnly)                              '82
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp2, "", True, gColorGridRowBackReadOnly)                              '83
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys1, "", True, gColorGridRowBackReadOnly)                             '84
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys2, "", True, gColorGridRowBackReadOnly)                             '85
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSt, "", True, gColorGridRowBackReadOnly)                               '86
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutVar, "", True, gColorGridRowBackReadOnly)                              '87

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "", True, gColorGridRowBackReadOnly)                             '95 非表示

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAiTerm, "", True, gColorGridRowBackReadOnly)                              '108 非表示
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAiTerm, "", True, gColorGridRowBackReadOnly)                          '109 非表示
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAiTerm, "", True, gColorGridRowBackReadOnly)                           '110 非表示
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAoTerm, "", True, gColorGridRowBackReadOnly)                              '111 非表示
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAoTerm, "", True, gColorGridRowBackReadOnly)                          '112 非表示
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAoTerm, "", True, gColorGridRowBackReadOnly)                           '113 非表示
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)                              '114 非表示

                                    ''Delay Timeコンボ　初期値
                                    grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell) : grdCombo.Value = "0"
                                    grdCombo.ReadOnly = False : grdCombo.Style.BackColor = Color1

                                    grdCombo = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell) : grdCombo.Value = Nothing
                                    grdCombo.ReadOnly = True : grdCombo.Style.BackColor = gColorGridRowBackReadOnly


                                Case gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, gCstCodeChDataTypeValvePT_DO2    ''I/O : AI -> DO

                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusIn, "-", False, Color1)                                             '5
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "-", False, Color1)                                              '6
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "-", False, Color1)                                              '7
                                If NZf(dgv(gCstChListColPosUnit, e.RowIndex).Value) <> "" Then
                                    strPasteUnit = NZf(dgv(gCstChListColPosUnit, e.RowIndex).Value)
                                Else
                                    strPasteUnit = "*"
                                End If
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, strPasteUnit, False, Color1)                                                 '8
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueH, "-", False, Color1)                                               '9
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "-", False, Color1)                                               '10
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "-", False, Color1)                                               '11
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "-", False, Color1)                                               '12
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "-", False, Color1)                                               '13
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueL, "-", False, Color1)                                               '14
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "-", False, Color1)                                               '15
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "-", False, Color1)                                               '16
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "-", False, Color1)                                               '17
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "-", False, Color1)                                               '18

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueHH, "-", False, Color1)                                              '23
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "-", False, Color1)                                              '24
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "-", False, Color1)                                              '25
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "-", False, Color1)                                              '26
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "-", False, Color1)                                              '27
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueLL, "-", False, Color1)                                              '28
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "-", False, Color1)                                              '29
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "-", False, Color1)                                              '30
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "-", False, Color1)                                              '31
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "-", False, Color1)                                              '32

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "-", False, Color1)                                            '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "-", False, Color1)                                          '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "-", False, Color1)                                           '37

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "-", False, Color1)                                              '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "-", False, Color1)                                              '40

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalLo, "-", False, Color1)                                             '43
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalHi, "-", False, Color1)                                             '44

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosString, "-", False, Color1)                                               '52
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosCenterGraph, "0", False, Color1)                                          '53

                                ''入力ステータスが空欄ならアラーム毎のステータスを手入力可にする
                                strValue = .Cells(gCstChListColPosStatusIn).Value
                                If strValue = "" Then
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "-", False, Color1)                                          '59
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "-", False, Color1)                                           '60
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "-", False, Color1)                                           '61
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "-", False, Color1)                                          '62
                                Else
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)                         '59
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)                          '60
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)                          '61
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)                         '62
                                End If

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOffset, "-", False, Color1)                                               '63

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosComposite, "", True, gColorGridRowBackReadOnly)                           '65

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStart, "-", False, Color1)                                              '67
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDoStart, "-", False, Color1)                                          '68
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDoStart, "-", False, Color1)                                           '69
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosBitCount, "1", False, Color1)                                             '70
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosControlType, "0", False, Color1)                                          '71
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPulseWidth, "", True, gColorGridRowBackReadOnly)                          '72
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusOut, gCstCodeChManualInputStatus, True, gColorGridRowBackReadOnly)  '73
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus1, "", False, Color1)                                             '74
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus2, "", True, gColorGridRowBackReadOnly)                           '75
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus3, "", True, gColorGridRowBackReadOnly)                           '76
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus4, "", True, gColorGridRowBackReadOnly)                           '77
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus5, "", True, gColorGridRowBackReadOnly)                           '78
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus6, "", True, gColorGridRowBackReadOnly)                           '79
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus7, "", True, gColorGridRowBackReadOnly)                           '80
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus8, "", True, gColorGridRowBackReadOnly)                           '81
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp1, "-", False, Color1)                                               '82
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp2, "-", False, Color1)                                               '83
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys1, "-", False, Color1)                                              '84
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys2, "-", False, Color1)                                              '85
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSt, "-", False, Color1)                                                '86
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutVar, "", True, gColorGridRowBackReadOnly)                              '87

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "-", False, Color1)                                              '95 非表示

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDiStart, "", True, gColorGridRowBackReadOnly)                             '105 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDiStart, "", True, gColorGridRowBackReadOnly)                         '106 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDiStart, "", True, gColorGridRowBackReadOnly)                          '107 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAiTerm, "-", False, Color1)                                               '108 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAiTerm, "-", False, Color1)                                           '109 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAiTerm, "-", False, Color1)                                            '110 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAoTerm, "", True, gColorGridRowBackReadOnly)                              '111 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAoTerm, "", True, gColorGridRowBackReadOnly)                          '112 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAoTerm, "", True, gColorGridRowBackReadOnly)                           '113 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)                              '114 非表示

                                ''Delay Timeコンボ　初期値
                                grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell) : grdCombo.Value = "0"
                                grdCombo.ReadOnly = False : grdCombo.Style.BackColor = Color1

                                grdCombo = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell) : grdCombo.Value = Nothing
                                grdCombo.ReadOnly = True : grdCombo.Style.BackColor = gColorGridRowBackReadOnly

                                ''Value SF 初期値　
                                grdCombo = CType(.Cells("cmbValueSF"), DataGridViewComboBoxCell)
                                grdCombo.Value = "0"


                            Case gCstCodeChDataTypeValveAI_AO1, gCstCodeChDataTypeValveAI_AO2, gCstCodeChDataTypeValvePT_AO2   ''I/O : AI -> AO

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusIn, "-", False, Color1)                             '5
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "-", False, Color1)                              '6
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "-", False, Color1)                              '7
                                If NZf(dgv(gCstChListColPosUnit, e.RowIndex).Value) <> "" Then
                                    strPasteUnit = NZf(dgv(gCstChListColPosUnit, e.RowIndex).Value)
                                Else
                                    strPasteUnit = "*"
                                End If
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, strPasteUnit, False, Color1)                                 '8
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueH, "-", False, Color1)                               '9
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "-", False, Color1)                               '10
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "-", False, Color1)                               '11
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "-", False, Color1)                               '12
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "-", False, Color1)                               '13
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueL, "-", False, Color1)                               '14
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "-", False, Color1)                               '15
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "-", False, Color1)                               '16
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "-", False, Color1)                               '17
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "-", False, Color1)                               '18

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueHH, "-", False, Color1)                              '23
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "-", False, Color1)                              '24
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "-", False, Color1)                              '25
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "-", False, Color1)                              '26
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "-", False, Color1)                              '27
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueLL, "-", False, Color1)                              '28
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "-", False, Color1)                              '29
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "-", False, Color1)                              '30
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "-", False, Color1)                              '31
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "-", False, Color1)                              '32

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "-", False, Color1)                            '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "-", False, Color1)                          '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "-", False, Color1)                           '37

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "-", False, Color1)                              '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "-", False, Color1)                              '40

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalLo, "-", False, Color1)                             '43
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalHi, "-", False, Color1)                             '44

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosString, "-", False, Color1)                               '52
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosCenterGraph, "0", False, Color1)                          '53

                                ''入力ステータスが空欄ならアラーム毎のステータスを手入力可にする
                                strValue = .Cells(gCstChListColPosStatusIn).Value
                                If strValue = "" Then
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "-", False, Color1)                          '59
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "-", False, Color1)                           '60
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "-", False, Color1)                           '61
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "-", False, Color1)                          '62
                                Else
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)         '59
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)          '60
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)          '61
                                    Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)         '62
                                End If

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOffset, "-", False, Color1)                               '63

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosComposite, "", True, gColorGridRowBackReadOnly)           '65

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStart, "-", False, Color1)                              '67
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDoStart, "-", False, Color1)                          '68
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDoStart, "-", False, Color1)                           '69
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosBitCount, "", True, gColorGridRowBackReadOnly)            '70
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosControlType, "0", True, gColorGridRowBackReadOnly)        '71
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPulseWidth, "", True, gColorGridRowBackReadOnly)          '72
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusOut, "0", True, gColorGridRowBackReadOnly)          '73
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus1, "", True, gColorGridRowBackReadOnly)           '74
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus2, "", True, gColorGridRowBackReadOnly)           '75
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus3, "", True, gColorGridRowBackReadOnly)           '76
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus4, "", True, gColorGridRowBackReadOnly)           '77
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus5, "", True, gColorGridRowBackReadOnly)           '78
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus6, "", True, gColorGridRowBackReadOnly)           '79
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus7, "", True, gColorGridRowBackReadOnly)           '80
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus8, "", True, gColorGridRowBackReadOnly)           '81
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp1, "-", False, Color1)                               '82
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp2, "-", False, Color1)                               '83
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys1, "-", False, Color1)                              '84
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys2, "-", False, Color1)                              '85
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSt, "-", False, Color1)                                '86
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutVar, "-", False, Color1)                               '87

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "-", False, Color1)                              '95 非表示

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDiStart, "", True, gColorGridRowBackReadOnly)             '105 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDiStart, "", True, gColorGridRowBackReadOnly)         '106 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDiStart, "", True, gColorGridRowBackReadOnly)          '107 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAiTerm, "-", False, Color1)                               '108 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAiTerm, "-", False, Color1)                           '109 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAiTerm, "-", False, Color1)                            '110 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAoTerm, "-", False, Color1)                               '111 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAoTerm, "-", False, Color1)                           '112 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAoTerm, "-", False, Color1)                            '113 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)              '114 非表示


                                ''Delay Timeコンボ　初期値
                                grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell) : grdCombo.Value = "0"
                                grdCombo.ReadOnly = False : grdCombo.Style.BackColor = Color1

                                grdCombo = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell) : grdCombo.Value = Nothing
                                grdCombo.ReadOnly = True : grdCombo.Style.BackColor = gColorGridRowBackReadOnly

                                ''Value SF 初期値　
                                grdCombo = CType(.Cells("cmbValueSF"), DataGridViewComboBoxCell)
                                grdCombo.Value = "0"

                            Case gCstCodeChDataTypeValveAO_4_20     '' /O : Analog 4-20 mA

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusIn, "", True, gColorGridRowBackReadOnly)            '5
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "-", False, Color1)                              '6
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "-", False, Color1)                              '7
                                If NZf(dgv(gCstChListColPosUnit, e.RowIndex).Value) <> "" Then
                                    strPasteUnit = NZf(dgv(gCstChListColPosUnit, e.RowIndex).Value)
                                Else
                                    strPasteUnit = "*"
                                End If
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, strPasteUnit, False, Color1)                                 '8
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueH, "", True, gColorGridRowBackReadOnly)              '9
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "", True, gColorGridRowBackReadOnly)              '10
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "", True, gColorGridRowBackReadOnly)              '11
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "", True, gColorGridRowBackReadOnly)              '12
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "", True, gColorGridRowBackReadOnly)              '13
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueL, "", True, gColorGridRowBackReadOnly)              '14
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "", True, gColorGridRowBackReadOnly)              '15
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "", True, gColorGridRowBackReadOnly)              '16
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "", True, gColorGridRowBackReadOnly)              '17
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "", True, gColorGridRowBackReadOnly)              '18

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueHH, "", True, gColorGridRowBackReadOnly)             '23
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "", True, gColorGridRowBackReadOnly)             '24
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "", True, gColorGridRowBackReadOnly)             '25
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "", True, gColorGridRowBackReadOnly)             '26
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "", True, gColorGridRowBackReadOnly)             '27
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueLL, "", True, gColorGridRowBackReadOnly)             '28
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "", True, gColorGridRowBackReadOnly)             '29
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "", True, gColorGridRowBackReadOnly)             '30
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "", True, gColorGridRowBackReadOnly)             '31
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "", True, gColorGridRowBackReadOnly)             '32

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)           '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly)         '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", True, gColorGridRowBackReadOnly)          '37

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "", True, gColorGridRowBackReadOnly)             '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "", True, gColorGridRowBackReadOnly)             '40

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalLo, "", True, gColorGridRowBackReadOnly)            '43
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalHi, "", True, gColorGridRowBackReadOnly)            '44

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayTime, Nothing, True, gColorGridRowBackReadOnly)      '47

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosString, "", True, gColorGridRowBackReadOnly)              '52
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosCenterGraph, "", True, gColorGridRowBackReadOnly)         '53

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)             '59
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)              '60
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)              '61
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)             '62
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOffset, "", True, gColorGridRowBackReadOnly)              '63

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosComposite, "", True, gColorGridRowBackReadOnly)           '65

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStart, "-", False, Color1)                              '67
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDoStart, "-", False, Color1)                          '68
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDoStart, "-", False, Color1)                           '69
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosBitCount, "", True, gColorGridRowBackReadOnly)            '70
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosControlType, "0", True, gColorGridRowBackReadOnly)        '71
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPulseWidth, "", True, gColorGridRowBackReadOnly)          '72
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusOut, "0", True, gColorGridRowBackReadOnly)          '73
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus1, "", True, gColorGridRowBackReadOnly)           '74
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus2, "", True, gColorGridRowBackReadOnly)           '75
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus3, "", True, gColorGridRowBackReadOnly)           '76
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus4, "", True, gColorGridRowBackReadOnly)           '77
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus5, "", True, gColorGridRowBackReadOnly)           '78
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus6, "", True, gColorGridRowBackReadOnly)           '79
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus7, "", True, gColorGridRowBackReadOnly)           '80
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus8, "", True, gColorGridRowBackReadOnly)           '81
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp1, "-", False, Color1)                               '82
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp2, "-", False, Color1)                               '83
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys1, "-", False, Color1)                              '84
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys2, "-", False, Color1)                              '85
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSt, "-", False, Color1)                                '86
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutVar, "-", False, Color1)                               '87

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "", True, gColorGridRowBackReadOnly)             '95 非表示

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDiStart, "", True, gColorGridRowBackReadOnly)             '105 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDiStart, "", True, gColorGridRowBackReadOnly)         '106 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDiStart, "", True, gColorGridRowBackReadOnly)          '107 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAiTerm, "", True, gColorGridRowBackReadOnly)              '108 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAiTerm, "", True, gColorGridRowBackReadOnly)          '109 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAiTerm, "", True, gColorGridRowBackReadOnly)           '110 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAoTerm, "-", False, Color1)                               '111 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAoTerm, "-", False, Color1)                           '112 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAoTerm, "-", False, Color1)                            '113 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)              '114 非表示

                                ''Delay Timeコンボ　初期値
                                grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell) : grdCombo.Value = Nothing
                                grdCombo.ReadOnly = True : grdCombo.Style.BackColor = gColorGridRowBackReadOnly

                                grdCombo = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell) : grdCombo.Value = "0"
                                grdCombo.ReadOnly = False : grdCombo.Style.BackColor = Color1


                            Case gCstCodeChDataTypeValveDO     '' /O : Digital

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusIn, "", True, gColorGridRowBackReadOnly)                            '5
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "", True, gColorGridRowBackReadOnly)                             '6
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "", True, gColorGridRowBackReadOnly)                             '7
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, "", True, gColorGridRowBackReadOnly)                                '8
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueH, "", True, gColorGridRowBackReadOnly)                              '9
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "", True, gColorGridRowBackReadOnly)                              '10
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "", True, gColorGridRowBackReadOnly)                              '11
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "", True, gColorGridRowBackReadOnly)                              '12
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "", True, gColorGridRowBackReadOnly)                              '13
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueL, "", True, gColorGridRowBackReadOnly)                              '14
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "", True, gColorGridRowBackReadOnly)                              '15
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "", True, gColorGridRowBackReadOnly)                              '16
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "", True, gColorGridRowBackReadOnly)                              '17
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "", True, gColorGridRowBackReadOnly)                              '18

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueHH, "", True, gColorGridRowBackReadOnly)                             '23
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "", True, gColorGridRowBackReadOnly)                             '24
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "", True, gColorGridRowBackReadOnly)                             '25
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "", True, gColorGridRowBackReadOnly)                             '26
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "", True, gColorGridRowBackReadOnly)                             '27
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueLL, "", True, gColorGridRowBackReadOnly)                             '28
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "", True, gColorGridRowBackReadOnly)                             '29
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "", True, gColorGridRowBackReadOnly)                             '30
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "", True, gColorGridRowBackReadOnly)                             '31
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "", True, gColorGridRowBackReadOnly)                             '32

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)                           '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly)                         '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", True, gColorGridRowBackReadOnly)                          '37

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "", True, gColorGridRowBackReadOnly)                             '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "", True, gColorGridRowBackReadOnly)                             '40

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalLo, "", True, gColorGridRowBackReadOnly)                            '43
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalHi, "", True, gColorGridRowBackReadOnly)                            '44

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayTime, "", True, gColorGridRowBackReadOnly)                           '47

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosString, "", True, gColorGridRowBackReadOnly)                              '52
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosCenterGraph, "", True, gColorGridRowBackReadOnly)                         '53

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)                             '59
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)                              '60
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)                              '61
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)                             '62
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOffset, "", True, gColorGridRowBackReadOnly)                              '63

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosComposite, "", True, gColorGridRowBackReadOnly)                           '65

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStart, "-", False, Color1)                                              '67
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDoStart, "-", False, Color1)                                          '68
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDoStart, "-", False, Color1)                                           '69
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosBitCount, "1", False, Color1)                                             '70
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosControlType, "0", False, Color1)                                          '71
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPulseWidth, "", True, gColorGridRowBackReadOnly)                          '72
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusOut, gCstCodeChManualInputStatus, True, gColorGridRowBackReadOnly)  '73
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus1, "", False, Color1)                                             '74
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus2, "", True, gColorGridRowBackReadOnly)                           '75
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus3, "", True, gColorGridRowBackReadOnly)                           '76
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus4, "", True, gColorGridRowBackReadOnly)                           '77
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus5, "", True, gColorGridRowBackReadOnly)                           '78
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus6, "", True, gColorGridRowBackReadOnly)                           '79
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus7, "", True, gColorGridRowBackReadOnly)                           '80
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus8, "", True, gColorGridRowBackReadOnly)                           '81
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp1, "", True, gColorGridRowBackReadOnly)                              '82
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp2, "", True, gColorGridRowBackReadOnly)                              '83
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys1, "", True, gColorGridRowBackReadOnly)                             '84
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys2, "", True, gColorGridRowBackReadOnly)                             '85
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSt, "", True, gColorGridRowBackReadOnly)                               '86
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutVar, "", True, gColorGridRowBackReadOnly)                              '87

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "", True, gColorGridRowBackReadOnly)                             '95 非表示

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDiStart, "", True, gColorGridRowBackReadOnly)                             '105 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDiStart, "", True, gColorGridRowBackReadOnly)                         '106 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDiStart, "", True, gColorGridRowBackReadOnly)                          '107 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAiTerm, "", True, gColorGridRowBackReadOnly)                              '108 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAiTerm, "", True, gColorGridRowBackReadOnly)                          '109 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAiTerm, "", True, gColorGridRowBackReadOnly)                           '110 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAoTerm, "", True, gColorGridRowBackReadOnly)                              '111 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAoTerm, "", True, gColorGridRowBackReadOnly)                          '112 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAoTerm, "", True, gColorGridRowBackReadOnly)                           '113 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)                              '114 非表示


                                ''Delay Timeコンボ　初期値
                                grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell) : grdCombo.Value = Nothing
                                grdCombo.ReadOnly = True : grdCombo.Style.BackColor = gColorGridRowBackReadOnly

                                grdCombo = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell) : grdCombo.Value = "0"
                                grdCombo.ReadOnly = False : grdCombo.Style.BackColor = Color1

                            Case gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveJacom55     '' /O : 外部機器（JACOM-22）DO

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusIn, "", True, gColorGridRowBackReadOnly)            '5
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "", True, gColorGridRowBackReadOnly)             '6
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "", True, gColorGridRowBackReadOnly)             '7
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, "", True, gColorGridRowBackReadOnly)                '8
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueH, "", True, gColorGridRowBackReadOnly)              '9
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "", True, gColorGridRowBackReadOnly)              '10
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "", True, gColorGridRowBackReadOnly)              '11
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "", True, gColorGridRowBackReadOnly)              '12
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "", True, gColorGridRowBackReadOnly)              '13
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueL, "", True, gColorGridRowBackReadOnly)              '14
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "", True, gColorGridRowBackReadOnly)              '15
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "", True, gColorGridRowBackReadOnly)              '16
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "", True, gColorGridRowBackReadOnly)              '17
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "", True, gColorGridRowBackReadOnly)              '18

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueHH, "", True, gColorGridRowBackReadOnly)             '23
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "", True, gColorGridRowBackReadOnly)             '24
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "", True, gColorGridRowBackReadOnly)             '25
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "", True, gColorGridRowBackReadOnly)             '26
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "", True, gColorGridRowBackReadOnly)             '27
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueLL, "", True, gColorGridRowBackReadOnly)             '28
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "", True, gColorGridRowBackReadOnly)             '29
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "", True, gColorGridRowBackReadOnly)             '30
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "", True, gColorGridRowBackReadOnly)             '31
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "", True, gColorGridRowBackReadOnly)             '32

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)           '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly)         '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", False, Color1)                            '37

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "", True, gColorGridRowBackReadOnly)             '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "", True, gColorGridRowBackReadOnly)             '40

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalLo, "", True, gColorGridRowBackReadOnly)            '43
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalHi, "", True, gColorGridRowBackReadOnly)            '44

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayTime, "", True, gColorGridRowBackReadOnly)           '47

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosString, "", True, gColorGridRowBackReadOnly)              '52
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosCenterGraph, "", True, gColorGridRowBackReadOnly)         '53

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)             '59
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)              '60
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)              '61
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)             '62
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOffset, "", True, gColorGridRowBackReadOnly)              '63                                

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosComposite, "", True, gColorGridRowBackReadOnly)           '65

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStart, "", True, gColorGridRowBackReadOnly)             '67
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDoStart, "", True, gColorGridRowBackReadOnly)         '68
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDoStart, "", True, gColorGridRowBackReadOnly)          '69
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosBitCount, "", True, gColorGridRowBackReadOnly)            '70
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosControlType, "0", False, Color1)                          '71
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPulseWidth, "", True, gColorGridRowBackReadOnly)          '72
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusOut, "0", True, gColorGridRowBackReadOnly)          '73
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus1, "", True, gColorGridRowBackReadOnly)           '74
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus2, "", True, gColorGridRowBackReadOnly)           '75
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus3, "", True, gColorGridRowBackReadOnly)           '76
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus4, "", True, gColorGridRowBackReadOnly)           '77
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus5, "", True, gColorGridRowBackReadOnly)           '78
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus6, "", True, gColorGridRowBackReadOnly)           '79
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus7, "", True, gColorGridRowBackReadOnly)           '80
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus8, "", True, gColorGridRowBackReadOnly)           '81
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp1, "", True, gColorGridRowBackReadOnly)              '82
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp2, "", True, gColorGridRowBackReadOnly)              '83
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys1, "", True, gColorGridRowBackReadOnly)             '84
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys2, "", True, gColorGridRowBackReadOnly)             '85
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSt, "", True, gColorGridRowBackReadOnly)               '86
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutVar, "", True, gColorGridRowBackReadOnly)              '87

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "", True, gColorGridRowBackReadOnly)             '95 非表示

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDiStart, "", True, gColorGridRowBackReadOnly)             '105 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDiStart, "", True, gColorGridRowBackReadOnly)         '106 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDiStart, "", True, gColorGridRowBackReadOnly)          '107 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAiTerm, "", True, gColorGridRowBackReadOnly)              '108 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAiTerm, "", True, gColorGridRowBackReadOnly)          '109 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAiTerm, "", True, gColorGridRowBackReadOnly)           '110 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAoTerm, "", True, gColorGridRowBackReadOnly)              '111 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAoTerm, "", True, gColorGridRowBackReadOnly)          '112 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAoTerm, "", True, gColorGridRowBackReadOnly)           '113 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)              '114 非表示

                                ''Delay Timeコンボ　初期値
                                grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell) : grdCombo.Value = Nothing
                                grdCombo.ReadOnly = True : grdCombo.Style.BackColor = gColorGridRowBackReadOnly

                                grdCombo = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell) : grdCombo.Value = "0"
                                grdCombo.ReadOnly = False : grdCombo.Style.BackColor = Color1


                            Case gCstCodeChDataTypeValveExt     '' /O : 外部機器（延長警報盤）DO

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusIn, "", True, gColorGridRowBackReadOnly)            '5
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeLo, "", True, gColorGridRowBackReadOnly)             '6
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosRangeHi, "", True, gColorGridRowBackReadOnly)             '7
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosUnit, "", True, gColorGridRowBackReadOnly)                '8
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueH, "", True, gColorGridRowBackReadOnly)              '9
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrH, "", True, gColorGridRowBackReadOnly)              '10
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayH, "", True, gColorGridRowBackReadOnly)              '11
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1H, "", True, gColorGridRowBackReadOnly)              '12
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2H, "", True, gColorGridRowBackReadOnly)              '13
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueL, "", True, gColorGridRowBackReadOnly)              '14
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrL, "", True, gColorGridRowBackReadOnly)              '15
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayL, "", True, gColorGridRowBackReadOnly)              '16
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1L, "", True, gColorGridRowBackReadOnly)              '17
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2L, "", True, gColorGridRowBackReadOnly)              '18

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueHH, "", True, gColorGridRowBackReadOnly)             '23
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrHH, "", True, gColorGridRowBackReadOnly)             '24
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayHH, "", True, gColorGridRowBackReadOnly)             '25
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1HH, "", True, gColorGridRowBackReadOnly)             '26
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2HH, "", True, gColorGridRowBackReadOnly)             '27
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueLL, "", True, gColorGridRowBackReadOnly)             '28
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrLL, "", True, gColorGridRowBackReadOnly)             '29
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayLL, "", True, gColorGridRowBackReadOnly)             '30
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep1LL, "", True, gColorGridRowBackReadOnly)             '31
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosGrep2LL, "", True, gColorGridRowBackReadOnly)             '32

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosFuAddress, "", True, gColorGridRowBackReadOnly)           '35
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAddress, "", True, gColorGridRowBackReadOnly)         '36
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAddress, "", True, gColorGridRowBackReadOnly)          '37

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosExtGrSF, "", True, gColorGridRowBackReadOnly)             '39
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelaySF, "", True, gColorGridRowBackReadOnly)             '40

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalLo, "", True, gColorGridRowBackReadOnly)            '43
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosNormalHi, "", True, gColorGridRowBackReadOnly)            '44
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDelayTime, "0", True, gColorGridRowBackReadOnly)      '47

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosString, "", True, gColorGridRowBackReadOnly)              '52
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosCenterGraph, "", True, gColorGridRowBackReadOnly)         '53

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmHH, "", True, gColorGridRowBackReadOnly)             '59
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmH, "", True, gColorGridRowBackReadOnly)              '60
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmL, "", True, gColorGridRowBackReadOnly)              '61
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStaNmLL, "", True, gColorGridRowBackReadOnly)             '62
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOffset, "", True, gColorGridRowBackReadOnly)              '63                                

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosComposite, "", True, gColorGridRowBackReadOnly)           '65

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStart, "-", False, Color1)                              '67
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDoStart, "-", False, Color1)                          '68
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDoStart, "-", False, Color1)                           '69
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosBitCount, "", True, gColorGridRowBackReadOnly)            '70
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosControlType, "0", False, Color1)                          '71
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPulseWidth, "", True, gColorGridRowBackReadOnly)          '72
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosStatusOut, "0", True, gColorGridRowBackReadOnly)          '73
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus1, "", True, gColorGridRowBackReadOnly)           '74
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus2, "", True, gColorGridRowBackReadOnly)           '75
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus3, "", True, gColorGridRowBackReadOnly)           '76
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus4, "", True, gColorGridRowBackReadOnly)           '77
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus5, "", True, gColorGridRowBackReadOnly)           '78
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus6, "", True, gColorGridRowBackReadOnly)           '79
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus7, "", True, gColorGridRowBackReadOnly)           '80
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDoStatus8, "", True, gColorGridRowBackReadOnly)           '81
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp1, "", True, gColorGridRowBackReadOnly)              '82
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSp2, "", True, gColorGridRowBackReadOnly)              '83
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys1, "", True, gColorGridRowBackReadOnly)             '84
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutHys2, "", True, gColorGridRowBackReadOnly)             '85
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutSt, "", True, gColorGridRowBackReadOnly)               '86
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosOutVar, "", True, gColorGridRowBackReadOnly)              '87

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosValueSF, "", True, gColorGridRowBackReadOnly)             '95 非表示

                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosDiStart, "", True, gColorGridRowBackReadOnly)             '105 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortDiStart, "", True, gColorGridRowBackReadOnly)         '106 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinDiStart, "", True, gColorGridRowBackReadOnly)          '107 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAiTerm, "", True, gColorGridRowBackReadOnly)              '108 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAiTerm, "", True, gColorGridRowBackReadOnly)          '109 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAiTerm, "", True, gColorGridRowBackReadOnly)           '110 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosAoTerm, "", True, gColorGridRowBackReadOnly)              '111 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortAoTerm, "", True, gColorGridRowBackReadOnly)          '112 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPinAoTerm, "", True, gColorGridRowBackReadOnly)           '113 非表示
                                Call mCellSetValueDisplay(e.RowIndex, gCstChListColPosPortNo, "", True, gColorGridRowBackReadOnly)              '114 非表示

                                ''Delay Timeコンボ　初期値
                                grdCombo = CType(.Cells("cmbTime"), DataGridViewComboBoxCell) : grdCombo.Value = Nothing
                                grdCombo.ReadOnly = True : grdCombo.Style.BackColor = gColorGridRowBackReadOnly

                                grdCombo = CType(.Cells("cmbTime_O"), DataGridViewComboBoxCell) : grdCombo.Value = "0"
                                grdCombo.ReadOnly = False : grdCombo.Style.BackColor = Color1
                        End Select

                            ''延長警報盤    DO
                            col = CType(.Cells(gCstChListColPosEccFunc), DataGridViewComboBoxCell)  ''[Ecc Func]
                            If intValue = gCstCodeChDataTypeValveExt Then
                                '延長警報盤コンボ　値セット
                                grdCombo = CType(.Cells("cmbEccFunc"), DataGridViewComboBoxCell)
                                Call gSetComboBox(grdCombo, gEnmComboType.ctChTerminalFunctionFuncDO)
                                grdCombo.Value = "1"

                                ''Ecc Func
                                .Cells(gCstChListColPosEccFunc).ReadOnly = False : .Cells(gCstChListColPosEccFunc).Style.BackColor = Color1
                            Else
                                ''延長警報盤コンボ　クリア
                                tblDataType.Columns.Add("Type", GetType(String))
                                tblDataType.Clear()
                                col.Value = Nothing
                                col.DataSource = tblDataType

                                .Cells(gCstChListColPosEccFunc).ReadOnly = True
                                .Cells(gCstChListColPosEccFunc).Style.BackColor = gColorGridRowBackReadOnly
                            End If

                    ElseIf dgv(0, e.RowIndex).Value = gCstCodeChTypePID Then                  '<PID>------
                        'Range Typeコンボ　値セット
                        grdCombo = CType(.Cells("cmbRangeType"), DataGridViewComboBoxCell)
                        Call gSetComboBox(grdCombo, gEnmComboType.ctChListChannelListRangeType1)
                        grdCombo.Value = gCstCodeChRangeAnalogPt0_700.ToString
                    End If


                    'Ver2.0.1.8 SigCHG　DataTypeが変わればSig編集
                    Call subSigSet(e.RowIndex)

                        '▼▼▼ 20110614 仮設定対応 ▼▼▼▼▼▼▼▼▼▼▼▼
                        ''仮設定の背景色を再表示
                        Call mSetDisplayDummySettingOne(e.RowIndex)
                        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                ElseIf e.ColumnIndex = gCstChListColPosStatusIn Then    ''<<< Status In 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    If (dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeAnalog) Or _
                       (dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypePID) Or _
                       (dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeValve And _
                       (dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValveAI_DO1 Or _
                        dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValveAI_DO2 Or _
                        dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValvePT_DO2 Or _
                        dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValveAI_AO1 Or _
                        dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValveAI_AO2 Or _
                        dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeValvePT_AO2)) Then

                        strValue = .Cells(gCstChListColPosStatusIn).Value
                        If strValue = "" Then
                            ''アラーム毎のステータスを手入力可にする
                            .Cells(gCstChListColPosStaNmHH).ReadOnly = False : .Cells(gCstChListColPosStaNmHH).Style.BackColor = Color1
                            .Cells(gCstChListColPosStaNmH).ReadOnly = False : .Cells(gCstChListColPosStaNmH).Style.BackColor = Color1
                            .Cells(gCstChListColPosStaNmL).ReadOnly = False : .Cells(gCstChListColPosStaNmL).Style.BackColor = Color1
                            .Cells(gCstChListColPosStaNmLL).ReadOnly = False : .Cells(gCstChListColPosStaNmLL).Style.BackColor = Color1
                        Else
                            ''Status Inに入力された値が有効でない場合、入力された値をクリアする
                            Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                            intValue = cmbStatus.FindStringExact(strValue)
                            'Ver2.0.2.6 ｽﾃｰﾀｽとｱﾗｰﾑに矛盾があればマニュアル化
                            If intValue >= 0 Then
                                intValue = fnAnalogStatusAlarmRel(strValue, e.RowIndex)
                            End If
                            If intValue >= 0 Then
                                ''入力された値が有効なので、アラーム毎のステータスを入力不可にする
                                .Cells(gCstChListColPosStaNmHH).ReadOnly = True : .Cells(gCstChListColPosStaNmHH).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosStaNmHH).Value = ""
                                .Cells(gCstChListColPosStaNmH).ReadOnly = True : .Cells(gCstChListColPosStaNmH).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosStaNmH).Value = ""
                                .Cells(gCstChListColPosStaNmL).ReadOnly = True : .Cells(gCstChListColPosStaNmL).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosStaNmL).Value = ""
                                .Cells(gCstChListColPosStaNmLL).ReadOnly = True : .Cells(gCstChListColPosStaNmLL).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosStaNmLL).Value = ""
                            Else
                                'Ver2.0.1.2
                                ''入力された値をクリアする
                                '.Cells(gCstChListColPosStatusIn).Value = ""
                                '手入力はマニュアルとして反映
                                Call subSetManuSTATUS(e.RowIndex)
                                'grdCHList.Rows(e.RowIndex)

                                'アラーム毎のステータスを手入力可にする
                                .Cells(gCstChListColPosStaNmHH).ReadOnly = False : .Cells(gCstChListColPosStaNmHH).Style.BackColor = Color1
                                .Cells(gCstChListColPosStaNmH).ReadOnly = False : .Cells(gCstChListColPosStaNmH).Style.BackColor = Color1
                                .Cells(gCstChListColPosStaNmL).ReadOnly = False : .Cells(gCstChListColPosStaNmL).Style.BackColor = Color1
                                .Cells(gCstChListColPosStaNmLL).ReadOnly = False : .Cells(gCstChListColPosStaNmLL).Style.BackColor = Color1

                            End If
                        End If

                    ElseIf dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypePulse Then
                        strValue = .Cells(gCstChListColPosStatusIn).Value
                        If strValue = "" Then
                            ''HIアラームのステータスを手入力可にする
                            .Cells(gCstChListColPosStaNmH).ReadOnly = False : .Cells(gCstChListColPosStaNmH).Style.BackColor = Color1
                        Else
                            ''Status Inに入力された値が有効でない場合、入力された値をクリアする
                            Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusPulse)
                            intValue = cmbStatus.FindStringExact(strValue)
                            If intValue >= 0 Then
                                ''入力された値が有効なので、HIアラームのステータスを入力不可にする
                                .Cells(gCstChListColPosStaNmH).ReadOnly = True : .Cells(gCstChListColPosStaNmH).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosStaNmH).Value = ""
                            Else
                                ''入力された値をクリアする
                                .Cells(gCstChListColPosStatusIn).Value = ""
                            End If
                        End If

                    End If

                ElseIf e.ColumnIndex = gCstChListColPosStatusOut Then    ''<<< Status Out 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    'T.Ueki プルダウン処理に修正
                    Dim strStOutType As String = .Cells(gCstChListColPosStatusOut).Value

                    'モーターまたはバルブ
                    Select Case dgv(gCstChListColPosChType, e.RowIndex).Value

                        'モーターチャンネル
                        Case gCstCodeChTypeMotor
                            Select Case strStOutType
                                Case gCstCodeChStatusTypeMotorRun, gCstCodeChStatusTypeMotorRunG        '2箇所入力可

                                    If strStOutType = gCstCodeChStatusTypeMotorRun Then
                                        .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus1).Value = "RUN"
                                        .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus2).Value = "STOP"
                                    Else
                                        .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus1).Value = "AUTO"
                                        .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus2).Value = "STOP"
                                    End If

                                    .Cells(gCstChListColPosDoStatus3).ReadOnly = True : .Cells(gCstChListColPosDoStatus3).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus3).Value = ""
                                    .Cells(gCstChListColPosDoStatus4).ReadOnly = True : .Cells(gCstChListColPosDoStatus4).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus4).Value = ""
                                    .Cells(gCstChListColPosDoStatus5).ReadOnly = True : .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus5).Value = ""

                                Case gCstCodeChStatusTypeMotorRunA, gCstCodeChStatusTypeMotorRunB, gCstCodeChStatusTypeMotorRunC, gCstCodeChStatusTypeMotorRunE, gCstCodeChStatusTypeMotorRunH, _
                                    gCstCodeChStatusTypeMotorRunI                                       '3箇所入力可

                                    .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1
                                    .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1
                                    .Cells(gCstChListColPosDoStatus3).ReadOnly = False : .Cells(gCstChListColPosDoStatus3).Style.BackColor = Color1
                                    .Cells(gCstChListColPosDoStatus4).ReadOnly = True : .Cells(gCstChListColPosDoStatus4).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus4).Value = ""
                                    .Cells(gCstChListColPosDoStatus5).ReadOnly = True : .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus5).Value = ""

                                    Select Case strStOutType
                                        Case gCstCodeChStatusTypeMotorRunA
                                            .Cells(gCstChListColPosDoStatus1).Value = "RUN"
                                            .Cells(gCstChListColPosDoStatus2).Value = "STOP"
                                            .Cells(gCstChListColPosDoStatus3).Value = "ST/BY"
                                        Case gCstCodeChStatusTypeMotorRunB
                                            .Cells(gCstChListColPosDoStatus1).Value = "RUN-L"
                                            .Cells(gCstChListColPosDoStatus2).Value = "RUN-H"
                                            .Cells(gCstChListColPosDoStatus3).Value = "STOP"
                                        Case gCstCodeChStatusTypeMotorRunC
                                            .Cells(gCstChListColPosDoStatus1).Value = "SUP"
                                            .Cells(gCstChListColPosDoStatus2).Value = "EXH"
                                            .Cells(gCstChListColPosDoStatus3).Value = "STOP"
                                        Case gCstCodeChStatusTypeMotorRunE
                                            .Cells(gCstChListColPosDoStatus1).Value = "FWD"
                                            .Cells(gCstChListColPosDoStatus2).Value = "REV"
                                            .Cells(gCstChListColPosDoStatus3).Value = "STOP"
                                        Case gCstCodeChStatusTypeMotorRunH
                                            .Cells(gCstChListColPosDoStatus1).Value = "RUN"
                                            .Cells(gCstChListColPosDoStatus2).Value = "STOP"
                                            .Cells(gCstChListColPosDoStatus3).Value = "AUTO"
                                        Case gCstCodeChStatusTypeMotorRunH
                                            .Cells(gCstChListColPosDoStatus1).Value = "RUN"
                                            .Cells(gCstChListColPosDoStatus2).Value = "STOP"
                                            .Cells(gCstChListColPosDoStatus3).Value = "AUTO"
                                    End Select

                                Case gCstCodeChStatusTypeMotorRunJ '4箇所入力可

                                    .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus1).Value = "RUN-L"
                                    .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus2).Value = "RUN-H"
                                    .Cells(gCstChListColPosDoStatus3).ReadOnly = False : .Cells(gCstChListColPosDoStatus3).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus3).Value = "STOP"
                                    .Cells(gCstChListColPosDoStatus4).ReadOnly = False : .Cells(gCstChListColPosDoStatus4).Style.BackColor = Color1 : .Cells(gCstChListColPosDoStatus4).Value = "ST-BY"
                                    .Cells(gCstChListColPosDoStatus5).ReadOnly = True : .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus5).Value = ""

                                Case gCstCodeChStatusTypeMotorRunD, gCstCodeChStatusTypeMotorRunF '5箇所入力可

                                    .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1
                                    .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1
                                    .Cells(gCstChListColPosDoStatus3).ReadOnly = False : .Cells(gCstChListColPosDoStatus3).Style.BackColor = Color1
                                    .Cells(gCstChListColPosDoStatus4).ReadOnly = False : .Cells(gCstChListColPosDoStatus4).Style.BackColor = Color1
                                    .Cells(gCstChListColPosDoStatus5).ReadOnly = False : .Cells(gCstChListColPosDoStatus5).Style.BackColor = Color1

                                    Select Case strStOutType
                                        Case gCstCodeChStatusTypeMotorRunD
                                            .Cells(gCstChListColPosDoStatus1).Value = "SUP-L"
                                            .Cells(gCstChListColPosDoStatus2).Value = "SUP-H"
                                            .Cells(gCstChListColPosDoStatus3).Value = "EXH-L"
                                            .Cells(gCstChListColPosDoStatus4).Value = "EXH-H"
                                            .Cells(gCstChListColPosDoStatus5).Value = "STOP"
                                        Case gCstCodeChStatusTypeMotorRunF
                                            .Cells(gCstChListColPosDoStatus1).Value = "FWD-L"
                                            .Cells(gCstChListColPosDoStatus2).Value = "FWD-H"
                                            .Cells(gCstChListColPosDoStatus3).Value = "REV-L"
                                            .Cells(gCstChListColPosDoStatus4).Value = "REV-H"
                                            .Cells(gCstChListColPosDoStatus5).Value = "STOP"
                                    End Select

                                Case Else    'MANUAL INPUT

                                    Select Case dgv(gCstChListColPosDataType, e.RowIndex).Value
                                        Case gCstCodeChDataTypeMotorManRun, gCstCodeChDataTypeMotorAbnorRun, gCstCodeChDataTypeMotorManRunG, gCstCodeChDataTypeMotorAbnorRunG        '2箇所入力可
                                            .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus3).ReadOnly = True : .Cells(gCstChListColPosDoStatus3).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus3).Value = ""
                                            .Cells(gCstChListColPosDoStatus4).ReadOnly = True : .Cells(gCstChListColPosDoStatus4).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus4).Value = ""
                                            .Cells(gCstChListColPosDoStatus5).ReadOnly = True : .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus5).Value = ""

                                        Case gCstCodeChDataTypeMotorManRunA, gCstCodeChDataTypeMotorManRunB, gCstCodeChDataTypeMotorManRunC, gCstCodeChDataTypeMotorManRunE, gCstCodeChDataTypeMotorManRunH, gCstCodeChDataTypeMotorManRunI, _
                                            gCstCodeChDataTypeMotorAbnorRunA, gCstCodeChDataTypeMotorAbnorRunB, gCstCodeChDataTypeMotorAbnorRunC, gCstCodeChDataTypeMotorAbnorRunE, gCstCodeChDataTypeMotorAbnorRunH, gCstCodeChDataTypeMotorAbnorRunI '3箇所入力可
                                            .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus3).ReadOnly = False : .Cells(gCstChListColPosDoStatus3).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus4).ReadOnly = True : .Cells(gCstChListColPosDoStatus4).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus4).Value = ""
                                            .Cells(gCstChListColPosDoStatus5).ReadOnly = True : .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus5).Value = ""

                                        Case gCstCodeChDataTypeMotorManRunJ, gCstCodeChDataTypeMotorAbnorRunJ                                      '4箇所入力可
                                            .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus3).ReadOnly = False : .Cells(gCstChListColPosDoStatus3).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus4).ReadOnly = False : .Cells(gCstChListColPosDoStatus4).Style.BackColor = Color1
                                            .Cells(gCstChListColPosDoStatus5).ReadOnly = True : .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus5).Value = ""

                                        Case Else
                                            .Cells(gCstChListColPosDoStatus1).ReadOnly = False : .Cells(gCstChListColPosDoStatus1).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus1).Value = ""
                                            .Cells(gCstChListColPosDoStatus2).ReadOnly = False : .Cells(gCstChListColPosDoStatus2).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus2).Value = ""
                                            .Cells(gCstChListColPosDoStatus3).ReadOnly = False : .Cells(gCstChListColPosDoStatus3).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus3).Value = ""
                                            .Cells(gCstChListColPosDoStatus4).ReadOnly = False : .Cells(gCstChListColPosDoStatus4).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus4).Value = ""
                                            .Cells(gCstChListColPosDoStatus5).ReadOnly = False : .Cells(gCstChListColPosDoStatus5).Style.BackColor = gColorGridRowBackReadOnly : .Cells(gCstChListColPosDoStatus5).Value = ""
                                    End Select

                            End Select

                            'バルブチャンネル
                        Case gCstCodeChTypeValve

                            'バルブチャンネルは、StatusOUTはすべて[Manual input]固定

                    End Select

                ElseIf e.ColumnIndex = gCstChListColPosBitCount Then    ''<<< Terminal No 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    Dim strDataType As String = .Cells(gCstChListColPosDataType).Value

                    Dim test As String = .Cells(gCstChListColPosBitCount).Value

                    Select Case dgv(gCstChListColPosChType, e.RowIndex).Value

                        'バルブチャンネル
                        Case gCstCodeChTypeValve

                            Select Case strDataType
                                Case gCstCodeChDataTypeValveDI_DO, gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, gCstCodeChDataTypeValvePT_DO2, gCstCodeChDataTypeValveDO

                                    If .Cells(gCstChListColPosBitCount).Value <> Nothing Then

                                        Dim intBitCount As Integer = Val(.Cells(gCstChListColPosBitCount).Value)

                                        For intDelStatus As Integer = 0 To 7

                                            If intDelStatus > intBitCount - 1 Then
                                                .Cells(gCstChListColPosDoStatus1 + intDelStatus).Value = ""
                                                .Cells(gCstChListColPosDoStatus1 + intDelStatus).ReadOnly = True : .Cells(gCstChListColPosDoStatus1 + intDelStatus).Style.BackColor = gColorGridRowBackReadOnly
                                            Else
                                                .Cells(gCstChListColPosDoStatus1 + intDelStatus).ReadOnly = False : .Cells(gCstChListColPosDoStatus1 + intDelStatus).Style.BackColor = Color1
                                            End If
                                        Next
                                    Else
                                        For intDelStatus As Integer = 0 To 7
                                            .Cells(gCstChListColPosDoStatus1 + intDelStatus).Value = ""
                                            .Cells(gCstChListColPosDoStatus1 + intDelStatus).ReadOnly = True : .Cells(gCstChListColPosDoStatus1 + intDelStatus).Style.BackColor = gColorGridRowBackReadOnly
                                        Next
                                    End If

                                Case Else
                                    For intDelStatus As Integer = 0 To 7
                                        .Cells(gCstChListColPosDoStatus1 + intDelStatus).Value = ""
                                        .Cells(gCstChListColPosDoStatus1 + intDelStatus).ReadOnly = True : .Cells(gCstChListColPosDoStatus1 + intDelStatus).Style.BackColor = gColorGridRowBackReadOnly
                                    Next
                            End Select
                    End Select

               








                ElseIf e.ColumnIndex = gCstChListColPosRangeType Then       ''<<< Range Type 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    'Dim dblValue As Double
                    'Dim p As Integer

                    'Ver2.0.0.0 2016.12.07 行コポペで値が消える不具合対応
                    ''Range Lo / Range Hi を分解して表示する
                    'strValue = .Cells(gCstChListColPosRangeType).FormattedValue
                    'If strValue <> "" And .Cells(gCstChListColPosRangeType).ReadOnly = False Then
                    '    strValue = strValue.Replace(" - ", "/")
                    '    p = strValue.LastIndexOf("/")

                    '    .Cells(gCstChListColPosRangeLo).Value = ""
                    '    .Cells(gCstChListColPosRangeHi).Value = ""

                    '    intDecimalP = Val(.Cells(gCstChListColPosDecimalPoint).Value)
                    '    strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                    '    dblValue = Long.Parse(strValue.Substring(0, p))
                    '    .Cells(gCstChListColPosRangeLo).Value = dblValue.ToString(strDecimalFormat)

                    '    dblValue = Long.Parse(strValue.Substring(p + 1))
                    '    .Cells(gCstChListColPosRangeHi).Value = dblValue.ToString(strDecimalFormat)
                    'End If

                ElseIf e.ColumnIndex = gCstChListColPosRangeLo Or e.ColumnIndex = gCstChListColPosRangeHi Then
                    'Ver2.0.1.2
                    '<<< RANGE LO,HIいずれかが変わった場合、RageTypeを割り出して自動であてがう
                    'RangeTypeは、2,3線式の場合RangeLo,Hiから、割り出してあてがう
                    If dgv(gCstChListColPosChType, e.RowIndex).Value = gCstCodeChTypeAnalog Then
                        If dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalog2Pt Or _
                            dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalog2Jpt Or _
                            dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalog3Pt Or _
                            dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalog3Jpt Then

                            If dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalog2Pt Or _
                                dgv(gCstChListColPosDataType, e.RowIndex).Value = gCstCodeChDataTypeAnalog3Pt Then
                                Call gSetComboBox(cmbRangeType, gEnmComboType.ctChListChannelListRangeType1)
                            Else
                                Call gSetComboBox(cmbRangeType, gEnmComboType.ctChListChannelListRangeType2)
                            End If

                            Dim intValueZ As Integer = 0
                            Dim strRangeType As String = ""
                            '小数点は落とす
                            Dim strLoRange As String = ""
                            Dim strHiRange As String = ""
                            If IsNumeric(.Cells(gCstChListColPosRangeLo).Value) = True Then
                                strLoRange = CInt(.Cells(gCstChListColPosRangeLo).Value)
                            End If
                            If IsNumeric(.Cells(gCstChListColPosRangeHi).Value) = True Then
                                strHiRange = CInt(.Cells(gCstChListColPosRangeHi).Value)
                            End If
                            'strRangeType = .Cells(gCstChListColPosRangeLo).Value & " - " & .Cells(gCstChListColPosRangeHi).Value
                            strRangeType = strLoRange & " - " & strHiRange
                            intValueZ = cmbRangeType.FindStringExact(strRangeType)
                            If intValueZ >= 0 Then
                                cmbRangeType.SelectedIndex = intValueZ
                                .Cells(gCstChListColPosRangeType).Value = cmbRangeType.SelectedValue
                            Else
                                .Cells(gCstChListColPosRangeType).Value = 0
                            End If
                        End If

                    End If



                ElseIf e.ColumnIndex = gCstChListColPosShareType Then       ''<<< Share Type 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    ''Share TypeにRemoteを選択した場合は、Share CHを入力不可にする ■Share対応
                    If .Cells(gCstChListColPosShareType).Value = 0 Or .Cells(gCstChListColPosShareType).Value = 2 Then
                        .Cells(gCstChListColPosShareChid).Value = Nothing
                        .Cells(gCstChListColPosShareChid).ReadOnly = True
                        .Cells(gCstChListColPosShareChid).Style.BackColor = gColorGridRowBackReadOnly
                    Else
                        .Cells(gCstChListColPosShareChid).Value = ""
                        .Cells(gCstChListColPosShareChid).ReadOnly = False
                        .Cells(gCstChListColPosShareChid).Style.BackColor = Color1
                    End If

                ElseIf e.ColumnIndex = gCstChListColPosControlType Then     ''<<< Control Type 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    ''Control Typeに連続出力を選択した場合は、Pulse Widthを入力不可にする
                    If .Cells(gCstChListColPosControlType).Value = 0 Or .Cells(gCstChListColPosControlType).Value = 2 Then
                        .Cells(gCstChListColPosPulseWidth).Value = Nothing : .Cells(gCstChListColPosPulseWidth).ReadOnly = True
                        .Cells(gCstChListColPosPulseWidth).Style.BackColor = gColorGridRowBackReadOnly
                    Else
                        .Cells(gCstChListColPosPulseWidth).Value = "1" : .Cells(gCstChListColPosPulseWidth).ReadOnly = False
                        .Cells(gCstChListColPosPulseWidth).Style.BackColor = Color1
                    End If

                ElseIf e.ColumnIndex = gCstChListColPosDeviceStatus Then    ''<<< Device Status 変更時処理 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

                    If mSystemChDeviceStatus(e.RowIndex) <> Val(grdCHList(gCstChListColPosDeviceStatus, e.RowIndex).Value).ToString Then

                        Dim udtKiki() As gTypCodeName = Nothing

                        ''グループコード内の機器状態を全てGET
                        Call gGetComboCodeName(udtKiki, _
                                               gEnmComboType.ctChListChannelListDeviceStatus, _
                                               CCInt(grdCHList(gCstChListColPosDeviceStatus, e.RowIndex).Value).ToString("00"))
                        For i = 0 To 15
                            mSystemChStatusUse(e.RowIndex, i) = False
                            mSystemChStatusCode(e.RowIndex, i) = ""
                            mSystemChStatusName(e.RowIndex, i) = ""
                        Next
                        For i = 0 To UBound(udtKiki)
                            mSystemChStatusUse(e.RowIndex, i) = True
                            mSystemChStatusCode(e.RowIndex, i) = udtKiki(i).shtCode
                            mSystemChStatusName(e.RowIndex, i) = udtKiki(i).strName
                        Next
                    End If

                End If

                

            End With

            mFlagChange = True  ''変更 有り

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    'Ver2.0.1.8 SigSet関数
    Private Sub subSigSet(pintRow As Integer)
        Dim strDataSig As String = ""
        'Ver2.0.1.8 ﾃﾞｰﾀが変わったらSigﾁｪｯｸ
        '>>>WK
        If grdCHList(gCstChListColPosFlagWK, pintRow).Value = "1" Then
            strDataSig = gCstChListSSigWork
        End If
        '>>>JやR等
        Select Case grdCHList(gCstChListColPosChType, pintRow).Value
            Case gCstCodeChTypeAnalog
                'アナログ
                Select Case grdCHList(gCstChListColPosDataType, pintRow).Value
                    Case gCstCodeChDataTypeAnalogJacom
                        strDataSig = gCstChListSSigJacom
                    Case gCstCodeChDataTypeAnalogJacom55
                        strDataSig = gCstChListSSigJacom
                    Case gCstCodeChDataTypeAnalogModbus, gCstCodeChDataTypeAnalogLatitude, gCstCodeChDataTypeAnalogLongitude
                        strDataSig = gCstChListSSigCOMM
                End Select
            Case gCstCodeChTypeDigital
                'ﾃﾞｼﾞﾀﾙ
                Select Case grdCHList(gCstChListColPosDataType, pintRow).Value
                    Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO, gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                        strDataSig = gCstChListSSigJacom

                    Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO
                        strDataSig = gCstChListSSigCOMM
                    Case gCstCodeChDataTypeDigitalDeviceStatus
                        'システム
                        strDataSig = gCstChListSSigSystem
                End Select
            Case gCstCodeChTypeMotor
                'モーター
                If grdCHList(gCstChListColPosDataType, pintRow).Value = gCstCodeChDataTypeMotorDeviceJacom Or grdCHList(gCstChListColPosDataType, pintRow).Value = gCstCodeChDataTypeMotorDeviceJacom55 Then
                    strDataSig = gCstChListSSigJacom
                End If
                ' Ver2.0.8.9 2018.10.01　通信の場合、INSG 'R'を表示
                If grdCHList(gCstChListColPosDataType, pintRow).Value >= gCstCodeChDataTypeMotorRManRun Then
                    strDataSig = gCstChListSSigJacom
                End If
            Case gCstCodeChTypeValve
                'バルブ
                If grdCHList(gCstChListColPosDataType, pintRow).Value = gCstCodeChDataTypeValveJacom Or _
                   grdCHList(gCstChListColPosDataType, pintRow).Value = gCstCodeChDataTypeValveJacom55 Then
                    strDataSig = gCstChListSSigJacom
                End If

            Case gCstCodeChTypePulse
                'パルス
                'Ver2.0.6.1 積算ﾊﾟﾙｽはﾃﾞｰﾀﾀｲﾌﾟで通信が増えているため対応
                'If grdCHList(gCstChListColPosDataType, pintRow).Value = gCstCodeChDataTypePulseExtDev Then
                If grdCHList(gCstChListColPosDataType, pintRow).Value >= gCstCodeChDataTypePulseExtDev Then
                    strDataSig = gCstChListSSigCOMM
                End If
        End Select

        grdCHList(gCstChListColPosSSig, pintRow).Value = strDataSig
    End Sub


    '--------------------------------------------------------------------
    ' 表示関数追加　
    '--------------------------------------------------------------------
    Public Sub mCellSetValueDisplay(ByVal Row As Integer, ByVal Col As Integer, ByVal strValue As String, ByVal blnReadtype As Boolean, ByVal ColorType As System.Drawing.Color)


        'セルに入力予定の値が"-"の場合は入力値は処理しない
        Dim strInputValue As String = strValue

        With grdCHList.Rows(Row)

            If strInputValue <> "-" Then
                .Cells(Col).Value = strValue
            End If

            .Cells(Col).ReadOnly = blnReadtype
            .Cells(Col).Style.BackColor = ColorType

        End With

    End Sub

#End Region

#Region "内部関数"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値表示(一覧表示)
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : 構造体の設定を画面に表示する
    '--------------------------------------------------------------------
    Private Sub mSetDisplay()

        Try
            'Ver2.0.1.2
            'エラー一覧初期化
            For i As Integer = 0 To UBound(gChListWarningData, 1) Step 1
                For j As Integer = 0 To UBound(gChListWarningData, 2) Step 1
                    gChListWarningData(i, j) = ""
                Next j
            Next i

            Dim intValue As Integer
            Dim dblValue As Double, dblValue2 As Double
            Dim intDecimalP As Integer
            Dim p As Integer
            Dim strDecimalFormat As String, strValue As String
            Dim dblLowValue As Double = 0, dblHiValue As Double = 0
            Dim intRow As Integer = 0
            Dim blnWKSet As Boolean = False


            For i As Integer = 0 To UBound(mChDataGroup)    ''グループ内の全ＣＨ分　LOOP

                With mChDataGroup(i)
                    
                    If .udtChCommon.shtChType = gCstCodeChTypeNothing Then
                        ''設定なし
                    Else
                        If .udtChCommon.shtChno = 5103 Then
                            Dim debugA As Integer = 0
                        End If

                        intRow = .udtChCommon.shtDispPos - 1                    ''行番号（グループ内表示位置）
                        'Ver2.0.1.2 格納場所移動
                        'grdCHList(gCstChListColPosIndex, intRow).Value = i      ''構造体インデックス（非表示）

                        ''デジタルコンポジット設定テーブルインデックス クリア
                        grdCHList(gCstChListColPosCompositeIndex, intRow).Value = 0

                        ''チャンネルIDを退避
                        mintChID(intRow) = .udtChCommon.shtChid

                        ''☆Common
                        grdCHList(gCstChListColPosChType, intRow).Value = .udtChCommon.shtChType.ToString.Trim              ''Type
                        grdCHList(gCstChListColPosSysNo, intRow).Value = .udtChCommon.shtSysno.ToString.Trim                ''SYS No
                        grdCHList(gCstChListColPosChNo, intRow).Value = gGet2Byte(.udtChCommon.shtChno).ToString("0000")    ''CH No
                        'm_strTagNo(intRow) = GetTagNo(mChDataGroup(i))    ''Tag No  2015.10.26 Ver1.7.5     '' 2015.11.12 Ver1.7.8  ｸﾞﾘｯﾄﾞに変更したためｺﾒﾝﾄ
                        grdCHList(gCstChListColPosTagRow, intRow).Value = GetTagNo(mChDataGroup(i))     '' 2015.11.12 Ver1.7.8  ｸﾞﾘｯﾄﾞ設定に変更
                        grdCHList(gCstChListColPosItemName, intRow).Value = gGetString(.udtChCommon.strChitem)              ''Item
                        grdCHList(gCstChListColPosRemarks, intRow).Value = gGetString(.udtChCommon.strRemark)               ''Remark

                        grdCHList(gCstChListColPosFlagDmy, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 0), 1, 0)   ''DMY
                        grdCHList(gCstChListColPosFlagSC, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 1), 1, 0)    ''SC

                        'Ver2.0.1.2 格納場所移動
                        grdCHList(gCstChListColPosIndex, intRow).Value = i      ''構造体インデックス（非表示）


                        'WK設定確認　T.Ueki 
                        Dim intWKSet As Integer

                        intWKSet = IIf(gBitCheck(.udtChCommon.shtFlag1, 2), 1, 0)
                        grdCHList(gCstChListColPosFlagWK, intRow).Value = intWKSet    ''WK

                        If intWKSet = 1 Then
                            grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigWork
                            blnWKSet = True
                        Else
                            grdCHList(gCstChListColPosSSig, intRow).Value = ""
                        End If

                        grdCHList(gCstChListColPosFlagWK, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 2), 1, 0)    ''WK
                        grdCHList(gCstChListColPosFlagPLC, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 4), 1, 0)   ''PLC 2014.11.18

                        grdCHList(gCstChListColPosFlagSIO, intRow).Value = .udtChCommon.shtOutPort                          ''SIO
                        grdCHList(gCstChListColPosFlagGWS, intRow).Value = .udtChCommon.shtGwsPort                          ''GWS

                        grdCHList(gCstChListColPosFlagRL, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag2, 0), 1, 0)    ''RL
                        grdCHList(gCstChListColPosFlagEP, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag2, 2), 1, 0)    ''EP
                        grdCHList(gCstChListColPosFlagAC, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag2, 3), 1, 0)    ''AC
                        grdCHList(gCstChListColPosFlagSP, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag2, 4), 1, 0)    ''SPARE 2014.11.18
                        grdCHList(gCstChListColPosFlagMotorColor, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag2, 5), 1, 0)    ''ver2.0.8.C 2018.11.14

                        ''Unit of Delay Timer 
                        If .udtChCommon.shtChType = gCstCodeChTypeMotor Then
                            grdCHList(gCstChListColPosOutDelayTime, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 3), "1", "0")

                        ElseIf .udtChCommon.shtChType = gCstCodeChTypeValve Then
                            ''バルブCHはData Typeを設定した後で
                        Else
                            grdCHList(gCstChListColPosDelayTime, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 3), "1", "0")
                        End If

                        ''FCU 2台構成の場合
                        If gudt.SetSystem.udtSysFcu.shtShareChUse = 1 Then  ''共有CH有無

                            grdCHList(gCstChListColPosShareType, intRow).Value = .udtChCommon.shtShareType.ToString ''Share Type

                            ''Localの場合のみCHが必要 ■Share対応
                            If grdCHList(gCstChListColPosShareType, intRow).Value = 1 Or grdCHList(gCstChListColPosShareType, intRow).Value = 3 Then
                                If .udtChCommon.shtShareChid <> 0 Then
                                    grdCHList(gCstChListColPosShareChid, intRow).Value = gGet2Byte(.udtChCommon.shtShareChid).ToString("0000")     ''Share ChNo
                                End If
                            End If
                        End If

                        grdCHList(gCstChListColPosLRRow, intRow).Value = GetAlmLevelNo(mChDataGroup(i)).ToString.Trim     '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応追加

                        'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                        grdCHList(gCstChListColPosAlmMimic, intRow).Value = GetMimicAlm(mChDataGroup(i))


                        Select Case .udtChCommon.shtChType

                            '**************************************************************************************************************************************************************************
                            ''☆☆☆　アナログ  ☆☆☆☆☆☆☆☆☆☆
                            '**************************************************************************************************************************************************************************

                            Case gCstCodeChTypeAnalog

                                Dim AnalogDatatype As Integer = Val(.udtChCommon.shtData.ToString)

                                ''EXT Group ---------------------------------------------------
                                grdCHList(gCstChListColPosExtGrHH, intRow).Value = IIf(.AnalogHiHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .AnalogHiHiExtGroup)               ''EXT.G HH
                                grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(.AnalogHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .AnalogHiExtGroup)                    ''EXT.G H
                                grdCHList(gCstChListColPosExtGrL, intRow).Value = IIf(.AnalogLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .AnalogLoExtGroup)                    ''EXT.G L
                                grdCHList(gCstChListColPosExtGrLL, intRow).Value = IIf(.AnalogLoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .AnalogLoLoExtGroup)               ''EXT.G LL
                                grdCHList(gCstChListColPosExtGrSF, intRow).Value = IIf(.AnalogSensorFailExtGroup = gCstCodeChAnalogExtGroupNothing, "", .AnalogSensorFailExtGroup)   ''EXT.G SF

                                ''Delay -------------------------------------------------------
                                mFlagEventCancel = True
                                grdCHList(gCstChListColPosDelayHH, intRow).Value = IIf(.AnalogHiHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .AnalogHiHiDelay)                  ''Delay HH
                                grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(.AnalogHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .AnalogHiDelay)                       ''Delay H
                                grdCHList(gCstChListColPosDelayL, intRow).Value = IIf(.AnalogLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .AnalogLoDelay)                       ''Delay L
                                grdCHList(gCstChListColPosDelayLL, intRow).Value = IIf(.AnalogLoLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .AnalogLoLoDelay)                  ''Delay LL
                                grdCHList(gCstChListColPosDelaySF, intRow).Value = IIf(.AnalogSensorFailDelay = gCstCodeChAnalogDelayTimerNothing, "", .AnalogSensorFailDelay)      ''Delay SF
                                mFlagEventCancel = False

                                ''G Repose 1 --------------------------------------------------
                                grdCHList(gCstChListColPosGrep1HH, intRow).Value = IIf(.AnalogHiHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .AnalogHiHiGroupRepose1)  ''G.Rep1 HH
                                grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(.AnalogHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .AnalogHiGroupRepose1)       ''G.Rep1 H
                                grdCHList(gCstChListColPosGrep1L, intRow).Value = IIf(.AnalogLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .AnalogLoGroupRepose1)       ''G.Rep1 L
                                grdCHList(gCstChListColPosGrep1LL, intRow).Value = IIf(.AnalogLoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .AnalogLoLoGroupRepose1)  ''G.Rep1 LL

                                ''G Repose 2 --------------------------------------------------
                                grdCHList(gCstChListColPosGrep2HH, intRow).Value = IIf(.AnalogHiHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .AnalogHiHiGroupRepose2)  ''G.Rep2 HH
                                grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(.AnalogHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .AnalogHiGroupRepose2)       ''G.Rep2 H
                                grdCHList(gCstChListColPosGrep2L, intRow).Value = IIf(.AnalogLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .AnalogLoGroupRepose2)       ''G.Rep2 L
                                grdCHList(gCstChListColPosGrep2LL, intRow).Value = IIf(.AnalogLoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .AnalogLoLoGroupRepose2)  ''G.Rep2 LL

                                'S Signal
                                Select Case AnalogDatatype
                                    Case gCstCodeChDataTypeAnalogJacom
                                        grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigJacom
                                    Case gCstCodeChDataTypeAnalogJacom55
                                        grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigJacom
                                    Case gCstCodeChDataTypeAnalogModbus, gCstCodeChDataTypeAnalogLatitude, gCstCodeChDataTypeAnalogLongitude
                                        grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigCOMM
                                End Select

                                ''Fu Address --------------------------------------------------
                                Dim intFuNoAnalog As Integer = .udtChCommon.shtFuno     ''Fu No
                                Dim intPortNoAnalog As Integer = .udtChCommon.shtPortno ''Port No
                                Dim intPinAnalog As Integer = .udtChCommon.shtPin       ''Pin

                                If AnalogDatatype = gCstCodeChDataTypeAnalogJacom Or AnalogDatatype = gCstCodeChDataTypeAnalogModbus Or AnalogDatatype = gCstCodeChDataTypeAnalogLatitude Or _
                                   AnalogDatatype = gCstCodeChDataTypeAnalogLongitude Or AnalogDatatype = gCstCodeChDataTypeAnalogJacom55 Then

                                    grdCHList(gCstChListColPosFuAddress, intRow).Value = "0"
                                    grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoAnalog)
                                    grdCHList(gCstChListColPosPinAddress, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtPin) = gCstCodeChNotSetFuPin, "", .udtChCommon.shtPin)
                                Else
                                    grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoAnalog)
                                    grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoAnalog)
                                    grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinAnalog, AnalogDatatype)
                                End If

                                ''Data Type ---------------------------------------------------
                                '' AI(4-20mA)の入力信号種別追加　ver1.4.0 2011.07.29
                                If .udtChCommon.shtData = gCstCodeChDataTypeAnalog4_20mA Then                                       ' データ種別4-20mA
                                    If .udtChCommon.shtSignal = gCstCodeChAnalogSignalAI Then                                                                ' AI
                                        grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString
                                    ElseIf .udtChCommon.shtSignal = gCstCodeChAnalogSignalPT Then                                                            ' PT
                                        grdCHList(gCstChListColPosDataType, intRow).Value = (.udtChCommon.shtData + 100).ToString
                                    Else                                                                                            ' その他
                                        grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString
                                    End If
                                Else                                                                                                ' その他
                                    grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString
                                End If

                                ''外部機器の場合
                                '' Ver1.11.1 2016.07.12 緯度・経度CH追加
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalogJacom Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalogModbus Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalogLatitude Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalogLongitude Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalogJacom55 Then
                                    ''Port No -------------------------------------------------
                                    'grdCHList(gCstChListColPosPortNo, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtPin) = gCstCodeChNotSetFuPin, "", .udtChCommon.shtPin)
                                End If

                                ''Decimal Position --------------------------------------------
                                intDecimalP = .AnalogDecimalPosition
                                strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                ''Range -------------------------------------------------------
                                If grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypeAnalog2Pt And _
                                   grdCHList(gCstChListColPosDataType, intRow).Value <= gCstCodeChDataTypeAnalog3Jpt Then

                                    ''Range Type 種別コード  2015.03.12
                                    mFlagEventCancel = True
                                    grdCHList(gCstChListColPosRangeType, intRow).Value = .AnalogRangeType.ToString
                                    mFlagEventCancel = False

                                    ''文字列を分解してRangLowとRangeHighにセット
                                    strValue = grdCHList(gCstChListColPosRangeType, intRow).FormattedValue  ''Range Type
                                    If strValue <> "" Then

                                        strValue = strValue.Replace(" - ", "/")
                                        p = strValue.LastIndexOf("/")

                                        grdCHList(gCstChListColPosRangeLo, intRow).Value = (Val(Double.Parse(strValue.Substring(0, p))).ToString(strDecimalFormat))   'Range Low
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = (Val(Double.Parse(strValue.Substring(p + 1))).ToString(strDecimalFormat))  'Range Hi
                                    Else
                                        ''Range Type(2,3線式)
                                        'Ver2.0.7.D レンジは温度基板も他と同様とする
                                        'dblLowValue = .AnalogRangeLow
                                        dblLowValue = .AnalogRangeLow / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeLo, intRow).Value = dblLowValue.ToString(strDecimalFormat)

                                        'Ver2.0.7.D レンジは温度基板も他と同様とする
                                        'dblHiValue = .AnalogRangeHigh
                                        dblHiValue = .AnalogRangeHigh / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = dblHiValue.ToString(strDecimalFormat)
                                    End If


                                    grdCHList(gCstChListColPosDecimalPoint, intRow).Value = .AnalogDecimalPosition

                                Else
                                    ''Range (K, 1-5 V, 4-20 mA, Exhaust Gus, 外部機器)
                                    dblLowValue = .AnalogRangeLow / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosRangeLo, intRow).Value = dblLowValue.ToString(strDecimalFormat) ''Range Low

                                    dblHiValue = .AnalogRangeHigh / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosRangeHi, intRow).Value = dblHiValue.ToString(strDecimalFormat)  ''Range Hi
                                End If

                                ''Value -------------------------------------------------------
                                intValue = 0
                                If .AnalogHiHiUse = 0 Then      ''Use HH アラーム無し
                                    grdCHList(gCstChListColPosValueHH, intRow).Value = ""
                                Else
                                    dblValue = .AnalogHiHiValue / (10 ^ intDecimalP)    ''Value HH
                                    grdCHList(gCstChListColPosValueHH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .AnalogHiUse = 0 Then        ''Use H  アラーム無し
                                    grdCHList(gCstChListColPosValueH, intRow).Value = ""
                                Else
                                    dblValue = .AnalogHiValue / (10 ^ intDecimalP)      ''Value H
                                    grdCHList(gCstChListColPosValueH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .AnalogLoUse = 0 Then        ''Use L  アラーム無し
                                    grdCHList(gCstChListColPosValueL, intRow).Value = ""
                                Else
                                    dblValue = .AnalogLoValue / (10 ^ intDecimalP)      ''Value L
                                    grdCHList(gCstChListColPosValueL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .AnalogLoLoUse = 0 Then      ''Use LL アラーム無し
                                    grdCHList(gCstChListColPosValueLL, intRow).Value = ""
                                Else
                                    dblValue = .AnalogLoLoValue / (10 ^ intDecimalP)    ''Value LL
                                    grdCHList(gCstChListColPosValueLL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                'Ver2.0.0.0 2016.12.06 ｾﾝｻｰﾌｪｲﾙ Over Under対応
                                'grdCHList(gCstChListColPosValueSF, intRow).Value = .AnalogSensorFailUse.ToString   ''Value SF <-- use
                                Dim intSFbit As Integer = 0
                                Dim intSFval As Integer = 0
                                '>>> Use NotUse
                                intSFval = .AnalogSensorFailUse

                                If intSFval > 0 Then
                                    intSFbit = gBitSet(intSFbit, 1, gBitCheck(.AnalogDisplay3, 1))
                                    intSFbit = gBitSet(intSFbit, 2, gBitCheck(.AnalogDisplay3, 2))
                                    If intSFbit = 6 Then        '' UNDER/OVER両方設定あり
                                        intSFbit = 1
                                    ElseIf intSFbit = 4 Then    '' OVERのみの場合は番号差替
                                        intSFbit = 3
                                    End If
                                End If

                                'If intSFval <= 0 Then
                                '    'NotUse
                                '    intSFbit = gBitSet(intSFbit, 0, False)
                                'Else
                                '    'Use
                                '    intSFbit = gBitSet(intSFbit, 0, True)
                                'End If
                                ''>>> Under
                                'intSFbit = gBitSet(intSFbit, 1, gBitCheck(.AnalogDisplay3, 1))
                                ''>>> Over
                                'intSFbit = gBitSet(intSFbit, 2, gBitCheck(.AnalogDisplay3, 2))

                                '値ｾｯﾄ
                                grdCHList(gCstChListColPosValueSF, intRow).Value = intSFbit.ToString   ''Value SF <-- use



                                ''Lo Normal /  Hi Normal -------------------------------------
                                If .AnalogNormalLow = gCstCodeChAlalogNormalRangeNothingLo Then
                                    grdCHList(gCstChListColPosNormalLo, intRow).Value = ""
                                Else
                                    dblValue = .AnalogNormalLow / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosNormalLo, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .AnalogNormalHigh = gCstCodeChAlalogNormalRangeNothingHi Then
                                    grdCHList(gCstChListColPosNormalHi, intRow).Value = ""
                                Else
                                    dblValue2 = .AnalogNormalHigh / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosNormalHi, intRow).Value = dblValue2.ToString(strDecimalFormat)
                                End If

                                ''Status -----------------------------------------------------
                                If .udtChCommon.shtStatus <> gCstCodeChManualInputStatus Then
                                    Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                    cmbStatus.SelectedValue = .udtChCommon.shtStatus.ToString
                                    grdCHList(gCstChListColPosStatusIn, intRow).Value = cmbStatus.Text
                                Else
                                    'Ver2.0.1.2 手入力ｽﾃｰﾀｽの場合、その値編集してをｽﾃｰﾀｽへ表示
                                    Dim strManuStatus As String = ""
                                    strManuStatus = fnGetManuSTATUS(mChDataGroup(i))
                                    'grdCHList(gCstChListColPosStatusIn, intRow).Value = ""
                                    grdCHList(gCstChListColPosStatusIn, intRow).Value = strManuStatus
                                    grdCHList(gCstChListColPosStaNmHH, intRow).Value = gGetString(.AnalogHiHiStatusInput)   ''特殊コード対応
                                    grdCHList(gCstChListColPosStaNmH, intRow).Value = gGetString(.AnalogHiStatusInput)
                                    grdCHList(gCstChListColPosStaNmL, intRow).Value = gGetString(.AnalogLoStatusInput)
                                    grdCHList(gCstChListColPosStaNmLL, intRow).Value = gGetString(.AnalogLoLoStatusInput)
                                End If

                                ''Off Set ----------------------------------------------------
                                grdCHList(gCstChListColPosOffset, intRow).Value = .AnalogOffsetValue

                                ''Unit -------------------------------------------------------
                                If .udtChCommon.shtUnit <> gCstCodeChManualInputUnit Then
                                    cmbUnit.SelectedValue = .udtChCommon.shtUnit.ToString
                                    grdCHList(gCstChListColPosUnit, intRow).Value = cmbUnit.Text
                                Else
                                    grdCHList(gCstChListColPosUnit, intRow).Value = gGetString(.udtChCommon.strUnit)         ''特殊コード対応
                                End If

                                ''Strig　-----------------------------------------------------
                                grdCHList(gCstChListColPosString, intRow).Value = .AnalogString

                                ''Center Graph <-- display3 ----------------------------------
                                grdCHList(gCstChListColPosCenterGraph, intRow).Value = IIf(gBitCheck(.AnalogDisplay3, 0), True, False)


                                ''Power Factor------------------------------------------------ T.Ueki 2016/11/28
                                Dim strPFFlg As String = IIf(gBitCheck(.udtChCommon.shtFlag1, 5), "1", "0")
                                Dim strPSDFlg As String = IIf(gBitCheck(.udtChCommon.shtFlag1, 8), "1", "0")
                                'Ver2.0.7.9 AF対応
                                Dim strAFDFlg As String = IIf(gBitCheck(.udtChCommon.shtFlag1, 9), "1", "0")

                                If strPFFlg = "1" Then
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "1"
                                ElseIf strPSDFlg = "1" Then
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "2"

                                    'Ver2.0.7.9 AF対応
                                ElseIf strAFDFlg = "1" Then
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "3"
                                Else
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "0"
                                End If

                                'grdCHList(gCstChListPowerFactorRow, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 5), 1, 0)

                                'Ver2.0.7.C ｵﾌｾｯﾄ調整ﾊﾟｽﾜｰﾄﾞ有無
                                grdCHList(gCstChListColPosCompositeIndex, intRow).Value = .AnalogAdjstPsw

                                'Ver2.0.8.5 mmHgレンジ下限小数点対応
                                grdCHList(gCstChListColPosAoTerm, intRow).Value = .AnalogMmHgFlg
                                grdCHList(gCstChListColPosPortAoTerm, intRow).Value = .AnalogMmHgDec


                                '仮設定機能対応(アナログ)
                                Call Temporary_setup(1, i, intRow, 1)



                                '**************************************************************************************************************************************************************************
                                ''☆☆☆　デジタル  ☆☆☆☆☆☆☆☆☆☆
                                '**************************************************************************************************************************************************************************
                            Case gCstCodeChTypeDigital

                                Dim DigitalDatatype As Integer = Val(.udtChCommon.shtData.ToString)

                                ''EXT Group ---------------------------------------------------
                                grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtExtGroup) = gCstCodeChCommonExtGroupNothing, "", .udtChCommon.shtExtGroup)        ''EXT.G H

                                ''G Repose 1 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose1) = gCstCodeChCommonGroupRepose1Nothing, "", .udtChCommon.shtGRepose1)   ''G.Rep1 H

                                ''G Repose 2 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose2) = gCstCodeChCommonGroupRepose2Nothing, "", .udtChCommon.shtGRepose2)   ''G.Rep2 H

                                ''Delay --------------------------------------------------------
                                mFlagEventCancel = True
                                grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtDelay) = gCstCodeChCommonDelayTimerNothing, "", .udtChCommon.shtDelay)
                                mFlagEventCancel = False

                                'S Signal
                                Select Case DigitalDatatype
                                    Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO, gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                                        grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigJacom

                                    Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO
                                        grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigCOMM
                                End Select

                                ''Fu Address ---------------------------------------------------
                                Dim intFuNoDigital As Integer = .udtChCommon.shtFuno     ''Fu No
                                Dim intPortNoDigital As Integer = .udtChCommon.shtPortno ''Port No
                                Dim intPinDigital As Integer = .udtChCommon.shtPin       ''Pin

                                '2016/10/17 T.Ueki
                                If DigitalDatatype >= gCstCodeChDataTypeDigitalJacomNC And DigitalDatatype <= gCstCodeChDataTypeDigitalModbusNO Then
                                    grdCHList(gCstChListColPosFuAddress, intRow).Value = "0"
                                    grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoDigital)
                                    grdCHList(gCstChListColPosPinAddress, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtPin) = gCstCodeChNotSetFuPin, "", .udtChCommon.shtPin)
                                Else
                                    grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoDigital)
                                    grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoDigital)
                                    grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinDigital, DigitalDatatype)
                                End If

                                ''Data Type ----------------------------------------------------
                                grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString

                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeDigitalDeviceStatus Then

                                    ''システムＣＨ

                                    ''Status Alarm <-- Use -------------------------------------
                                    grdCHList(gCstChListColPosStatusAlarm, intRow).Value = .SystemUse

                                    ''Device Status --------------------------------------------
                                    Dim intIndex As Integer = gGetChannelSystemDeviceStatus(cmbStatus, .SystemInfoKikiCode01)
                                    If intIndex <> 0 Then
                                        grdCHList(gCstChListColPosDeviceStatus, intRow).Value = CStr(intIndex)
                                    End If

                                    mSystemChDeviceStatus(intRow) = CStr(intIndex)

                                    mSystemChStatusUse(intRow, 0) = .SystemInfoStatusUse01
                                    mSystemChStatusCode(intRow, 0) = .SystemInfoKikiCode01
                                    mSystemChStatusName(intRow, 0) = .SystemInfoStatusName01

                                    mSystemChStatusUse(intRow, 1) = .SystemInfoStatusUse02
                                    mSystemChStatusCode(intRow, 1) = .SystemInfoKikiCode02
                                    mSystemChStatusName(intRow, 1) = .SystemInfoStatusName02

                                    mSystemChStatusUse(intRow, 2) = .SystemInfoStatusUse03
                                    mSystemChStatusCode(intRow, 2) = .SystemInfoKikiCode03
                                    mSystemChStatusName(intRow, 2) = .SystemInfoStatusName03

                                    mSystemChStatusUse(intRow, 3) = .SystemInfoStatusUse04
                                    mSystemChStatusCode(intRow, 3) = .SystemInfoKikiCode04
                                    mSystemChStatusName(intRow, 3) = .SystemInfoStatusName04

                                    mSystemChStatusUse(intRow, 4) = .SystemInfoStatusUse05
                                    mSystemChStatusCode(intRow, 4) = .SystemInfoKikiCode05
                                    mSystemChStatusName(intRow, 4) = .SystemInfoStatusName05

                                    mSystemChStatusUse(intRow, 5) = .SystemInfoStatusUse06
                                    mSystemChStatusCode(intRow, 5) = .SystemInfoKikiCode06
                                    mSystemChStatusName(intRow, 5) = .SystemInfoStatusName06

                                    mSystemChStatusUse(intRow, 6) = .SystemInfoStatusUse07
                                    mSystemChStatusCode(intRow, 6) = .SystemInfoKikiCode07
                                    mSystemChStatusName(intRow, 6) = .SystemInfoStatusName07

                                    mSystemChStatusUse(intRow, 7) = .SystemInfoStatusUse08
                                    mSystemChStatusCode(intRow, 7) = .SystemInfoKikiCode08
                                    mSystemChStatusName(intRow, 7) = .SystemInfoStatusName08

                                    mSystemChStatusUse(intRow, 8) = .SystemInfoStatusUse09
                                    mSystemChStatusCode(intRow, 8) = .SystemInfoKikiCode09
                                    mSystemChStatusName(intRow, 8) = .SystemInfoStatusName09

                                    mSystemChStatusUse(intRow, 9) = .SystemInfoStatusUse10
                                    mSystemChStatusCode(intRow, 9) = .SystemInfoKikiCode10
                                    mSystemChStatusName(intRow, 9) = .SystemInfoStatusName10

                                    mSystemChStatusUse(intRow, 10) = .SystemInfoStatusUse11
                                    mSystemChStatusCode(intRow, 10) = .SystemInfoKikiCode11
                                    mSystemChStatusName(intRow, 10) = .SystemInfoStatusName11

                                    mSystemChStatusUse(intRow, 11) = .SystemInfoStatusUse12
                                    mSystemChStatusCode(intRow, 11) = .SystemInfoKikiCode12
                                    mSystemChStatusName(intRow, 11) = .SystemInfoStatusName12

                                    mSystemChStatusUse(intRow, 12) = .SystemInfoStatusUse13
                                    mSystemChStatusCode(intRow, 12) = .SystemInfoKikiCode13
                                    mSystemChStatusName(intRow, 12) = .SystemInfoStatusName13

                                    mSystemChStatusUse(intRow, 13) = .SystemInfoStatusUse14
                                    mSystemChStatusCode(intRow, 13) = .SystemInfoKikiCode14
                                    mSystemChStatusName(intRow, 13) = .SystemInfoStatusName14

                                    mSystemChStatusUse(intRow, 14) = .SystemInfoStatusUse15
                                    mSystemChStatusCode(intRow, 14) = .SystemInfoKikiCode15
                                    mSystemChStatusName(intRow, 14) = .SystemInfoStatusName15

                                    mSystemChStatusUse(intRow, 15) = .SystemInfoStatusUse16
                                    mSystemChStatusCode(intRow, 15) = .SystemInfoKikiCode16
                                    mSystemChStatusName(intRow, 15) = .SystemInfoStatusName16

                                    'S Signal
                                    grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigSystem

                                Else
                                    ''デジタルＣＨ

                                    ''Status Alarm <-- Use -------------------------------------
                                    grdCHList(gCstChListColPosStatusAlarm, intRow).Value = .DigitalUse

                                    ''Filter Coef ----------------------------------------------
                                    grdCHList(gCstChListColPosFilterCoef, intRow).Value = .DigitalDiFilter

                                End If

                                ''Data Typeにより判断 -----------------------------------------
                                If grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypeDigitalJacomNC And _
                                    grdCHList(gCstChListColPosDataType, intRow).Value <= gCstCodeChDataTypeDigitalModbusNO Then
                                    ' ''外部機器(Jacom, Modbus)
                                    'grdCHList(gCstChListColPosPortNo, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtPin) = gCstCodeChNotSetFuPin, "", .udtChCommon.shtPin)   ''Port No

                                ElseIf grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeDigitalExt Then
                                    ''延長警報盤
                                    grdCHList(gCstChListColPosEccFunc, intRow).Value = .udtChCommon.shtEccFunc.ToString   ''Ecc Func
                                End If

                                ''Status -------------------------------------------------------
                                If .udtChCommon.shtStatus <> gCstCodeChManualInputStatus Then
                                    Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                    cmbStatus.SelectedValue = .udtChCommon.shtStatus.ToString
                                    grdCHList(gCstChListColPosStatusIn, intRow).Value = cmbStatus.Text
                                Else
                                    strValue = mGetString(.udtChCommon.strStatus)     ''特殊コード対応
                                    'Ver2.0.7.L
                                    'If strValue.Length > 8 Then
                                    If LenB(strValue) > 8 Then
                                        'grdCHList(gCstChListColPosStatusIn, intRow).Value = strValue.Substring(0, 8).Trim & "/" & strValue.Substring(8).Trim
                                        grdCHList(gCstChListColPosStatusIn, intRow).Value = MidB(strValue, 0, 8).Trim & "/" & MidB(strValue, 8).Trim
                                    Else
                                        grdCHList(gCstChListColPosStatusIn, intRow).Value = Trim(strValue)
                                    End If
                                End If

                                '仮設定機能対応(デジタル)
                                Call Temporary_setup(2, i, intRow, 1)


                                '**************************************************************************************************************************************************************************
                                ''☆☆☆　モーター  ☆☆☆☆☆☆☆☆☆☆
                                '**************************************************************************************************************************************************************************
                            Case gCstCodeChTypeMotor

                                Dim MotorDatatype As Integer = Val(.udtChCommon.shtData.ToString)

                                ''EXT Group ---------------------------------------------------
                                grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtExtGroup) = gCstCodeChCommonExtGroupNothing, "", .udtChCommon.shtExtGroup)       ''EXT.G H

                                ''G Repose 1 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose1) = gCstCodeChCommonGroupRepose1Nothing, "", .udtChCommon.shtGRepose1)   ''G.Rep1 H

                                ''G Repose 2 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose2) = gCstCodeChCommonGroupRepose2Nothing, "", .udtChCommon.shtGRepose2)   ''G.Rep2 H

                                ''Data Type ----------------------------------------------------
                                grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString

                                ''Data Typeにより判断 -----------------------------------------
                                If MotorDatatype = gCstCodeChDataTypeMotorDeviceJacom Or MotorDatatype = gCstCodeChDataTypeMotorDeviceJacom55 Then
                                    ''外部機器(Jacom22)
                                    grdCHList(gCstChListColPosPinAddress, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtPin) = gCstCodeChNotSetFuPin, "", .udtChCommon.shtPin)   ''Port No
                                    'grdCHList(gCstChListColPosPortNo, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtPin) = gCstCodeChNotSetFuPin, "", .udtChCommon.shtPin)   ''Port No

                                    'S Signal
                                    grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigJacom

                                Else

                                    'Ver2.0.8.9 2018.10.01 通信の場合、INSG 'R'を表示
                                    If MotorDatatype >= gCstCodeChDataTypeMotorRManRun Then
                                        'S Signal
                                        grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigCOMM
                                    End If

                                    ''DI Start ------------------------------------------------
                                    Dim intFuNoDi As Integer = .udtChCommon.shtFuno     ''Fu No
                                    Dim intPortNoDi As Integer = .udtChCommon.shtPortno ''Port No
                                    Dim intPinDi As Integer = .udtChCommon.shtPin       ''Pin

                                    '2016/10/14 FUアドレス表示位置修正 T.Ueki
                                    grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoDi)
                                    grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoDi)
                                    grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinDi, MotorDatatype)

                                End If

                                ''DO Start ----------------------------------------------------
                                Dim intFuNoDo As Integer = .MotorFuNo     ''Fu No
                                Dim intPortNoDo As Integer = .MotorPortNo ''Port No
                                Dim intPinDo As Integer = .MotorPin       ''Pin
                                grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(intFuNoDo)
                                grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(intPortNoDo)
                                grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(intPinDo, MotorDatatype)

                                Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusMotor)

                                ''Status In（Data Typeと連動するので表示の必要なし）-----------
                                'If .udtChCommon.shtStatus <> gCstCodeChManualInputStatus Then
                                '    cmbStatus.SelectedValue = .udtChCommon.shtStatus.ToString
                                '    grdCHList(mcstStatusIn, intRow).Value = cmbStatus.Text
                                'Else
                                '    grdCHList(mcstStatusIn, intRow).Value = gGetString(.udtChCommon.strStatus)     ''特殊コード対応
                                'End If

                                'Ver2.0.0.2 モーター種別増加 R Device 追加
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDevice Or _
                                    grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDeviceJacom Or _
                                    grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDeviceJacom55 Or _
                                    grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorRDevice Then
                                    ''Inのみ
                                    grdCHList(gCstChListColPosStatusOut, intRow).Value = gCstCodeChManualInputStatus.ToString
                                Else
                                    'Status Out -----------------------------------------------
                                    intValue = .MotorStatus
                                    If intValue = gCstCodeChManualInputStatus Then
                                        grdCHList(gCstChListColPosStatusOut, intRow).Value = gCstCodeChManualInputStatus.ToString

                                        'Ver2.0.1.2 STATUS1～8はそのままのﾃﾞｰﾀ
                                        'grdCHList(gCstChListColPosDoStatus1, intRow).Value = ""
                                        'grdCHList(gCstChListColPosDoStatus2, intRow).Value = ""
                                        'grdCHList(gCstChListColPosDoStatus3, intRow).Value = ""
                                        'grdCHList(gCstChListColPosDoStatus4, intRow).Value = ""
                                        'grdCHList(gCstChListColPosDoStatus5, intRow).Value = ""
                                        'grdCHList(gCstChListColPosDoStatus6, intRow).Value = ""
                                        'grdCHList(gCstChListColPosDoStatus7, intRow).Value = ""
                                        'grdCHList(gCstChListColPosDoStatus8, intRow).Value = ""

                                    Else
                                        grdCHList(gCstChListColPosStatusOut, intRow).Value = intValue.ToString

                                        'Ver2.0.1.2 STATUS1～8はそのままのﾃﾞｰﾀ
                                        ' ''DO Status ---------------------------------------------------
                                        'grdCHList(gCstChListColPosDoStatus1, intRow).Value = gGetString(.MotorOutStatus1)
                                        'grdCHList(gCstChListColPosDoStatus2, intRow).Value = gGetString(.MotorOutStatus2)
                                        'grdCHList(gCstChListColPosDoStatus3, intRow).Value = gGetString(.MotorOutStatus3)
                                        'grdCHList(gCstChListColPosDoStatus4, intRow).Value = gGetString(.MotorOutStatus4)
                                        'grdCHList(gCstChListColPosDoStatus5, intRow).Value = gGetString(.MotorOutStatus5)
                                        'grdCHList(gCstChListColPosDoStatus6, intRow).Value = gGetString(.MotorOutStatus6)
                                        'grdCHList(gCstChListColPosDoStatus7, intRow).Value = gGetString(.MotorOutStatus7)
                                        'grdCHList(gCstChListColPosDoStatus8, intRow).Value = gGetString(.MotorOutStatus8)

                                    End If
                                End If

                                'Ver2.0.1.2 STATUS1～8はそのままのﾃﾞｰﾀ
                                'DO Status ---------------------------------------------------
                                grdCHList(gCstChListColPosDoStatus1, intRow).Value = gGetString(.MotorOutStatus1)
                                grdCHList(gCstChListColPosDoStatus2, intRow).Value = gGetString(.MotorOutStatus2)
                                grdCHList(gCstChListColPosDoStatus3, intRow).Value = gGetString(.MotorOutStatus3)
                                grdCHList(gCstChListColPosDoStatus4, intRow).Value = gGetString(.MotorOutStatus4)
                                grdCHList(gCstChListColPosDoStatus5, intRow).Value = gGetString(.MotorOutStatus5)
                                grdCHList(gCstChListColPosDoStatus6, intRow).Value = gGetString(.MotorOutStatus6)
                                grdCHList(gCstChListColPosDoStatus7, intRow).Value = gGetString(.MotorOutStatus7)
                                grdCHList(gCstChListColPosDoStatus8, intRow).Value = gGetString(.MotorOutStatus8)


                                ''Status Alarm <-- Use ----------------------------------------
                                intValue = .MotorUse
                                grdCHList(gCstChListColPosStatusAlarm, intRow).Value = IIf(intValue = 1, True, False)

                                ''Filter Coef -------------------------------------------------
                                grdCHList(gCstChListColPosFilterCoef, intRow).Value = .MotorDiFilter

                                ''feedback <-- Alarm TimeUp -----------------------------------
                                '2015/4/23 msec→sec 表示に変更 T.Ueki
                                'grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = Val(.MotorFeedback)
                                grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = Val(.MotorFeedback) / 10


                                ''Control Type ------------------------------------------------
                                grdCHList(gCstChListColPosControlType, intRow).Value = .MotorControl.ToString

                                ''Pulse width -------------------------------------------------
                                If .MotorControl = 1 Then grdCHList(gCstChListColPosPulseWidth, intRow).Value = .MotorWidth

                                ''Feedback Alarm　---------------------------------------------
                                mFlagEventCancel = True
                                grdCHList(gCstChListColPosOutDelayH, intRow).Value = IIf(.MotorAlarmDelay = gCstCodeChMotorDelayTimerNothing, "", .MotorAlarmDelay)  ''Delay
                                mFlagEventCancel = False

                                grdCHList(gCstChListColPosOutExtgH, intRow).Value = IIf(.MotorAlarmExtGroup = gCstCodeChMotorExtGroupNothing, "", .MotorAlarmExtGroup)        ''EXT.G
                                grdCHList(gCstChListColPosOutGrep1H, intRow).Value = IIf(.MotorAlarmGroupRepose1 = gCstCodeChMotorGroupRepose1Nothing, "", .MotorAlarmGroupRepose1)   ''G.Rep1
                                grdCHList(gCstChListColPosOutGrep2H, intRow).Value = IIf(.MotorAlarmGroupRepose2 = gCstCodeChMotorGroupRepose2Nothing, "", .MotorAlarmGroupRepose2)   ''G.Rep2
                                grdCHList(gCstChListColPosOutStatusH, intRow).Value = gGetString(.MotorAlarmStatusInput)     ''Status

                                '仮設定機能対応(モーター)
                                Call Temporary_setup(3, i, intRow, 1)



                                '**************************************************************************************************************************************************************************
                                ''☆☆☆　バルブ  ☆☆☆☆☆☆☆☆☆☆
                                '**************************************************************************************************************************************************************************
                            Case gCstCodeChTypeValve

                                Dim ValveDatatype As Integer = Val(.udtChCommon.shtData.ToString)

                                ''Data Type ---------------------------------------------------
                                '' AI(4-20mA)の入力信号種別追加　ver1.4.0 2011.07.29
                                If .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Or .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Then                                       ' データ種別4-20mA
                                    If .udtChCommon.shtSignal = gCstCodeChAnalogSignalAI Then                                                                ' AI
                                        grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString
                                    ElseIf .udtChCommon.shtSignal = gCstCodeChAnalogSignalPT Then                                                            ' PT
                                        grdCHList(gCstChListColPosDataType, intRow).Value = (.udtChCommon.shtData + 100).ToString
                                    Else                                                                                            ' その他
                                        grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString
                                    End If
                                Else                                                                                                ' その他
                                    grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString
                                End If

                                ''Delay Timer -------------------------------------------------
                                If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO1 Or .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO1 Or .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Then

                                    grdCHList(gCstChListColPosDelayTime, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 3), "1", "0")
                                Else
                                    grdCHList(gCstChListColPosOutDelayTime, intRow).Value = IIf(gBitCheck(.udtChCommon.shtFlag1, 3), "1", "0")
                                End If

                                ''EXT Group ----------------------------------------------------
                                grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtExtGroup) = gCstCodeChCommonExtGroupNothing, "", .udtChCommon.shtExtGroup)        ''EXT.G H

                                ''G Repose 1 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose1) = gCstCodeChCommonGroupRepose1Nothing, "", .udtChCommon.shtGRepose1)   ''G.Rep1 H

                                ''G Repose 2 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose2) = gCstCodeChCommonGroupRepose2Nothing, "", .udtChCommon.shtGRepose2)   ''G.Rep2 H

                                ''Delay --------------------------------------------------------
                                mFlagEventCancel = True
                                grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtDelay) = gCstCodeChCommonDelayTimerNothing, "", .udtChCommon.shtDelay)
                                mFlagEventCancel = False

                                ''Status IN ----------------------------------------------------
                                If .udtChCommon.shtData >= gCstCodeChDataTypeValveDI_DO And _
                                    .udtChCommon.shtData <= gCstCodeChDataTypeValveAI_AO2 Then

                                    If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                    Else
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                    End If

                                    If .udtChCommon.shtStatus <> gCstCodeChManualInputStatus Then
                                        cmbStatus.SelectedValue = .udtChCommon.shtStatus.ToString
                                        grdCHList(gCstChListColPosStatusIn, intRow).Value = cmbStatus.Text
                                    Else

                                        If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then

                                            grdCHList(gCstChListColPosStatusIn, intRow).Value = gGetString(.udtChCommon.strStatus)     ''特殊コード対応

                                        ElseIf .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO1 Or _
                                                .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Then
                                            ''AI Status
                                            grdCHList(gCstChListColPosStatusIn, intRow).Value = ""
                                            grdCHList(gCstChListColPosStaNmHH, intRow).Value = gGetString(.ValveAiDoHiHiStatusInput)
                                            grdCHList(gCstChListColPosStaNmH, intRow).Value = gGetString(.ValveAiDoHiStatusInput)
                                            grdCHList(gCstChListColPosStaNmL, intRow).Value = gGetString(.ValveAiDoLoStatusInput)
                                            grdCHList(gCstChListColPosStaNmLL, intRow).Value = gGetString(.ValveAiDoLoLoStatusInput)

                                        ElseIf .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO1 Or _
                                                .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Then
                                            ''AI Status
                                            grdCHList(gCstChListColPosStatusIn, intRow).Value = ""
                                            grdCHList(gCstChListColPosStaNmHH, intRow).Value = gGetString(.ValveAiAoHiHiStatusInput)
                                            grdCHList(gCstChListColPosStaNmH, intRow).Value = gGetString(.ValveAiAoHiStatusInput)
                                            grdCHList(gCstChListColPosStaNmL, intRow).Value = gGetString(.ValveAiAoLoStatusInput)
                                            grdCHList(gCstChListColPosStaNmLL, intRow).Value = gGetString(.ValveAiAoLoLoStatusInput)
                                        End If
                                    End If

                                End If

                                ''Bit Count ------------------------------------------------------
                                If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then
                                    grdCHList(gCstChListColPosBitCount, intRow).Value = .udtChCommon.shtPinNo

                                ElseIf .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO1 Or _
                                        .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Then
                                    grdCHList(gCstChListColPosBitCount, intRow).Value = .ValveAiDoPinNo

                                ElseIf .udtChCommon.shtData = gCstCodeChDataTypeValveDO Then
                                    grdCHList(gCstChListColPosBitCount, intRow).Value = .ValveDiDoPinNo
                                Else
                                    grdCHList(gCstChListColPosBitCount, intRow).Value = ""
                                End If

                                'Data Typeにより判断 --------------------------------------------
                                Select Case grdCHList(gCstChListColPosDataType, intRow).Value

                                    Case gCstCodeChDataTypeValveDI_DO, gCstCodeChDataTypeValveDO, gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveExt, gCstCodeChDataTypeValveJacom55

                                        ''<< DI -> DO >>  << DO >>  << DO(JACOM-22) >>  << DO(EXT PANEL) >>

                                        If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDI_DO Then

                                            ''DI Address -------------------------------------------
                                            Dim intFuNoVDi As Integer = .udtChCommon.shtFuno     ''Fu No
                                            Dim intPortNoVDi As Integer = .udtChCommon.shtPortno ''Port No
                                            Dim intPinVDi As Integer = .udtChCommon.shtPin       ''Pin
                                            grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoVDi)
                                            grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoVDi)
                                            grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinVDi, ValveDatatype)

                                            'grdCHList(gCstChListColPosDiStart, intRow).Value = gConvFuAddress(.udtChCommon.shtFuno, .udtChCommon.shtPortno, .udtChCommon.shtPin)

                                            ''DO Address -------------------------------------------
                                            Dim intFuNoVDo As Integer = .ValveDiDoFuNo         ''Fu No
                                            Dim intPortNoVDo As Integer = .ValveDiDoPortNo     ''Port No
                                            Dim intPinVDo As Integer = .ValveDiDoPin           ''Pin
                                            grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(intFuNoVDo)
                                            grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(intPortNoVDo)
                                            grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(intPinVDo, ValveDatatype)

                                            'grdCHList(gCstChListColPosDoStart, intRow).Value = gConvFuAddress(intFuNo, intPortNo, intPin)

                                            ''デジタルコンポジット設定テーブルインデックス ---------
                                            grdCHList(gCstChListColPosComposite, intRow).Value = .ValveCompositeTableIndex
                                            grdCHList(gCstChListColPosCompositeIndex, intRow).Value = .ValveCompositeTableIndex

                                        ElseIf grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDO Then
                                            ''DO Address -------------------------------------------
                                            Dim intFuNoVDo2 As Integer = .ValveDiDoFuNo         ''Fu No
                                            Dim intPortNoVDo2 As Integer = .ValveDiDoPortNo     ''Port No
                                            Dim intPinVDo2 As Integer = .ValveDiDoPin           ''Pin
                                            grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(intFuNoVDo2)
                                            grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(intPortNoVDo2)
                                            grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(intPinVDo2, ValveDatatype)

                                            'grdCHList(gCstChListColPosDoStart, intRow).Value = gConvFuAddress(intFuNo, intPortNo, intPin)

                                        ElseIf grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom Or _
                                               grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom55 Then
                                            ''Port No ----------------------------------------------
                                            'grdCHList(gCstChListColPosPortNo, intRow).Value = .ValveDiDoPin

                                            'アドレス欄に移設 T.Ueki
                                            grdCHList(gCstChListColPosPinAddress, intRow).Value = .ValveDiDoPin

                                        ElseIf grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveExt Then
                                            ''Ecc Func ---------------------------------------------
                                            grdCHList(gCstChListColPosEccFunc, intRow).Value = .udtChCommon.shtEccFunc.ToString

                                            ''DO Address -------------------------------------------
                                            Dim intFuNoVDo3 As Integer = .ValveDiDoFuNo         ''Fu No
                                            Dim intPortNoVDo3 As Integer = .ValveDiDoPortNo     ''Port No
                                            Dim intPinVDo3 As Integer = .ValveDiDoPin           ''Pin
                                            grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(intFuNoVDo3)
                                            grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(intPortNoVDo3)
                                            grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(intPinVDo3, ValveDatatype)

                                            'grdCHList(gCstChListColPosDoStart, intRow).Value = gConvFuAddress(intFuNo, intPortNo, intPin)
                                        End If

                                        'Status OUT ----------------------------------------------
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                        intValue = .ValveDiDoStatus

                                        Select Case grdCHList(gCstChListColPosDataType, intRow).Value
                                            Case gCstCodeChDataTypeValveDI_DO, gCstCodeChDataTypeValveDO
                                                grdCHList(gCstChListColPosStatusOut, intRow).Value = gCstCodeChManualInputStatus.ToString

                                            Case gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveExt, gCstCodeChDataTypeValveJacom55
                                                grdCHList(gCstChListColPosStatusOut, intRow).Value = intValue.ToString
                                        End Select

                                        ''DO Status ----------------------------------------------
                                        grdCHList(gCstChListColPosDoStatus1, intRow).Value = gGetString(.ValveDiDoOutStatus1)
                                        grdCHList(gCstChListColPosDoStatus2, intRow).Value = gGetString(.ValveDiDoOutStatus2)
                                        grdCHList(gCstChListColPosDoStatus3, intRow).Value = gGetString(.ValveDiDoOutStatus3)
                                        grdCHList(gCstChListColPosDoStatus4, intRow).Value = gGetString(.ValveDiDoOutStatus4)
                                        grdCHList(gCstChListColPosDoStatus5, intRow).Value = gGetString(.ValveDiDoOutStatus5)
                                        grdCHList(gCstChListColPosDoStatus6, intRow).Value = gGetString(.ValveDiDoOutStatus6)
                                        grdCHList(gCstChListColPosDoStatus7, intRow).Value = gGetString(.ValveDiDoOutStatus7)
                                        grdCHList(gCstChListColPosDoStatus8, intRow).Value = gGetString(.ValveDiDoOutStatus8)

                                        ''Status Alarm <-- Use -----------------------------------
                                        intValue = .ValveDiDoUse
                                        grdCHList(gCstChListColPosStatusAlarm, intRow).Value = IIf(intValue = 1, True, False)

                                        ''Alarm Timer --------------------------------------------
                                        '2015/4/23 T.Ueki タイマー表示変更
                                        grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = Val(.ValveDiDoFeedback) / 10
                                        'grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = .ValveDiDoFeedback

                                        ''Control Type -------------------------------------------
                                        grdCHList(gCstChListColPosControlType, intRow).Value = .ValveDiDoControl.ToString

                                        ''Pulse Width(パルス出力の場合) --------------------------
                                        If .ValveDiDoControl = 1 Then grdCHList(gCstChListColPosPulseWidth, intRow).Value = .ValveDiDoWidth

                                        ''Feedback Alarm -----------------------------------------
                                        mFlagEventCancel = True
                                        grdCHList(gCstChListColPosOutDelayH, intRow).Value = IIf(.ValveDiDoAlarmDelay = gCstCodeChValveDelayTimerNothing, "", .ValveDiDoAlarmDelay)
                                        mFlagEventCancel = False
                                        grdCHList(gCstChListColPosOutExtgH, intRow).Value = IIf(.ValveDiDoAlarmExtGroup = gCstCodeChValveExtGroupNothing, "", .ValveDiDoAlarmExtGroup)               ''EXT.G
                                        grdCHList(gCstChListColPosOutGrep1H, intRow).Value = IIf(.ValveDiDoAlarmGroupRepose1 = gCstCodeChValveGroupRepose1Nothing, "", .ValveDiDoAlarmGroupRepose1)  ''G.Rep1
                                        grdCHList(gCstChListColPosOutGrep2H, intRow).Value = IIf(.ValveDiDoAlarmGroupRepose2 = gCstCodeChValveGroupRepose2Nothing, "", .ValveDiDoAlarmGroupRepose2)  ''G.Rep2
                                        grdCHList(gCstChListColPosOutStatusH, intRow).Value = gGetString(.ValveDiDoAlarmStatusInput)     ''Status

                                    Case gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, gCstCodeChDataTypeValvePT_DO2

                                        ''<< AI -> DO >>

                                        ''EXT Group ---------------------------------------------------
                                        grdCHList(gCstChListColPosExtGrHH, intRow).Value = IIf(.ValveAiDoHiHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiDoHiHiExtGroup)               ''EXT.G HH
                                        grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(.ValveAiDoHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiDoHiExtGroup)                    ''EXT.G H
                                        grdCHList(gCstChListColPosExtGrL, intRow).Value = IIf(.ValveAiDoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiDoLoExtGroup)                    ''EXT.G L
                                        grdCHList(gCstChListColPosExtGrLL, intRow).Value = IIf(.ValveAiDoLoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiDoLoLoExtGroup)               ''EXT.G LL
                                        grdCHList(gCstChListColPosExtGrSF, intRow).Value = IIf(.ValveAiDoSensorFailExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiDoSensorFailExtGroup)   ''EXT.G SF

                                        ''Delay ------------------------------------------------------
                                        mFlagEventCancel = True
                                        grdCHList(gCstChListColPosDelayHH, intRow).Value = IIf(.ValveAiDoHiHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiDoHiHiDelay)              ''Delay HH
                                        grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(.ValveAiDoHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiDoHiDelay)                   ''Delay H
                                        grdCHList(gCstChListColPosDelayL, intRow).Value = IIf(.ValveAiDoLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiDoLoDelay)                   ''Delay L
                                        grdCHList(gCstChListColPosDelayLL, intRow).Value = IIf(.ValveAiDoLoLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiDoLoLoDelay)              ''Delay LL
                                        grdCHList(gCstChListColPosDelaySF, intRow).Value = IIf(.ValveAiDoSensorFailDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiDoSensorFailDelay)  ''Delay SF
                                        mFlagEventCancel = False

                                        ''G Repose 1 -------------------------------------------------
                                        grdCHList(gCstChListColPosGrep1HH, intRow).Value = IIf(.ValveAiDoHiHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiDoHiHiGroupRepose1)  ''G.Rep1 HH
                                        grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(.ValveAiDoHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiDoHiGroupRepose1)       ''G.Rep1 H
                                        grdCHList(gCstChListColPosGrep1L, intRow).Value = IIf(.ValveAiDoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiDoLoGroupRepose1)       ''G.Rep1 L
                                        grdCHList(gCstChListColPosGrep1LL, intRow).Value = IIf(.ValveAiDoLoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiDoLoLoGroupRepose1)  ''G.Rep1 LL

                                        ''G Repose 2 -------------------------------------------------
                                        grdCHList(gCstChListColPosGrep2HH, intRow).Value = IIf(.ValveAiDoHiHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiDoHiHiGroupRepose2)  ''G.Rep2 HH
                                        grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(.ValveAiDoHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiDoHiGroupRepose2)       ''G.Rep2 H
                                        grdCHList(gCstChListColPosGrep2L, intRow).Value = IIf(.ValveAiDoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiDoLoGroupRepose2)       ''G.Rep2 L
                                        grdCHList(gCstChListColPosGrep2LL, intRow).Value = IIf(.ValveAiDoLoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiDoLoLoGroupRepose2)  ''G.Rep2 LL

                                        ''Decimal Position -------------------------------------------
                                        intDecimalP = .ValveAiDoDecimalPosition
                                        strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                        ''Range  -----------------------------------------------------
                                        dblLowValue = .ValveAiDoRangeLow / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeLo, intRow).Value = dblLowValue.ToString(strDecimalFormat) ''Range Low

                                        dblHiValue = .ValveAiDoRangeHigh / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = dblHiValue.ToString(strDecimalFormat)  ''Range Hi

                                        ''Value ------------------------------------------------------
                                        intValue = 0
                                        If .ValveAiDoHiHiUse = 0 Then      ''Use HH アラーム無し
                                            grdCHList(gCstChListColPosValueHH, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiDoHiHiValue / (10 ^ intDecimalP)    ''Value HH
                                            grdCHList(gCstChListColPosValueHH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiDoHiUse = 0 Then        ''Use H  アラーム無し
                                            grdCHList(gCstChListColPosValueH, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiDoHiValue / (10 ^ intDecimalP)      ''Value H
                                            grdCHList(gCstChListColPosValueH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiDoLoUse = 0 Then        ''Use L  アラーム無し
                                            grdCHList(gCstChListColPosValueL, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiDoLoValue / (10 ^ intDecimalP)      ''Value L
                                            grdCHList(gCstChListColPosValueL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiDoLoLoUse = 0 Then      ''Use LL アラーム無し
                                            grdCHList(gCstChListColPosValueLL, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiDoLoLoValue / (10 ^ intDecimalP)    ''Value LL
                                            grdCHList(gCstChListColPosValueLL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        grdCHList(gCstChListColPosValueSF, intRow).Value = .ValveAiDoSensorFailUse.ToString   ''Value SF <-- use

                                        ''Lo Normal / Hi Normal -------------------------------------
                                        If .ValveAiDoNormalLow = gCstCodeChAlalogNormalRangeNothingLo Then
                                            grdCHList(gCstChListColPosNormalLo, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiDoNormalLow / (10 ^ intDecimalP)
                                            grdCHList(gCstChListColPosNormalLo, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiDoNormalHigh = gCstCodeChAlalogNormalRangeNothingHi Then
                                            grdCHList(gCstChListColPosNormalHi, intRow).Value = ""
                                        Else
                                            dblValue2 = .ValveAiDoNormalHigh / (10 ^ intDecimalP)
                                            grdCHList(gCstChListColPosNormalHi, intRow).Value = dblValue2.ToString(strDecimalFormat)
                                        End If

                                        ''Off Set --------------------------------------------------
                                        grdCHList(gCstChListColPosOffset, intRow).Value = .ValveAiDoOffsetValue

                                        ''Strig ----------------------------------------------------
                                        grdCHList(gCstChListColPosString, intRow).Value = .ValveAiDoString

                                        ''Center Graph <-- display3 --------------------------------
                                        grdCHList(gCstChListColPosCenterGraph, intRow).Value = IIf(gBitCheck(.ValveAiDoDisplay3, 0), True, False)

                                        ''Unit -----------------------------------------------------
                                        If .udtChCommon.shtUnit <> gCstCodeChManualInputUnit Then
                                            cmbUnit.SelectedValue = .udtChCommon.shtUnit.ToString
                                            grdCHList(gCstChListColPosUnit, intRow).Value = cmbUnit.Text
                                        Else
                                            grdCHList(gCstChListColPosUnit, intRow).Value = gGetString(.udtChCommon.strUnit)         ''特殊コード対応
                                        End If

                                        ''AI Address -----------------------------------------------
                                        Dim intFuNoVAi As Integer = .udtChCommon.shtFuno         ''Fu No
                                        Dim intPortNoVAi As Integer = .udtChCommon.shtPortno     ''Port No
                                        Dim intPinVAi As Integer = .udtChCommon.shtPin           ''Pin
                                        'grdCHList(gCstChListColPosAiTerm, intRow).Value = gFuAddress(intFuNoVAi)
                                        'grdCHList(gCstChListColPosPortAiTerm, intRow).Value = gFuAddressPort(intPortNoVAi)
                                        'grdCHList(gCstChListColPosPinAiTerm, intRow).Value = gFuAddressPin(intPinVAi, ValveDatatype)

                                        grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoVAi)
                                        grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoVAi)
                                        grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinVAi, ValveDatatype)

                                        'grdCHList(gCstChListColPosAiTerm, intRow).Value = gConvFuAddress(.udtChCommon.shtFuno, .udtChCommon.shtPortno, .udtChCommon.shtPin)

                                        ''DO Address -----------------------------------------------
                                        Dim intFuNoVDo4 As Integer = .ValveAiDoFuNo         ''Fu No
                                        Dim intPortNoVDo4 As Integer = .ValveAiDoPortNo     ''Port No
                                        Dim intPinVDo4 As Integer = .ValveAiDoPin           ''Pin
                                        grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(intFuNoVDo4)
                                        grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(intPortNoVDo4)
                                        grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(intPinVDo4, ValveDatatype)

                                        'Dim intFuNo As Integer = .ValveAiDoFuNo         ''Fu No
                                        'Dim intPortNo As Integer = .ValveAiDoPortNo     ''Port No
                                        'Dim intPin As Integer = .ValveAiDoPin           ''Pin
                                        'grdCHList(gCstChListColPosDoStart, intRow).Value = gConvFuAddress(intFuNo, intPortNo, intPin)

                                        'Status OUT ------------------------------------------------
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                        intValue = .ValveAiDoOutStatus

                                        grdCHList(gCstChListColPosStatusOut, intRow).Value = intValue.ToString

                                        'Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                        'intValue = .ValveAiDoOutStatus
                                        'If intValue <> gCstCodeChManualInputStatus Then
                                        '    cmbStatus.SelectedValue = intValue.ToString
                                        '    grdCHList(gCstChListColPosStatusOut, intRow).Value = cmbStatus.Text
                                        'Else
                                        '    grdCHList(gCstChListColPosStatusOut, intRow).Value = ""     ''特殊コード対応
                                        'End If

                                        ''DO Status ------------------------------------------------
                                        grdCHList(gCstChListColPosDoStatus1, intRow).Value = gGetString(.ValveAiDoOutStatus1)
                                        grdCHList(gCstChListColPosDoStatus2, intRow).Value = gGetString(.ValveAiDoOutStatus2)
                                        grdCHList(gCstChListColPosDoStatus3, intRow).Value = gGetString(.ValveAiDoOutStatus3)
                                        grdCHList(gCstChListColPosDoStatus4, intRow).Value = gGetString(.ValveAiDoOutStatus4)
                                        grdCHList(gCstChListColPosDoStatus5, intRow).Value = gGetString(.ValveAiDoOutStatus5)
                                        grdCHList(gCstChListColPosDoStatus6, intRow).Value = gGetString(.ValveAiDoOutStatus6)
                                        grdCHList(gCstChListColPosDoStatus7, intRow).Value = gGetString(.ValveAiDoOutStatus7)
                                        grdCHList(gCstChListColPosDoStatus8, intRow).Value = gGetString(.ValveAiDoOutStatus8)

                                        ''Status Alarm <-- Use -------------------------------------
                                        ''フィードバックアラームとStatusAlarmは異なる　ver.1.4.0 2011.09.22
                                        'intValue = .ValveAiDoAlarmUse
                                        'grdCHList(gCstChListColPosStatusAlarm, intRow).Value = IIf(intValue = 1, True, False)

                                        ''Alarm Timer ----------------------------------------------
                                        'grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = .ValveAiDoFeedback
                                        'Ver2.0.0.2 タイマ1/10へ修正
                                        grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = Val(.ValveAiDoFeedback) / 10

                                        ''Control Type ---------------------------------------------
                                        grdCHList(gCstChListColPosControlType, intRow).Value = .ValveAiDoOutControl.ToString

                                        ''Pulse Width(パルス出力の場合) ----------------------------
                                        '' '' AI/DOは出力制御種別に関わらずパルス幅を設定可能とする    ver.1.4.4 2012.05.07
                                        'If .ValveAiDoOutControl = 1 Then grdCHList(gCstChListColPosPulseWidth, intRow).Value = .ValveAiDoWidth
                                        grdCHList(gCstChListColPosPulseWidth, intRow).Value = .ValveAiDoWidth

                                        ''Feedback Alarm--------------------------------------------
                                        mFlagEventCancel = True
                                        grdCHList(gCstChListColPosOutDelayH, intRow).Value = IIf(.ValveAiDoAlarmDelay = gCstCodeChValveDelayTimerNothing, "", .ValveAiDoAlarmDelay)  ''Delay
                                        mFlagEventCancel = False

                                        grdCHList(gCstChListColPosOutExtgH, intRow).Value = IIf(.ValveAiDoAlarmExtGroup = gCstCodeChValveExtGroupNothing, "", .ValveAiDoAlarmExtGroup)               ''EXT.G
                                        grdCHList(gCstChListColPosOutGrep1H, intRow).Value = IIf(.ValveAiDoAlarmGroupRepose1 = gCstCodeChValveGroupRepose1Nothing, "", .ValveAiDoAlarmGroupRepose1)  ''G.Rep1
                                        grdCHList(gCstChListColPosOutGrep2H, intRow).Value = IIf(.ValveAiDoAlarmGroupRepose2 = gCstCodeChValveGroupRepose2Nothing, "", .ValveAiDoAlarmGroupRepose2)  ''G.Rep2
                                        grdCHList(gCstChListColPosOutStatusH, intRow).Value = gGetString(.ValveAiDoAlarmStatusInput)     ''Status

                                        grdCHList(gCstChListColPosOutSp1, intRow).Value = .ValveAiDoAlarmSp1     ''規定値1
                                        grdCHList(gCstChListColPosOutSp2, intRow).Value = .ValveAiDoAlarmSp2     ''規定値2
                                        grdCHList(gCstChListColPosOutHys1, intRow).Value = .ValveAiDoAlarmHys1   ''ヒステリシス値(開処理用)
                                        grdCHList(gCstChListColPosOutHys2, intRow).Value = .ValveAiDoAlarmHys2   ''ヒステリシス値(閉処理用)
                                        grdCHList(gCstChListColPosOutSt, intRow).Value = IIf(.ValveAiDoAlarmSt = 0, "", .ValveAiDoAlarmSt)   ''サンプリング時間

                                    Case gCstCodeChDataTypeValveAI_AO1, gCstCodeChDataTypeValveAI_AO2, gCstCodeChDataTypeValvePT_AO2

                                        ''<< AI -> AO >>

                                        ''EXT Group ---------------------------------------------------
                                        grdCHList(gCstChListColPosExtGrHH, intRow).Value = IIf(.ValveAiAoHiHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiAoHiHiExtGroup)               ''EXT.G HH
                                        grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(.ValveAiAoHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiAoHiExtGroup)                    ''EXT.G H
                                        grdCHList(gCstChListColPosExtGrL, intRow).Value = IIf(.ValveAiAoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiAoLoExtGroup)                    ''EXT.G L
                                        grdCHList(gCstChListColPosExtGrLL, intRow).Value = IIf(.ValveAiAoLoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiAoLoLoExtGroup)               ''EXT.G LL
                                        grdCHList(gCstChListColPosExtGrSF, intRow).Value = IIf(.ValveAiAoSensorFailExtGroup = gCstCodeChAnalogExtGroupNothing, "", .ValveAiAoSensorFailExtGroup)   ''EXT.G SF

                                        ''Delay ------------------------------------------------------
                                        mFlagEventCancel = True
                                        grdCHList(gCstChListColPosDelayHH, intRow).Value = IIf(.ValveAiAoHiHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiAoHiHiDelay)              ''Delay HH
                                        grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(.ValveAiAoHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiAoHiDelay)                   ''Delay H
                                        grdCHList(gCstChListColPosDelayL, intRow).Value = IIf(.ValveAiAoLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiAoLoDelay)                   ''Delay L
                                        grdCHList(gCstChListColPosDelayLL, intRow).Value = IIf(.ValveAiAoLoLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiAoLoLoDelay)              ''Delay LL
                                        grdCHList(gCstChListColPosDelaySF, intRow).Value = IIf(.ValveAiAoSensorFailDelay = gCstCodeChAnalogDelayTimerNothing, "", .ValveAiAoSensorFailDelay)  ''Delay SF
                                        mFlagEventCancel = False

                                        ''G Repose 1 -------------------------------------------------
                                        grdCHList(gCstChListColPosGrep1HH, intRow).Value = IIf(.ValveAiAoHiHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiAoHiHiGroupRepose1)  ''G.Rep1 HH
                                        grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(.ValveAiAoHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiAoHiGroupRepose1)       ''G.Rep1 H
                                        grdCHList(gCstChListColPosGrep1L, intRow).Value = IIf(.ValveAiAoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiAoLoGroupRepose1)       ''G.Rep1 L
                                        grdCHList(gCstChListColPosGrep1LL, intRow).Value = IIf(.ValveAiAoLoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .ValveAiAoLoLoGroupRepose1)  ''G.Rep1 LL

                                        ''G Repose 2 -------------------------------------------------
                                        grdCHList(gCstChListColPosGrep2HH, intRow).Value = IIf(.ValveAiAoHiHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiAoHiHiGroupRepose2)  ''G.Rep2 HH
                                        grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(.ValveAiAoHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiAoHiGroupRepose2)       ''G.Rep2 H
                                        grdCHList(gCstChListColPosGrep2L, intRow).Value = IIf(.ValveAiAoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiAoLoGroupRepose2)       ''G.Rep2 L
                                        grdCHList(gCstChListColPosGrep2LL, intRow).Value = IIf(.ValveAiAoLoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .ValveAiAoLoLoGroupRepose2)  ''G.Rep2 LL

                                        ''Decimal Position ------------------------------------------
                                        intDecimalP = .ValveAiAoDecimalPosition
                                        strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                        ''Range  ----------------------------------------------------
                                        dblLowValue = .ValveAiAoRangeLow / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeLo, intRow).Value = dblLowValue.ToString(strDecimalFormat) ''Range Low

                                        dblHiValue = .ValveAiAoRangeHigh / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = dblHiValue.ToString(strDecimalFormat)  ''Range Hi

                                        ''Value -----------------------------------------------------
                                        intValue = 0
                                        If .ValveAiAoHiHiUse = 0 Then      ''Use HH アラーム無し
                                            grdCHList(gCstChListColPosValueHH, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiAoHiHiValue / (10 ^ intDecimalP)    ''Value HH
                                            grdCHList(gCstChListColPosValueHH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiAoHiUse = 0 Then        ''Use H  アラーム無し
                                            grdCHList(gCstChListColPosValueH, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiAoHiValue / (10 ^ intDecimalP)      ''Value H
                                            grdCHList(gCstChListColPosValueH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiAoLoUse = 0 Then        ''Use L  アラーム無し
                                            grdCHList(gCstChListColPosValueL, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiAoLoValue / (10 ^ intDecimalP)      ''Value L
                                            grdCHList(gCstChListColPosValueL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiAoLoLoUse = 0 Then      ''Use LL アラーム無し
                                            grdCHList(gCstChListColPosValueLL, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiAoLoLoValue / (10 ^ intDecimalP)    ''Value LL
                                            grdCHList(gCstChListColPosValueLL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        grdCHList(gCstChListColPosValueSF, intRow).Value = .ValveAiAoSensorFailUse.ToString   ''Value SF <-- use

                                        ''Lo Normal / Hi Normal ------------------------------------
                                        If .ValveAiAoNormalLow = gCstCodeChAlalogNormalRangeNothingLo Then
                                            grdCHList(gCstChListColPosNormalLo, intRow).Value = ""
                                        Else
                                            dblValue = .ValveAiAoNormalLow / (10 ^ intDecimalP)
                                            grdCHList(gCstChListColPosNormalLo, intRow).Value = dblValue.ToString(strDecimalFormat)
                                        End If

                                        If .ValveAiAoNormalHigh = gCstCodeChAlalogNormalRangeNothingHi Then
                                            grdCHList(gCstChListColPosNormalHi, intRow).Value = ""
                                        Else
                                            dblValue2 = .ValveAiAoNormalHigh / (10 ^ intDecimalP)
                                            grdCHList(gCstChListColPosNormalHi, intRow).Value = dblValue2.ToString(strDecimalFormat)
                                        End If

                                        ''Off Set -------------------------------------------------
                                        grdCHList(gCstChListColPosOffset, intRow).Value = .ValveAiAoOffsetValue

                                        ''Strig ---------------------------------------------------
                                        grdCHList(gCstChListColPosString, intRow).Value = .ValveAiAoString

                                        ''Center Graph <-- display3 -------------------------------
                                        grdCHList(gCstChListColPosCenterGraph, intRow).Value = IIf(gBitCheck(.ValveAiAoDisplay3, 0), True, False)

                                        ''Unit ----------------------------------------------------
                                        If .udtChCommon.shtUnit <> gCstCodeChManualInputUnit Then
                                            cmbUnit.SelectedValue = .udtChCommon.shtUnit.ToString
                                            grdCHList(gCstChListColPosUnit, intRow).Value = cmbUnit.Text
                                        Else
                                            grdCHList(gCstChListColPosUnit, intRow).Value = gGetString(.udtChCommon.strUnit)         ''特殊コード対応
                                        End If

                                        ''AI Address ----------------------------------------------
                                        Dim intFuNoVAi2 As Integer = .udtChCommon.shtFuno         ''Fu No
                                        Dim intPortNoVAi2 As Integer = .udtChCommon.shtPortno     ''Port No
                                        Dim intPinVAi2 As Integer = .udtChCommon.shtPin           ''Pin

                                        grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoVAi2)
                                        grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoVAi2)
                                        grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinVAi2, ValveDatatype)


                                        'grdCHList(gCstChListColPosAiTerm, intRow).Value = gFuAddress(intFuNoVAi2)
                                        'grdCHList(gCstChListColPosPortAiTerm, intRow).Value = gFuAddressPort(intPortNoVAi2)
                                        'grdCHList(gCstChListColPosPinAiTerm, intRow).Value = gFuAddressPin(intPinVAi2, ValveDatatype)

                                        'grdCHList(gCstChListColPosAiTerm, intRow).Value = gConvFuAddress(.udtChCommon.shtFuno, .udtChCommon.shtPortno, .udtChCommon.shtPin)

                                        ''AO Address ----------------------------------------------
                                        Dim intFuNoVAo2 As Integer = .ValveAiAoFuNo         ''Fu No
                                        Dim intPortNoVAo2 As Integer = .ValveAiAoPortNo     ''Port No
                                        Dim intPinVAo2 As Integer = .ValveAiAoPin           ''Pin
                                        grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(intFuNoVAo2)
                                        grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(intPortNoVAo2)
                                        grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(intPinVAo2, ValveDatatype)

                                        'Dim intFuNo As Integer = .ValveAiAoFuNo         ''Fu No
                                        'Dim intPortNo As Integer = .ValveAiAoPortNo     ''Port No
                                        'Dim intPin As Integer = .ValveAiAoPin           ''Pin
                                        'grdCHList(gCstChListColPosAoTerm, intRow).Value = gConvFuAddress(intFuNo, intPortNo, intPin)

                                        'Status OUT -----------------------------------------------
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                        intValue = .ValveAiAoOutStatus

                                        grdCHList(gCstChListColPosStatusOut, intRow).Value = intValue.ToString

                                        'Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                        'intValue = .ValveAiAoOutStatus
                                        'If intValue <> gCstCodeChManualInputStatus Then
                                        '    cmbStatus.SelectedValue = intValue.ToString
                                        '    grdCHList(gCstChListColPosStatusOut, intRow).Value = cmbStatus.Text
                                        'Else
                                        '    grdCHList(gCstChListColPosStatusOut, intRow).Value = gGetString(.ValveAiAoOutStatus1)     ''特殊コード対応
                                        'End If

                                        ''Status Alarm <-- Use ------------------------------------
                                        ''フィードバックアラームとStatusAlarmは異なる　ver.1.4.0 2011.09.22
                                        'intValue = .ValveAiAoAlarmUse
                                        'grdCHList(gCstChListColPosStatusAlarm, intRow).Value = IIf(intValue = 1, True, False)

                                        ''Alarm Timer ---------------------------------------------
                                        'grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = .ValveAiAoFeedback
                                        'Ver2.0.0.2 FB Timer1/10へ
                                        grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = Val(.ValveAiAoFeedback) / 10

                                        ''Feedback Alarm ------------------------------------------
                                        mFlagEventCancel = True
                                        grdCHList(gCstChListColPosOutDelayH, intRow).Value = IIf(.ValveAiAoAlarmDelay = gCstCodeChValveDelayTimerNothing, "", .ValveAiAoAlarmDelay)  ''Delay
                                        mFlagEventCancel = False

                                        grdCHList(gCstChListColPosOutExtgH, intRow).Value = IIf(.ValveAiAoAlarmExtGroup = gCstCodeChValveExtGroupNothing, "", .ValveAiAoAlarmExtGroup)               ''EXT.G
                                        grdCHList(gCstChListColPosOutGrep1H, intRow).Value = IIf(.ValveAiAoAlarmGroupRepose1 = gCstCodeChValveGroupRepose1Nothing, "", .ValveAiAoAlarmGroupRepose1)  ''G.Rep1
                                        grdCHList(gCstChListColPosOutGrep2H, intRow).Value = IIf(.ValveAiAoAlarmGroupRepose2 = gCstCodeChValveGroupRepose2Nothing, "", .ValveAiAoAlarmGroupRepose2)  ''G.Rep2
                                        grdCHList(gCstChListColPosOutStatusH, intRow).Value = gGetString(.ValveAiAoAlarmStatusInput)     ''Status

                                        grdCHList(gCstChListColPosOutSp1, intRow).Value = .ValveAiAoAlarmSp1     ''規定値1
                                        grdCHList(gCstChListColPosOutSp2, intRow).Value = .ValveAiAoAlarmSp2     ''規定値2
                                        grdCHList(gCstChListColPosOutHys1, intRow).Value = .ValveAiAoAlarmHys1   ''ヒステリシス値(開処理用)
                                        grdCHList(gCstChListColPosOutHys2, intRow).Value = .ValveAiAoAlarmHys2   ''ヒステリシス値(閉処理用)
                                        grdCHList(gCstChListColPosOutSt, intRow).Value = IIf(.ValveAiAoAlarmSt = 0, "", .ValveAiAoAlarmSt)   ''サンプリング時間
                                        grdCHList(gCstChListColPosOutVar, intRow).Value = (.ValveAiAoAlarmVar / 10).ToString("0.0")          ''変化量

                                    Case gCstCodeChDataTypeValveAO_4_20

                                        ''<< AO >>

                                        ''AO Address ----------------------------------------------
                                        Dim intFuNoVAo3 As Integer = .ValveAiAoFuNo         ''Fu No
                                        Dim intPortNoVAo3 As Integer = .ValveAiAoPortNo     ''Port No
                                        Dim intPinVAo3 As Integer = .ValveAiAoPin           ''Pin

                                        grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(intFuNoVAo3)
                                        grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(intPortNoVAo3)
                                        grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(intPinVAo3, ValveDatatype)

                                        'Dim intFuNo As Integer = .ValveAiAoFuNo         ''Fu No
                                        'Dim intPortNo As Integer = .ValveAiAoPortNo     ''Port No
                                        'Dim intPin As Integer = .ValveAiAoPin           ''Pin
                                        'grdCHList(gCstChListColPosAoTerm, intRow).Value = gConvFuAddress(intFuNo, intPortNo, intPin)

                                        'Status OUT -----------------------------------------------
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                        intValue = .ValveAiAoOutStatus

                                        grdCHList(gCstChListColPosStatusOut, intRow).Value = intValue.ToString


                                        If intValue <> gCstCodeChManualInputStatus Then
                                            cmbStatus.SelectedValue = intValue.ToString
                                            grdCHList(gCstChListColPosStatusOut, intRow).Value = cmbStatus.Text
                                        Else
                                            grdCHList(gCstChListColPosStatusOut, intRow).Value = gGetString(.ValveAiAoOutStatus1)     ''特殊コード対応
                                        End If

                                        ''Status Alarm <-- Use -------------------------------------
                                        ''フィードバックアラームとStatusAlarmは異なる　ver.1.4.0 2011.09.22
                                        'intValue = .ValveAiAoAlarmUse
                                        'grdCHList(gCstChListColPosStatusAlarm, intRow).Value = IIf(intValue = 1, True, False)

                                        ''Alarm Timer ----------------------------------------------
                                        'grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = .ValveAiAoFeedback
                                        'Ver2.0.0.2 FB Timer1/10へ
                                        grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = Val(.ValveAiAoFeedback) / 10

                                        ''Feedback Alarm -------------------------------------------
                                        mFlagEventCancel = True
                                        grdCHList(gCstChListColPosOutDelayH, intRow).Value = IIf(.ValveAiAoAlarmDelay = gCstCodeChValveDelayTimerNothing, "", .ValveAiAoAlarmDelay)  ''Delay
                                        mFlagEventCancel = False

                                        grdCHList(gCstChListColPosOutExtgH, intRow).Value = IIf(.ValveAiAoAlarmExtGroup = gCstCodeChValveExtGroupNothing, "", .ValveAiAoAlarmExtGroup)               ''EXT.G
                                        grdCHList(gCstChListColPosOutGrep1H, intRow).Value = IIf(.ValveAiAoAlarmGroupRepose1 = gCstCodeChValveGroupRepose1Nothing, "", .ValveAiAoAlarmGroupRepose1)  ''G.Rep1
                                        grdCHList(gCstChListColPosOutGrep2H, intRow).Value = IIf(.ValveAiAoAlarmGroupRepose2 = gCstCodeChValveGroupRepose2Nothing, "", .ValveAiAoAlarmGroupRepose2)  ''G.Rep2
                                        grdCHList(gCstChListColPosOutStatusH, intRow).Value = gGetString(.ValveAiAoAlarmStatusInput)     ''Status

                                        grdCHList(gCstChListColPosOutSp1, intRow).Value = .ValveAiAoAlarmSp1     ''規定値1
                                        grdCHList(gCstChListColPosOutSp2, intRow).Value = .ValveAiAoAlarmSp2     ''規定値2
                                        grdCHList(gCstChListColPosOutHys1, intRow).Value = .ValveAiAoAlarmHys1   ''ヒステリシス値(開処理用)
                                        grdCHList(gCstChListColPosOutHys2, intRow).Value = .ValveAiAoAlarmHys2   ''ヒステリシス値(閉処理用)
                                        grdCHList(gCstChListColPosOutSt, intRow).Value = IIf(.ValveAiAoAlarmSt = 0, "", .ValveAiAoAlarmSt)   ''サンプリング時間
                                        grdCHList(gCstChListColPosOutVar, intRow).Value = (.ValveAiAoAlarmVar / 10).ToString("0.0")          ''変化量

                                        ''Decimal Position ---------------------------------------
                                        intDecimalP = .ValveAiAoDecimalPosition
                                        strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                        ''Range  -------------------------------------------------
                                        dblLowValue = .ValveAiAoRangeLow / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeLo, intRow).Value = dblLowValue.ToString(strDecimalFormat) ''Range Low

                                        dblHiValue = .ValveAiAoRangeHigh / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = dblHiValue.ToString(strDecimalFormat)  ''Range Hi

                                        ''Unit ---------------------------------------------------
                                        If .udtChCommon.shtUnit <> gCstCodeChManualInputUnit Then
                                            cmbUnit.SelectedValue = .udtChCommon.shtUnit.ToString
                                            grdCHList(gCstChListColPosUnit, intRow).Value = cmbUnit.Text
                                        Else
                                            grdCHList(gCstChListColPosUnit, intRow).Value = gGetString(.udtChCommon.strUnit)    ''特殊コード対応
                                        End If

                                End Select

                                'S Signal
                                If ValveDatatype = gCstCodeChDataTypeValveJacom Or ValveDatatype = gCstCodeChDataTypeValveJacom55 Then
                                    grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigJacom
                                Else
                                    grdCHList(gCstChListColPosSSig, intRow).Value = ""
                                End If


                                '仮設定機能対応(バルブ)
                                Call Temporary_setup(4, i, intRow, 1)


                                '**************************************************************************************************************************************************************************
                                ''☆☆☆　デジタルコンポジット  ☆☆☆☆☆☆☆☆☆☆
                                '**************************************************************************************************************************************************************************
                            Case gCstCodeChTypeComposite

                                Dim CompositeDatatype As Integer = Val(.udtChCommon.shtData.ToString)

                                ''EXT Group ----------------------------------------------------
                                grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtExtGroup) = gCstCodeChCommonExtGroupNothing, "", .udtChCommon.shtExtGroup)        ''EXT.G H

                                ''G Repose 1 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose1) = gCstCodeChCommonGroupRepose1Nothing, "", .udtChCommon.shtGRepose1)   ''G.Rep1 H

                                ''G Repose 2 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose2) = gCstCodeChCommonGroupRepose2Nothing, "", .udtChCommon.shtGRepose2)   ''G.Rep2 H

                                ''Delay --------------------------------------------------------
                                mFlagEventCancel = True
                                grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtDelay) = gCstCodeChCommonDelayTimerNothing, "", .udtChCommon.shtDelay)
                                mFlagEventCancel = False

                                ''DI Start ----------------------------------------------------
                                Dim intFuNoCmpDi As Integer = .udtChCommon.shtFuno     ''Fu No
                                Dim intPortNoCmpDi As Integer = .udtChCommon.shtPortno ''Port No
                                Dim intPinCmpDi As Integer = .udtChCommon.shtPin       ''Pin
                                grdCHList(gCstChListColPosDiStart, intRow).Value = gFuAddress(intFuNoCmpDi)
                                grdCHList(gCstChListColPosPortDiStart, intRow).Value = gFuAddressPort(intPortNoCmpDi)
                                grdCHList(gCstChListColPosPinDiStart, intRow).Value = gFuAddressPin(intPinCmpDi, CompositeDatatype)

                                'Ver2.0.7.J FuAdressが出ない対策
                                grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoCmpDi)
                                grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoCmpDi)
                                grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinCmpDi, CompositeDatatype)


                                'grdCHList(gCstChListColPosDiStart, intRow).Value = gConvFuAddress(.udtChCommon.shtFuno, .udtChCommon.shtPortno, .udtChCommon.shtPin)

                                grdCHList(gCstChListColPosBitCount, intRow).Value = .udtChCommon.shtPinNo                      ''Bit Count
                                grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString              ''Data Type

                                ''Status ------------------------------------------------------
                                If .udtChCommon.shtData = gCstCodeChDataTypeCompTankLevel Then
                                    strValue = mGetString(.udtChCommon.strStatus)     ''特殊コード対応
                                    'Ver2.0.7.L
                                    'If strValue.Length > 8 Then
                                    If LenB(strValue) > 8 Then
                                        'grdCHList(gCstChListColPosStatusIn, intRow).Value = strValue.Substring(0, 8).Trim & "/" & strValue.Substring(8).Trim
                                        grdCHList(gCstChListColPosStatusIn, intRow).Value = MidB(strValue, 0, 8).Trim & "/" & MidB(strValue, 8).Trim
                                    Else
                                        grdCHList(gCstChListColPosStatusIn, intRow).Value = strValue.Trim
                                    End If
                                End If

                                ''デジタルコンポジット設定テーブルインデックス ----------------
                                grdCHList(gCstChListColPosComposite, intRow).Value = .CompositeTableIndex
                                grdCHList(gCstChListColPosCompositeIndex, intRow).Value = .CompositeTableIndex

                                '仮設定機能対応(コンポジット)
                                Call Temporary_setup(5, i, intRow, 1)




                                '**************************************************************************************************************************************************************************
                                ''☆☆☆　パルス積算  ☆☆☆☆☆☆☆☆☆☆
                                '**************************************************************************************************************************************************************************
                            Case gCstCodeChTypePulse

                                Dim PulseDatatype As Integer = Val(.udtChCommon.shtData.ToString)

                                ''EXT Group ----------------------------------------------------
                                grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtExtGroup) = gCstCodeChCommonExtGroupNothing, "", .udtChCommon.shtExtGroup)        ''EXT.G H

                                ''G Repose 1 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose1) = gCstCodeChCommonGroupRepose1Nothing, "", .udtChCommon.shtGRepose1)   ''G.Rep1 H

                                ''G Repose 2 ---------------------------------------------------
                                grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtGRepose2) = gCstCodeChCommonGroupRepose2Nothing, "", .udtChCommon.shtGRepose2)   ''G.Rep2 H 

                                ''Delay --------------------------------------------------------
                                mFlagEventCancel = True
                                grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(gGet2Byte(.udtChCommon.shtDelay) = gCstCodeChCommonDelayTimerNothing, "", .udtChCommon.shtDelay)
                                mFlagEventCancel = False

                                'Ver2.0.6.1 積算ﾊﾟﾙｽはﾃﾞｰﾀﾀｲﾌﾟで通信が増えているため対応
                                'S Signal
                                'If PulseDatatype = gCstCodeChDataTypePulseExtDev Then
                                If PulseDatatype >= gCstCodeChDataTypePulseExtDev Then
                                    grdCHList(gCstChListColPosSSig, intRow).Value = gCstChListSSigCOMM
                                Else
                                    grdCHList(gCstChListColPosSSig, intRow).Value = ""
                                End If


                                ''Fu Address ---------------------------------------------------
                                Dim intFuNoPalse As Integer = .udtChCommon.shtFuno         ''Fu No
                                Dim intPortNoPalse As Integer = .udtChCommon.shtPortno     ''Port No
                                Dim intPinPalse As Integer = .udtChCommon.shtPin           ''Pin
                                grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoPalse)
                                grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoPalse)
                                grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinPalse, PulseDatatype)

                                'grdCHList(gCstChListColPosFuAddress, intRow).Value = gConvFuAddress(.udtChCommon.shtFuno, .udtChCommon.shtPortno, .udtChCommon.shtPin)

                                'T.Ueki PulseUse
                                ''Status Alarm <-- Use -------------------------------------
                                grdCHList(gCstChListColPosStatusAlarm, intRow).Value = .PulseUse

                                ''Data Type (Unitより前にセットする事) -------------------------
                                grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString

                                ''Unit ---------------------------------------------------------
                                If .udtChCommon.shtUnit <> gCstCodeChManualInputUnit Then
                                    cmbUnit.SelectedValue = .udtChCommon.shtUnit.ToString
                                    grdCHList(gCstChListColPosUnit, intRow).Value = cmbUnit.Text
                                Else
                                    grdCHList(gCstChListColPosUnit, intRow).Value = gGetString(.udtChCommon.strUnit)     ''特殊コード対応
                                End If

                                ''Status -------------------------------------------------------
                                If .udtChCommon.shtStatus <> gCstCodeChManualInputStatus Then
                                    Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusPulse)
                                    cmbStatus.SelectedValue = .udtChCommon.shtStatus.ToString
                                    grdCHList(gCstChListColPosStatusIn, intRow).Value = cmbStatus.Text
                                Else
                                    grdCHList(gCstChListColPosStatusIn, intRow).Value = ""
                                    grdCHList(gCstChListColPosStaNmH, intRow).Value = gGetString(.udtChCommon.strStatus)
                                End If

                                '仮設定機能対応(コンポジット)
                                Call Temporary_setup(6, i, intRow, 1)

                                ''Data Type から、パルスCH or 積算CH の判定をする -------------
                                If .udtChCommon.shtData < gCstCodeChDataTypePulseRevoTotalHour Or _
                                   .udtChCommon.shtData = gCstCodeChDataTypePulseExtDev Then
                                    ''パルスCH

                                    ''RangeLo ---------------------------------------------
                                    grdCHList(gCstChListColPosRangeLo, intRow).Value = "0"

                                    ''RangeHi ---------------------------------------------
                                    'Ver2.0.6.5 9が7個
                                    Dim intPulseValue As Double = 9999999 '99999999

                                    If .PulseDecPoint = 0 Or .PulseDecPoint = Nothing Then
                                        'Ver2.0.7.E DecPoint無しは9が8個
                                        'grdCHList(gCstChListColPosRangeHi, intRow).Value = intPulseValue
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = 99999999
                                    Else
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = intPulseValue / 10 ^ .PulseDecPoint
                                    End If

                                    ''Filter Coef ---------------------------------------------
                                    grdCHList(gCstChListColPosFilterCoef, intRow).Value = .PulseDiFilter

                                    ''Decimal Position ----------------------------------------
                                    grdCHList(gCstChListColPosDecimalPoint, intRow).Value = .PulseDecPoint
                                    intDecimalP = .PulseDecPoint
                                    strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                    ''Value H -------------------------------------------------　VUEKI
                                    dblValue = .PulseValue / (10 ^ intDecimalP)

                                    If dblValue = 0 Then
                                        grdCHList(gCstChListColPosValueH, intRow).Value = ""
                                    Else
                                        grdCHList(gCstChListColPosValueH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                    End If

                                    ''Strig ---------------------------------------------------
                                    grdCHList(gCstChListColPosString, intRow).Value = .PulseString

                                Else
                                    ''積算CH

                                    ''Filter Coef ---------------------------------------------
                                    grdCHList(gCstChListColPosFilterCoef, intRow).Value = .RevoDiFilter

                                    ''Decimal Position ----------------------------------------
                                    grdCHList(gCstChListColPosDecimalPoint, intRow).Value = .RevoDecPoint
                                    intDecimalP = .RevoDecPoint
                                    strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)

                                    ''RangeLo ---------------------------------------------
                                    grdCHList(gCstChListColPosRangeLo, intRow).Value = "0"

                                    ''RangeHi ---------------------------------------------
                                    Select Case .udtChCommon.shtData

                                        Case gCstCodeChDataTypePulseRevoTotalHour, gCstCodeChDataTypePulseRevoDayHour, gCstCodeChDataTypePulseRevoLapHour, _
                                            gCstCodeChDataTypePulseRevoExtDev, gCstCodeChDataTypePulseRevoExtDevDayHour, gCstCodeChDataTypePulseRevoExtDevLapHour

                                            'Ver2.0.6.5 9が7個
                                            'Ver2.0.7.E DecPoint無しは9が8個
                                            Dim intHourValue As Double = 99999999   '9999999 '99999999
                                            grdCHList(gCstChListColPosRangeHi, intRow).Value = intHourValue

                                        Case gCstCodeChDataTypePulseRevoTotalMin, gCstCodeChDataTypePulseRevoDayMin, gCstCodeChDataTypePulseRevoLapMin, _
                                            gCstCodeChDataTypePulseRevoExtDevTotalMin, gCstCodeChDataTypePulseRevoExtDevDayMin, gCstCodeChDataTypePulseRevoExtDevLapMin

                                            Dim intMinValue As Double = 99999.59
                                            If .RevoDecPoint = 0 Or .RevoDecPoint = Nothing Then
                                                grdCHList(gCstChListColPosRangeHi, intRow).Value = intMinValue
                                            Else
                                                grdCHList(gCstChListColPosRangeHi, intRow).Value = intMinValue / 10 ^ Val(strDecimalFormat)
                                            End If

                                    End Select

                                    ''Value H -------------------------------------------------
                                    '' ver1.4.3 2012.03.23 RHの時分データ分割対応
                                    'dblValue = .RevoValue / (10 ^ intDecimalP)
                                    If intDecimalP = 2 Then     '' 時分
                                        dblValue = ((.RevoValue And &HFFFFFF00) >> 8)                       ''時
                                        dblValue = dblValue + (.RevoValue And &HFF) / (10 ^ intDecimalP)    ''時 + 分(小数点以下値)
                                    Else
                                        dblValue = .RevoValue
                                    End If

                                    If dblValue = 0 Then
                                        grdCHList(gCstChListColPosValueH, intRow).Value = ""
                                    Else
                                        grdCHList(gCstChListColPosValueH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                    End If
                                    'grdCHList(gCstChListColPosValueH, intRow).Value = dblValue.ToString(strDecimalFormat)

                                    ''Strig ---------------------------------------------------
                                    grdCHList(gCstChListColPosString, intRow).Value = .RevoString

                                    ''積算トリガCH(非表示) ------------------------------------
                                    grdCHList(gCstChListColPosTriggerCH, intRow).Value = .RevoTrigerChid

                                End If


                                '**************************************************************************************************************************************************************************
                                ''☆☆☆　PID  ☆☆☆☆☆☆☆☆☆☆
                                '**************************************************************************************************************************************************************************
                            Case gCstCodeChTypePID

                                Dim PidDatatype As Integer = Val(.udtChCommon.shtData.ToString)

                                ''EXT Group ---------------------------------------------------
                                grdCHList(gCstChListColPosExtGrHH, intRow).Value = IIf(.PidHiHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .PidHiHiExtGroup)                     'EXT.G HH
                                grdCHList(gCstChListColPosExtGrH, intRow).Value = IIf(.PidHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", .PidHiExtGroup)                          'EXT.G H
                                grdCHList(gCstChListColPosExtGrL, intRow).Value = IIf(.PidLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .PidLoExtGroup)                          'EXT.G L
                                grdCHList(gCstChListColPosExtGrLL, intRow).Value = IIf(.PidLoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", .PidLoLoExtGroup)                     'EXT.G LL
                                grdCHList(gCstChListColPosExtGrSF, intRow).Value = IIf(.PidSensorFailExtGroup = gCstCodeChAnalogExtGroupNothing, "", .PidSensorFailExtGroup)         'EXT.G SF

                                ''Delay -------------------------------------------------------
                                mFlagEventCancel = True
                                grdCHList(gCstChListColPosDelayHH, intRow).Value = IIf(.PidHiHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .PidHiHiDelay)                         'Delay HH
                                grdCHList(gCstChListColPosDelayH, intRow).Value = IIf(.PidHiDelay = gCstCodeChAnalogDelayTimerNothing, "", .PidHiDelay)                              'Delay H
                                grdCHList(gCstChListColPosDelayL, intRow).Value = IIf(.PidLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .PidLoDelay)                              'Delay L
                                grdCHList(gCstChListColPosDelayLL, intRow).Value = IIf(.PidLoLoDelay = gCstCodeChAnalogDelayTimerNothing, "", .PidLoLoDelay)                         'Delay LL
                                grdCHList(gCstChListColPosDelaySF, intRow).Value = IIf(.PidSensorFailDelay = gCstCodeChAnalogDelayTimerNothing, "", .PidSensorFailDelay)             'Delay SF
                                mFlagEventCancel = False

                                ''G Repose 1 --------------------------------------------------
                                grdCHList(gCstChListColPosGrep1HH, intRow).Value = IIf(.PidHiHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .PidHiHiGroupRepose1)         'G.Rep1 HH
                                grdCHList(gCstChListColPosGrep1H, intRow).Value = IIf(.PidHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .PidHiGroupRepose1)              'G.Rep1 H
                                grdCHList(gCstChListColPosGrep1L, intRow).Value = IIf(.PidLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .PidLoGroupRepose1)              'G.Rep1 L
                                grdCHList(gCstChListColPosGrep1LL, intRow).Value = IIf(.PidLoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing, "", .PidLoLoGroupRepose1)         'G.Rep1 LL

                                ''G Repose 2 --------------------------------------------------
                                grdCHList(gCstChListColPosGrep2HH, intRow).Value = IIf(.PidHiHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .PidHiHiGroupRepose2)         'G.Rep2 HH
                                grdCHList(gCstChListColPosGrep2H, intRow).Value = IIf(.PidHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .PidHiGroupRepose2)              'G.Rep2 H
                                grdCHList(gCstChListColPosGrep2L, intRow).Value = IIf(.PidLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .PidLoGroupRepose2)              'G.Rep2 L
                                grdCHList(gCstChListColPosGrep2LL, intRow).Value = IIf(.PidLoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing, "", .PidLoLoGroupRepose2)         'G.Rep2 LL

                                'S Signal
                                '操作なし

                                ''Fu Address --------------------------------------------------
                                Dim intFuNoAnalog As Integer = .udtChCommon.shtFuno     ''Fu No
                                Dim intPortNoAnalog As Integer = .udtChCommon.shtPortno ''Port No
                                Dim intPinAnalog As Integer = .udtChCommon.shtPin       ''Pin

                                grdCHList(gCstChListColPosFuAddress, intRow).Value = gFuAddress(intFuNoAnalog)
                                grdCHList(gCstChListColPosPortAddress, intRow).Value = gFuAddressPort(intPortNoAnalog)
                                grdCHList(gCstChListColPosPinAddress, intRow).Value = gFuAddressPin(intPinAnalog, PidDatatype)


                                ''Data Type ---------------------------------------------------
                                grdCHList(gCstChListColPosDataType, intRow).Value = .udtChCommon.shtData.ToString

                                ''Decimal Position --------------------------------------------
                                intDecimalP = .PidDecimalPosition
                                strDecimalFormat = "0.".PadRight(intDecimalP + 2, "0"c)


                                'Range -------------------------------------------------------
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypePID_3_Pt100_2 Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypePID_4_Pt100_3 Then
                                    'Pt100 2線式,Pt100 3線式

                                    'Range Type 種別コード
                                    mFlagEventCancel = True
                                    grdCHList(gCstChListColPosRangeType, intRow).Value = .PidRangeType.ToString
                                    mFlagEventCancel = False

                                    '文字列を分解してRangLowとRangeHighにセット
                                    strValue = grdCHList(gCstChListColPosRangeType, intRow).FormattedValue  'Range Type
                                    If strValue <> "" Then

                                        strValue = strValue.Replace(" - ", "/")
                                        p = strValue.LastIndexOf("/")

                                        grdCHList(gCstChListColPosRangeLo, intRow).Value = (Val(Double.Parse(strValue.Substring(0, p))).ToString(strDecimalFormat))   'Range Low
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = (Val(Double.Parse(strValue.Substring(p + 1))).ToString(strDecimalFormat))  'Range Hi
                                    Else
                                        'Range Type(2,3線式)
                                        'dblLowValue = .PidRangeLow
                                        dblLowValue = .PidRangeLow / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeLo, intRow).Value = dblLowValue.ToString(strDecimalFormat)

                                        'dblHiValue = .PidRangeHigh
                                        dblHiValue = .PidRangeHigh / (10 ^ intDecimalP)
                                        grdCHList(gCstChListColPosRangeHi, intRow).Value = dblHiValue.ToString(strDecimalFormat)
                                    End If


                                    grdCHList(gCstChListColPosDecimalPoint, intRow).Value = .PidDecimalPosition

                                Else
                                    'Range (K, 1-5V, 4-20mA)
                                    dblLowValue = .PidRangeLow / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosRangeLo, intRow).Value = dblLowValue.ToString(strDecimalFormat) ''Range Low

                                    dblHiValue = .PidRangeHigh / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosRangeHi, intRow).Value = dblHiValue.ToString(strDecimalFormat)  ''Range Hi
                                End If


                                ''Value -------------------------------------------------------
                                intValue = 0
                                If .PidHiHiUse = 0 Then      ''Use HH アラーム無し
                                    grdCHList(gCstChListColPosValueHH, intRow).Value = ""
                                Else
                                    dblValue = .PidHiHiValue / (10 ^ intDecimalP)    ''Value HH
                                    grdCHList(gCstChListColPosValueHH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .PidHiUse = 0 Then        ''Use H  アラーム無し
                                    grdCHList(gCstChListColPosValueH, intRow).Value = ""
                                Else
                                    dblValue = .PidHiValue / (10 ^ intDecimalP)      ''Value H
                                    grdCHList(gCstChListColPosValueH, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .PidLoUse = 0 Then        ''Use L  アラーム無し
                                    grdCHList(gCstChListColPosValueL, intRow).Value = ""
                                Else
                                    dblValue = .PidLoValue / (10 ^ intDecimalP)      ''Value L
                                    grdCHList(gCstChListColPosValueL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .PidLoLoUse = 0 Then      ''Use LL アラーム無し
                                    grdCHList(gCstChListColPosValueLL, intRow).Value = ""
                                Else
                                    dblValue = .PidLoLoValue / (10 ^ intDecimalP)    ''Value LL
                                    grdCHList(gCstChListColPosValueLL, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                'ｾﾝｻｰﾌｪｲﾙ Over Under対応
                                Dim intSFbit As Integer = 0
                                Dim intSFval As Integer = 0
                                '>>> Use NotUse
                                intSFval = .PidSensorFailUse

                                If intSFval > 0 Then
                                    intSFbit = gBitSet(intSFbit, 1, gBitCheck(.PidDisplay3, 1))
                                    intSFbit = gBitSet(intSFbit, 2, gBitCheck(.PidDisplay3, 2))
                                    If intSFbit = 6 Then        '' UNDER/OVER両方設定あり
                                        intSFbit = 1
                                    ElseIf intSFbit = 4 Then    '' OVERのみの場合は番号差替
                                        intSFbit = 3
                                    End If
                                End If

                                '値ｾｯﾄ
                                grdCHList(gCstChListColPosValueSF, intRow).Value = intSFbit.ToString   ''Value SF <-- use



                                ''Lo Normal /  Hi Normal -------------------------------------
                                If .PidNormalLow = gCstCodeChAlalogNormalRangeNothingLo Then
                                    grdCHList(gCstChListColPosNormalLo, intRow).Value = ""
                                Else
                                    dblValue = .PidNormalLow / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosNormalLo, intRow).Value = dblValue.ToString(strDecimalFormat)
                                End If

                                If .PidNormalHigh = gCstCodeChAlalogNormalRangeNothingHi Then
                                    grdCHList(gCstChListColPosNormalHi, intRow).Value = ""
                                Else
                                    dblValue2 = .PidNormalHigh / (10 ^ intDecimalP)
                                    grdCHList(gCstChListColPosNormalHi, intRow).Value = dblValue2.ToString(strDecimalFormat)
                                End If

                                ''Status -----------------------------------------------------
                                If .udtChCommon.shtStatus <> gCstCodeChManualInputStatus Then
                                    Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                    cmbStatus.SelectedValue = .udtChCommon.shtStatus.ToString
                                    grdCHList(gCstChListColPosStatusIn, intRow).Value = cmbStatus.Text
                                Else
                                    '手入力ｽﾃｰﾀｽの場合、その値編集してをｽﾃｰﾀｽへ表示
                                    Dim strManuStatus As String = ""
                                    strManuStatus = fnGetManuSTATUS(mChDataGroup(i))
                                    grdCHList(gCstChListColPosStatusIn, intRow).Value = strManuStatus
                                    grdCHList(gCstChListColPosStaNmHH, intRow).Value = gGetString(.PidHiHiStatusInput)   ''特殊コード対応
                                    grdCHList(gCstChListColPosStaNmH, intRow).Value = gGetString(.PidHiStatusInput)
                                    grdCHList(gCstChListColPosStaNmL, intRow).Value = gGetString(.PidLoStatusInput)
                                    grdCHList(gCstChListColPosStaNmLL, intRow).Value = gGetString(.PidLoLoStatusInput)
                                End If

                                ''Off Set ----------------------------------------------------
                                grdCHList(gCstChListColPosOffset, intRow).Value = .PidOffsetValue

                                ''Unit -------------------------------------------------------
                                If .udtChCommon.shtUnit <> gCstCodeChManualInputUnit Then
                                    cmbUnit.SelectedValue = .udtChCommon.shtUnit.ToString
                                    grdCHList(gCstChListColPosUnit, intRow).Value = cmbUnit.Text
                                Else
                                    grdCHList(gCstChListColPosUnit, intRow).Value = gGetString(.udtChCommon.strUnit)         ''特殊コード対応
                                End If

                                ''Strig　-----------------------------------------------------
                                grdCHList(gCstChListColPosString, intRow).Value = .PidString

                                ''Center Graph <-- display3 ----------------------------------
                                grdCHList(gCstChListColPosCenterGraph, intRow).Value = IIf(gBitCheck(.PidDisplay3, 0), True, False)


                                ''Power Factor------------------------------------------------ T.Ueki 2016/11/28
                                Dim strPFFlg As String = IIf(gBitCheck(.udtChCommon.shtFlag1, 5), "1", "0")
                                Dim strPSDFlg As String = IIf(gBitCheck(.udtChCommon.shtFlag1, 8), "1", "0")
                                'Ver2.0.7.9 AF対応
                                Dim strAFDFlg As String = IIf(gBitCheck(.udtChCommon.shtFlag1, 9), "1", "0")


                                If strPFFlg = "1" Then
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "1"
                                ElseIf strPSDFlg = "1" Then
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "2"

                                    'Ver2.0.7.9 AF対応
                                ElseIf strAFDFlg = "1" Then
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "3"
                                Else
                                    grdCHList(gCstChListPowerFactorRow, intRow).Value = "0"
                                End If


                                'PID
                                grdCHList(gCstChListColPosDoStart, intRow).Value = gFuAddress(.PidOutFuNo)
                                grdCHList(gCstChListColPosPortDoStart, intRow).Value = gFuAddressPort(.PidOutPortNo)
                                grdCHList(gCstChListColPosPinDoStart, intRow).Value = gFuAddressPin(.PidOutPin, 0)
                                grdCHList(gCstChListColPosBitCount, intRow).Value = .PidOutPinNo
                                ' 3点　対応列が無い為強制で別の行に格納
                                grdCHList(gCstChListColPosEccFunc, intRow).Value = .PidOutMode
                                grdCHList(gCstChListColPosFilterCoef, intRow).Value = .PidCasMode
                                grdCHList(gCstChListColPosComposite, intRow).Value = .PidSpTracking


                                'PID DEF 8点 対応列が無いため、強制で別の行に格納
                                'grdCHList(gCstChListColPosDoStatus1, intRow).Value = (.PidDefSpHigh / 10).ToString("0.0")
                                dblValue = .PidDefSpHigh / (10 ^ intDecimalP)
                                grdCHList(gCstChListColPosDoStatus1, intRow).Value = dblValue.ToString(strDecimalFormat)
                                'grdCHList(gCstChListColPosDoStatus2, intRow).Value = (.PidDefSpLow / 10).ToString("0.0")
                                dblValue = .PidDefSpLow / (10 ^ intDecimalP)
                                grdCHList(gCstChListColPosDoStatus2, intRow).Value = dblValue.ToString(strDecimalFormat)

                                grdCHList(gCstChListColPosDoStatus3, intRow).Value = (.PidDefMvHigh / 10).ToString("0.0")
                                grdCHList(gCstChListColPosDoStatus4, intRow).Value = (.PidDefMvLow / 10).ToString("0.0")
                                grdCHList(gCstChListColPosDoStatus5, intRow).Value = (.PidDefPB / 10).ToString("0.0")
                                grdCHList(gCstChListColPosDoStatus6, intRow).Value = (.PidDefTI / 10).ToString("0.0")
                                grdCHList(gCstChListColPosDoStatus7, intRow).Value = (.PidDefTD / 10).ToString("0.0")
                                grdCHList(gCstChListColPosDoStatus8, intRow).Value = (.PidDefGAP / 10).ToString("0.0")
                                'PID EXT 5x4=20点 対応列が無いため、強制で別の行に格納
                                '1
                                grdCHList(gCstChListColPosOutExtgH, intRow).Value = (.PidExtPara1 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosOutDelayH, intRow).Value = (.PidExtParaHigh1 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosOutGrep1H, intRow).Value = (.PidExtParaLow1 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosOutGrep2H, intRow).Value = .PidExtParaName1
                                grdCHList(gCstChListColPosAlarmTimeup, intRow).Value = .PidExtParaUnit1
                                '2
                                grdCHList(gCstChListColPosOutSp1, intRow).Value = (.PidExtPara2 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosOutSp2, intRow).Value = (.PidExtParaHigh2 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosOutHys1, intRow).Value = (.PidExtParaLow2 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosOutHys2, intRow).Value = .PidExtParaName2
                                grdCHList(gCstChListColPosOutSt, intRow).Value = .PidExtParaUnit2
                                '3
                                grdCHList(gCstChListColPosOutVar, intRow).Value = (.PidExtPara3 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosOutStatusH, intRow).Value = (.PidExtParaHigh3 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosCompositeIndex, intRow).Value = (.PidExtParaLow3 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosTriggerCH, intRow).Value = .PidExtParaName3
                                grdCHList(gCstChListColPosPinAiTerm, intRow).Value = .PidExtParaUnit3
                                '4
                                grdCHList(gCstChListColPosStaNmSF, intRow).Value = (.PidExtPara4 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosPortBitCount, intRow).Value = (.PidExtParaHigh4 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosPinBitCount, intRow).Value = (.PidExtParaLow4 / 10).ToString("0.0")
                                grdCHList(gCstChListColPosAiTerm, intRow).Value = .PidExtParaName4
                                grdCHList(gCstChListColPosPortAiTerm, intRow).Value = .PidExtParaUnit4

                                '仮設定機能対応(アナログ=PID)
                                Call Temporary_setup(1, i, intRow, 1)

                        End Select

                    End If

                End With

            Next

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub


    'Ver2.0.1.2 アナログ時マニュアル入力されたSTATUSを自動で割り振る関数
    Private Sub subSetManuSTATUS(pi As Integer)
        Dim strManuSTATUS As String = ""
        Dim bABN As Boolean = False
        Dim i As Integer = 0

        'Status空白は本関数には入ってこないので考慮しない。

        With grdCHList.Rows(pi)
            strManuSTATUS = .Cells(gCstChListColPosStatusIn).Value

            'HH,H,L,LLクリア
            .Cells(gCstChListColPosStaNmHH).Value = ""
            .Cells(gCstChListColPosStaNmH).Value = ""
            .Cells(gCstChListColPosStaNmL).Value = ""
            .Cells(gCstChListColPosStaNmLL).Value = ""


            'STATUSを分割
            Dim strSTATUSs() As String
            strSTATUSs = strManuSTATUS.Split("/")

            'NORが含まれていないならエラー
            'Ver2.0.7.M (保安庁)"正常"が含まれていない場合エラー
            bABN = True
            For i = 0 To UBound(strSTATUSs) Step 1
                If strSTATUSs(i) = "NOR" Then
                    bABN = False
                    Exit For
                End If
                If strSTATUSs(i) = "正常" Then
                    bABN = False
                    Exit For
                End If
            Next i
            If bABN = True Then
                .Cells(gCstChListColPosStaNmHH).Value = ""
                .Cells(gCstChListColPosStaNmH).Value = ""
                .Cells(gCstChListColPosStaNmL).Value = ""
                .Cells(gCstChListColPosStaNmLL).Value = ""
                '
                .Cells(gCstChListColPosStatusIn).Value = ""
                MessageBox.Show("Manual Status Input Data Error", Me.Text, MessageBoxButtons.OK, MessageBoxIcon.Warning)
                Return
            End If


            'Ver2.0.7.M (保安庁)"NOR"は保安庁では"正常"表記
            Select Case UBound(strSTATUSs)
                Case 1
                    'If strSTATUSs(0) = "NOR" Then
                    If strSTATUSs(0) = "NOR" Or strSTATUSs(0) = "正常" Then
                        '値は、H or HH
                        If NZf(.Cells(gCstChListColPosExtGrHH).Value) = "" Then
                            'HHに値が設定されてないなら、強制Hへ格納
                            .Cells(gCstChListColPosStaNmH).Value = strSTATUSs(1)
                        Else
                            'HHに値が設定されてるならば、強制でHHへ格納
                            .Cells(gCstChListColPosStaNmHH).Value = strSTATUSs(1)
                        End If
                    Else
                        '値は、L or LL
                        If NZf(.Cells(gCstChListColPosExtGrLL).Value) = "" Then
                            'LLに値が設定されてないなら、強制Lへ格納
                            .Cells(gCstChListColPosStaNmL).Value = strSTATUSs(0)
                        Else
                            'LLに値が設定されてるならば、強制でLLへ格納
                            .Cells(gCstChListColPosStaNmLL).Value = strSTATUSs(0)
                        End If
                    End If
                Case 2
                    'If strSTATUSs(0) = "NOR" Then
                    If strSTATUSs(0) = "NOR" Or strSTATUSs(0) = "正常" Then
                        '値は、H,HH決定
                        .Cells(gCstChListColPosStaNmH).Value = strSTATUSs(1)
                        .Cells(gCstChListColPosStaNmHH).Value = strSTATUSs(2)
                    Else
                        'If strSTATUSs(1) = "NOR" Then
                        If strSTATUSs(1) = "NOR" Or strSTATUSs(1) = "正常" Then
                            '値は、HH or H,L or LL となる
                            'H系
                            'H or HH
                            If NZf(.Cells(gCstChListColPosExtGrHH).Value) = "" Then
                                'HHに値が設定されてないなら、強制Hへ格納
                                .Cells(gCstChListColPosStaNmH).Value = strSTATUSs(2)
                            Else
                                'HHに値が設定されてるならば、強制でHHへ格納
                                .Cells(gCstChListColPosStaNmHH).Value = strSTATUSs(2)
                            End If
                            'L系
                            'L or LL
                            If NZf(.Cells(gCstChListColPosExtGrLL).Value) = "" Then
                                'LLに値が設定されてないなら、強制Lへ格納
                                .Cells(gCstChListColPosStaNmL).Value = strSTATUSs(0)
                            Else
                                'LLに値が設定されてるならば、強制でLLへ格納
                                .Cells(gCstChListColPosStaNmLL).Value = strSTATUSs(0)
                            End If

                        Else
                            '値は、L,LL決定
                            .Cells(gCstChListColPosStaNmLL).Value = strSTATUSs(0)
                            .Cells(gCstChListColPosStaNmL).Value = strSTATUSs(1)
                        End If
                    End If
                Case 3
                    'If strSTATUSs(0) = "NOR" Then
                    If strSTATUSs(0) = "NOR" Or strSTATUSs(0) = "正常" Then
                        'データが変
                        bABN = True
                    Else
                        'If strSTATUSs(1) = "NOR" Then
                        If strSTATUSs(1) = "NOR" Or strSTATUSs(1) = "正常" Then
                            '値は、LLorL,H,HH となる
                            'L系
                            'L or LL
                            If NZf(.Cells(gCstChListColPosExtGrLL).Value) = "" Then
                                'LLに値が設定されてないなら、強制Lへ格納
                                .Cells(gCstChListColPosStaNmL).Value = strSTATUSs(0)
                            Else
                                'LLに値が設定されてるならば、強制でLLへ格納
                                .Cells(gCstChListColPosStaNmLL).Value = strSTATUSs(0)
                            End If
                            'H系
                            .Cells(gCstChListColPosStaNmH).Value = strSTATUSs(2)
                            .Cells(gCstChListColPosStaNmHH).Value = strSTATUSs(3)
                        Else
                            'If strSTATUSs(2) = "NOR" Then
                            If strSTATUSs(2) = "NOR" Or strSTATUSs(2) = "正常" Then
                                '値は、LL,L,HorHHとなる
                                'L系
                                .Cells(gCstChListColPosStaNmLL).Value = strSTATUSs(0)
                                .Cells(gCstChListColPosStaNmL).Value = strSTATUSs(1)
                                'H系
                                'H or HH
                                If NZf(.Cells(gCstChListColPosExtGrHH).Value) = "" Then
                                    'HHに値が設定されてないなら、強制Hへ格納
                                    .Cells(gCstChListColPosStaNmH).Value = strSTATUSs(3)
                                Else
                                    'HHに値が設定されてるならば、強制でHHへ格納
                                    .Cells(gCstChListColPosStaNmHH).Value = strSTATUSs(3)
                                End If
                            Else
                                '値は、変
                                bABN = True
                            End If
                        End If
                    End If
                Case 4
                    '値は、順にLL,L,H,HHとする
                    'If strSTATUSs(2) = "NOR" Then
                    If strSTATUSs(2) = "NOR" Or strSTATUSs(2) = "正常" Then
                        .Cells(gCstChListColPosStaNmLL).Value = strSTATUSs(0)
                        .Cells(gCstChListColPosStaNmL).Value = strSTATUSs(1)
                        .Cells(gCstChListColPosStaNmH).Value = strSTATUSs(3)
                        .Cells(gCstChListColPosStaNmHH).Value = strSTATUSs(4)
                    Else
                        '値は変
                        bABN = True
                    End If
                Case Else
                    '分割数が1、６以上はデータが変とする。
                    bABN = True
            End Select

            'データが変ならその旨表示
            If bABN = True Then
                .Cells(gCstChListColPosStaNmHH).Value = ""
                .Cells(gCstChListColPosStaNmH).Value = ""
                .Cells(gCstChListColPosStaNmL).Value = ""
                .Cells(gCstChListColPosStaNmLL).Value = ""
                '
                .Cells(gCstChListColPosStatusIn).Value = ""
                MessageBox.Show("Manual Status Input Data Error", Me.Text, MessageBoxButtons.OK, MessageBoxIcon.Warning)
                Return
            End If

        End With
    End Sub

    'Ver2.0.2.6 アナログCHのステータスとセット値関係処理関数
    Private Function fnAnalogStatusAlarmRel(pstrValue As String, pintROW As Integer) As Integer
        Dim intValue As Integer = 0
        Dim strCboText As String = ""
        Dim strStatusS() As String

        Dim strHHstatus As String = ""
        Dim strHstatus As String = ""
        Dim strLstatus As String = ""
        Dim strLLstatus As String = ""

        '>>>ステータスの格納
        'ｽﾃｰﾀｽ名称を取得
        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
        intValue = cmbStatus.FindStringExact(pstrValue)
        cmbStatus.SelectedIndex = intValue
        strCboText = cmbStatus.Text

        '「*」ならそのまま戻る
        If strCboText = "*" Then
            Return 0
        End If

        'ｽﾃｰﾀｽを「/」で区切る
        strStatusS = strCboText.Split("/")

        'STATUSを該当箇所へ格納
        For i As Integer = 0 To UBound(strStatusS) Step 1
            'Ver2.0.8.2 保安庁対応
            Select Case strStatusS(i)
                Case "HH", "高高"
                    strHHstatus = strStatusS(i)
                Case "HIGH", "H", "EH", "高"
                    strHstatus = strStatusS(i)
                Case "LOW", "L", "EL", "低"
                    strLstatus = strStatusS(i)
                Case "LL", "低低"
                    strLLstatus = strStatusS(i)
            End Select
        Next i

        '>>>アラームの有り無し格納
        Dim blHHuse As Boolean = False
        Dim blHuse As Boolean = False
        Dim blLuse As Boolean = False
        Dim blLLuse As Boolean = False

        Dim strEx As String = ""
        Dim strDly As String = ""
        Dim strGR1 As String = ""
        Dim strGR2 As String = ""

        With grdCHList.Rows(pintROW)
            '>>HH
            strEx = NZf(.Cells(gCstChListColPosExtGrHH).Value)
            strDly = NZf(.Cells(gCstChListColPosDelayHH).Value)
            strGR1 = NZf(.Cells(gCstChListColPosGrep1HH).Value)
            strGR2 = NZf(.Cells(gCstChListColPosGrep2HH).Value)
            If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
            Else
                blHHuse = True
            End If
            '>>H
            strEx = NZf(.Cells(gCstChListColPosExtGrH).Value)
            strDly = NZf(.Cells(gCstChListColPosDelayH).Value)
            strGR1 = NZf(.Cells(gCstChListColPosGrep1H).Value)
            strGR2 = NZf(.Cells(gCstChListColPosGrep2H).Value)
            If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
            Else
                blHuse = True
            End If
            '>>L
            strEx = NZf(.Cells(gCstChListColPosExtGrL).Value)
            strDly = NZf(.Cells(gCstChListColPosDelayL).Value)
            strGR1 = NZf(.Cells(gCstChListColPosGrep1L).Value)
            strGR2 = NZf(.Cells(gCstChListColPosGrep2L).Value)
            If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
            Else
                blLuse = True
            End If
            '>>LL
            strEx = NZf(.Cells(gCstChListColPosExtGrLL).Value)
            strDly = NZf(.Cells(gCstChListColPosDelayLL).Value)
            strGR1 = NZf(.Cells(gCstChListColPosGrep1LL).Value)
            strGR2 = NZf(.Cells(gCstChListColPosGrep2LL).Value)
            If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
            Else
                blLLuse = True
            End If
        End With


        '>>>判定
        'ｱﾗｰﾑ値が全て無いなら、そのまま
        If blHHuse = False And blHuse = False And blLuse = False And blLLuse = False Then
            Return 0
        End If

        '1件でも矛盾があれば-1で戻る
        '>>HH
        If strHHstatus = "" And blHHuse = True Then
            Return -1
        End If
        If strHHstatus <> "" And blHHuse = False Then
            Return -1
        End If
        '>>H
        If strHstatus = "" And blHuse = True Then
            Return -1
        End If
        If strHstatus <> "" And blHuse = False Then
            Return -1
        End If
        '>>L
        If strLstatus = "" And blLuse = True Then
            Return -1
        End If
        If strLstatus <> "" And blLuse = False Then
            Return -1
        End If
        '>>LL
        If strLLstatus = "" And blLLuse = True Then
            Return -1
        End If
        If strLLstatus <> "" And blLLuse = False Then
            Return -1
        End If


        Return 0
    End Function

    '--------------------------------------------------------------------
    ' 機能      : データの保存処理を行う
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : 一覧の情報をグループの構造体にセットした後グローバル構造体を更新する
    '--------------------------------------------------------------------
    Private Function mSaveChData() As Boolean

        Try
            'Ver2.0.0.2 重度でも注意でもエラーがあった場合のエラーﾀﾞｲｱﾛｸﾞ消去
            frmChListWarning.Close()

            Dim icnt As Integer = 0

            Dim intCHCount As Integer = 0
            Dim intCol As Integer = 0

            Dim blnCautFlg As Boolean = True
            Dim blnSaveOKFlg As Boolean = True
            Dim blnChkFlg As Integer

            '保存前のチェック
            For intCHCount = 0 To gCstOneGroupChannelMax - 1

                'Ver2.0.0.2 南日本M761対応 2017.02.27変更
                'For intCol = 0 To gCstChListColPosDecimalPoint
                For intCol = 0 To gCstChListColPosFlagMotorColor  '' 116→117 ver2.0.8.C 2018.11.14

                    gChkChList(intCol) = grdCHList(intCol, intCHCount).Value

                Next

                blnChkFlg = SetInputDataChk(gChkChList, intCHCount)

                'どこか一か所でもエラーが発生した場合確実に保存しない
                If blnChkFlg = 20 Then
                    blnSaveOKFlg = False
                End If

                If blnChkFlg = 10 Then
                    blnCautFlg = False
                End If

            Next


            If blnSaveOKFlg = False Then
                'Ver2.0.0.7 エラーが発生しても止めない(警告と同様にする)
                'MsgBox("Modify There are items you need." & vbCr & "修正が必要な項目があります。", MsgBoxStyle.Exclamation, "Input error")
                blnSaveOKFlg = True
                blnCautFlg = False
            End If

            If blnSaveOKFlg = True And blnCautFlg = False Then
                'Ver2.0.0.2 2016.12.09 Yesで保存するように変更
                Dim result As DialogResult = MessageBox.Show("There is a note item. Do you want it to be saved?" & vbCr & "修正/確認項目があります。強制保存しますか?", "QUESTION", MessageBoxButtons.YesNo, _
                                                             MessageBoxIcon.Exclamation, MessageBoxDefaultButton.Button2)

                If result = DialogResult.No Then
                    blnSaveOKFlg = False
                ElseIf result = DialogResult.Yes Then
                    '何もしない
                End If
            End If

            '■Ver2.0.0.2 重度でも注意でもエラーがあった場合はエラーﾀﾞｲｱﾛｸﾞ表示
            If blnSaveOKFlg = False Then
                frmChListWarning.Show()
                Me.Focus()
            End If

            If blnSaveOKFlg = True Then

                ''一覧の情報をグループの構造体へ更新する =====
                Call mSetStructureGroup()
                ''============================================

                ''データクリア
                Call gInitSetChannelDisp(gudt.SetChInfo)

                ''グループの構造体をグローバル構造体にマージする
                Dim wkChDataGroup(gCstOneGroupChannelMax - 1) As gTypSetChRec

                For i As Integer = 1 To gCstChannelGroupMax

                    wkChDataGroup = mudtChannelGroup.udtGroup(i - 1).udtChannelData

                    For j As Integer = 0 To gCstOneGroupChannelMax - 1

                        If wkChDataGroup(j).udtChCommon.shtChType <> gCstCodeChTypeNothing Then

                            ''======================================================================================
                            gudt.SetChInfo.udtChannel(icnt) = wkChDataGroup(j)              ''チャンネル情報セット
                            ''======================================================================================

                            icnt += 1

                        End If

                    Next j

                Next i

                ''現状のメモリ更新 -------------------------------------------
                mFlagFirst = True

                ''チャンネルグループ情報取得
                Call gMakeChannelGroupData(gudt.SetChInfo, mudtChannelGroup)

                ''チャネルの最大数を確認する
                Call mGetChannelMax(gudt.SetChInfo.udtChannel)

                ''選択済みグループの情報をGET
                mChDataGroup = mudtChannelGroup.udtGroup(mSelectGroupIndex).udtChannelData

                ''保存時に前回の値を参照したい場合の為にバックアップを作成(参照渡しにならないようにLOOPでCOPY)
                For i As Integer = 0 To gCstOneGroupChannelMax - 1
                    mChDataGroupBK(i) = mudtChannelGroup.udtGroup(mSelectGroupIndex).udtChannelData(i)
                Next

                mFlagSave = True
                mFlagChange = False
                mFlagFirst = False

                mSaveChData = True

            Else
                mSaveChData = False
            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納(保存処理）
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : グリッドの値をグループ毎の構造体に格納する
    '--------------------------------------------------------------------
    Private Sub mSetStructureGroup()

        Try

            Dim intFuNo As Integer, intPortNo As Integer, intPin As Integer, intPinNo As Integer
            Dim strValue As String = ""
            Dim intValue As Integer, icnt As Integer = 0
            Dim lngValue As Long
            Dim p As Integer, intDecimalP As Integer
            Dim lngLowValue As Long = 0, lngHiValue As Long = 0
            Dim intFuNoIn As Integer, intPortNoIn As Integer, intPinIn As Integer, intPinNoIn As Integer
            Dim intFuNoOutMotor As Integer, intPortNoOutMotor As Integer, intPinOutMotor As Integer, intPinNoOutMotor As Integer
            Dim intFuNoOutValveDiDo As Integer, intPortNoOutValveDiDo As Integer, intPinOutValveDiDo As Integer, intPinNoOutValveDiDo As Integer
            Dim intFuNoOutValveAiDo As Integer, intPortNoOutValveAiDo As Integer, intPinOutValveAiDo As Integer, intPinNoOutValveAiDo As Integer
            Dim intFuNoOutValveAiAo As Integer, intPortNoOutValveAiAo As Integer, intPinOutValveAiAo As Integer, intPinNoOutValveAiAo As Integer
            Dim intRow As Integer = 0   ''グループ内 行番号
            Dim intIndex As Integer = 0 ''グループ内 構造体インデックス
            Dim intChNo As Integer = 0, intChNoBefore As Integer = 0, intChTypeBefore As Integer = 0
            Dim blnCopyRow As Boolean = False   ''True: COPYで作成された行
            Dim p1 As Integer = 0   '' 2012.03.23
            Dim inMRsetBF As Integer = 0    'Ver2.0.2.7

            Dim bALflg As Boolean = False

            'Ver2.0.7.B 行コピペ時のCHIDを退避
            Dim intCHID As Integer = 0


            For intRow = 0 To gCstOneGroupChannelMax - 1    ''全ての行数分 Loop

                intIndex = IIf(IsNumeric(grdCHList(gCstChListColPosIndex, intRow).Value), grdCHList(gCstChListColPosIndex, intRow).Value, -1)   ''前回保存　構造体インデックス　0～99
                intChNoBefore = 0 : intChTypeBefore = 0

                ''blnCopyRow <-- True : COPYで作成された行 
                blnCopyRow = IIf(IsNumeric(grdCHList(gCstChListColPosCopyRow, intRow).Value), True, False)

                With mChDataGroup(intRow)

                    ''CH が設定されていない場合 or コピーされた場合
                    If grdCHList(gCstChListColPosChType, intRow).Value = gCstCodeChTypeNothing Or blnCopyRow Then

                        If intIndex <> -1 Then  ''前回は存在したか？

                            ''今回は設定なしだが、前はデジタルコンポジットCHではなかったか？
                            If mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeComposite Then

                                ''削除するデジタルコンポジット設定テーブルインデックスGET
                                intValue = mChDataGroupBK(intIndex).CompositeTableIndex
                                If intValue > 0 Then
                                    '▼▼▼ 20110530 コンポジットテーブルの内容ごとクリア ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                    Call gInitSetCompositeRec(gudt.SetChComposite.udtComposite(intValue - 1))
                                    '----------------------------------------------------------------------------------
                                    'gudt.SetChComposite.udtComposite(intValue - 1).shtChid = 0   ''CH クリア
                                    '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
                                End If

                            End If

                            ''今回は設定なしだが、前はバルブのDiDoではなかったか？
                            If mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeValve Then

                                If mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then

                                    ''削除するデジタルコンポジット設定テーブルインデックスGET
                                    intValue = mChDataGroupBK(intIndex).ValveCompositeTableIndex
                                    If intValue > 0 Then
                                        '▼▼▼ 20110530 コンポジットテーブルの内容ごとクリア ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                        Call gInitSetCompositeRec(gudt.SetChComposite.udtComposite(intValue - 1))
                                        '----------------------------------------------------------------------------------
                                        'gudt.SetChComposite.udtComposite(intValue - 1).shtChid = 0   ''CH クリア
                                        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
                                    End If

                                End If

                            End If

                        End If

                        ''データクリア ------------------------------------
                        Call gInitSetChannelDispOne(mChDataGroup(intRow))
                        ''-------------------------------------------------

                        ''今回はなしで、前回値が存在した場合(チャンネルを削除)は、Cable Markもクリア
                        If intIndex >= 0 Then

                            If mChDataGroupBK(intIndex).udtChCommon.shtChno <> 0 Then

                                ''入力側FUアドレス
                                intFuNo = mChDataGroupBK(intIndex).udtChCommon.shtFuno
                                intPortNo = mChDataGroupBK(intIndex).udtChCommon.shtPortno
                                intPin = mChDataGroupBK(intIndex).udtChCommon.shtPin
                                intPinNo = mChDataGroupBK(intIndex).udtChCommon.shtPinNo

                                If intFuNo <> gCstCodeChCommonFuNoNothing And intPortNo <> 0 And intPinNo <> 0 Then
                                    '' ケーブルマークの削除を中止    2013.11.28 
                                    'mClearCableMark(intFuNo, intPortNo, intPin, intPinNo)
                                End If

                                ''出力側FUアドレス
                                If mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeMotor Then

                                    intFuNo = mChDataGroupBK(intIndex).MotorFuNo
                                    intPortNo = mChDataGroupBK(intIndex).MotorPortNo
                                    intPin = mChDataGroupBK(intIndex).MotorPin
                                    intPinNo = mChDataGroupBK(intIndex).MotorPinNo

                                    If intFuNo <> gCstCodeChCommonFuNoNothing And intPortNo <> 0 And intPinNo <> 0 Then
                                        '' ケーブルマークの削除を中止    2013.11.28
                                        'mClearCableMark(intFuNo, intPortNo, intPin, intPinNo)
                                    End If

                                ElseIf mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeValve Then

                                    If mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Or _
                                       mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveDO Or _
                                       mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveExt Then

                                        intFuNo = mChDataGroupBK(intIndex).ValveDiDoFuNo
                                        intPortNo = mChDataGroupBK(intIndex).ValveDiDoPortNo
                                        intPin = mChDataGroupBK(intIndex).ValveDiDoPin
                                        intPinNo = mChDataGroupBK(intIndex).ValveDiDoPinNo

                                    ElseIf mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO1 Or _
                                           mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Then

                                        intFuNo = mChDataGroupBK(intIndex).ValveAiDoFuNo
                                        intPortNo = mChDataGroupBK(intIndex).ValveAiDoPortNo
                                        intPin = mChDataGroupBK(intIndex).ValveAiDoPin
                                        intPinNo = mChDataGroupBK(intIndex).ValveAiDoPinNo

                                    ElseIf mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO1 Or _
                                           mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Or _
                                           mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAO_4_20 Then

                                        intFuNo = mChDataGroupBK(intIndex).ValveAiAoFuNo
                                        intPortNo = mChDataGroupBK(intIndex).ValveAiAoPortNo
                                        intPin = mChDataGroupBK(intIndex).ValveAiAoPin
                                        intPinNo = mChDataGroupBK(intIndex).ValveAiAoPinNo

                                    Else
                                        intFuNo = gCstCodeChCommonFuNoNothing : intPortNo = 0 : intPin = 0 : intPinNo = 0
                                    End If

                                    If intFuNo <> gCstCodeChCommonFuNoNothing And intPortNo <> 0 And intPinNo <> 0 Then
                                        '' ケーブルマークの削除を中止    2013.11.28
                                        'mClearCableMark(intFuNo, intPortNo, intPin, intPinNo)
                                    End If

                                End If

                            End If

                        End If

                    End If

                    ''Copyで作成された行の場合、Copy元の前回構造体インデックスをセット
                    'If blnCopyRow Then intIndex = grdCHList(gCstChListColPosCopyRow, intRow).Value
                    If blnCopyRow Then
                        If NZfS(grdCHList(gCstChListColPosIndex, intRow).Value) <> "" Then
                            intIndex = grdCHList(gCstChListColPosIndex, intRow).Value
                        Else
                            intIndex = -1
                        End If
                    End If


                    ''CH が設定されている場合
                    If grdCHList(gCstChListColPosChType, intRow).Value <> gCstCodeChTypeNothing Then

                        ''データクリアをする前に前回値を退避しておく
                        If intIndex <> -1 Then
                            'Ver2.0.7.B 行コピペ時のCHIDを退避
                            'CHIDも退避
                            If blnCopyRow Then
                                intCHID = mChDataGroupBK(intIndex).udtChCommon.shtChid
                            Else
                                intCHID = 0
                            End If

                            ''CH No.を退避 --------------------------------
                            intChNoBefore = mChDataGroupBK(intIndex).udtChCommon.shtChno

                            ''CH Typeを退避 -------------------------------
                            intChTypeBefore = mChDataGroupBK(intIndex).udtChCommon.shtChType

                            'MR Setを退避
                            inMRsetBF = mChDataGroupBK(intIndex).udtChCommon.shtM_ReposeSet

                            ''FUアドレスを退避 ----------------------------
                            intFuNoIn = mChDataGroupBK(intIndex).udtChCommon.shtFuno
                            intPortNoIn = mChDataGroupBK(intIndex).udtChCommon.shtPortno
                            intPinIn = mChDataGroupBK(intIndex).udtChCommon.shtPin
                            intPinNoIn = mChDataGroupBK(intIndex).udtChCommon.shtPinNo

                            If mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeMotor Then
                                intFuNoOutMotor = mChDataGroupBK(intIndex).MotorFuNo
                                intPortNoOutMotor = mChDataGroupBK(intIndex).MotorPortNo
                                intPinOutMotor = mChDataGroupBK(intIndex).MotorPin
                                intPinNoOutMotor = mChDataGroupBK(intIndex).MotorPinNo
                            Else
                                intFuNoOutMotor = gCstCodeChNotSetFuNo
                                intPortNoOutMotor = gCstCodeChNotSetFuPort
                                intPinOutMotor = gCstCodeChNotSetFuPin
                                intPinNoOutMotor = 0
                            End If

                            If mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeValve Then

                                If mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Or _
                                   mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveDO Or _
                                   mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveExt Then
                                    intFuNoOutValveDiDo = mChDataGroupBK(intIndex).ValveDiDoFuNo
                                    intPortNoOutValveDiDo = mChDataGroupBK(intIndex).ValveDiDoPortNo
                                    intPinOutValveDiDo = mChDataGroupBK(intIndex).ValveDiDoPin
                                    intPinNoOutValveDiDo = mChDataGroupBK(intIndex).ValveDiDoPinNo
                                Else
                                    intFuNoOutValveDiDo = gCstCodeChNotSetFuNo
                                    intPortNoOutValveDiDo = gCstCodeChNotSetFuPort
                                    intPinOutValveDiDo = gCstCodeChNotSetFuPin
                                    intPinNoOutValveDiDo = 0
                                End If

                                If mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO1 Or _
                                   mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Then
                                    intFuNoOutValveAiDo = mChDataGroupBK(intIndex).ValveAiDoFuNo
                                    intPortNoOutValveAiDo = mChDataGroupBK(intIndex).ValveAiDoPortNo
                                    intPinOutValveAiDo = mChDataGroupBK(intIndex).ValveAiDoPin
                                    intPinNoOutValveAiDo = mChDataGroupBK(intIndex).ValveAiDoPinNo
                                Else
                                    intFuNoOutValveAiDo = gCstCodeChNotSetFuNo
                                    intPortNoOutValveAiDo = gCstCodeChNotSetFuPort
                                    intPinOutValveAiDo = gCstCodeChNotSetFuPin
                                    intPinNoOutValveAiDo = 0
                                End If

                                If mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO1 Or _
                                  mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Or _
                                  mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveAO_4_20 Then
                                    intFuNoOutValveAiAo = mChDataGroupBK(intIndex).ValveAiAoFuNo
                                    intPortNoOutValveAiAo = mChDataGroupBK(intIndex).ValveAiAoPortNo
                                    intPinOutValveAiAo = mChDataGroupBK(intIndex).ValveAiAoPin
                                    intPinNoOutValveAiAo = mChDataGroupBK(intIndex).ValveAiAoPinNo
                                Else
                                    intFuNoOutValveAiAo = gCstCodeChNotSetFuNo
                                    intPortNoOutValveAiAo = gCstCodeChNotSetFuPort
                                    intPinOutValveAiAo = gCstCodeChNotSetFuPin
                                    intPinNoOutValveAiAo = 0
                                End If

                            End If

                            ''デジタルコンポジット用 ----------------------

                            ''今はデジタルコンポジット以外だが、前はデジタルコンポジットではなかったか？
                            If Integer.Parse(grdCHList(gCstChListColPosChType, intRow).Value) <> gCstCodeChTypeComposite Then

                                If mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeComposite Then

                                    intValue = mChDataGroupBK(intIndex).CompositeTableIndex
                                    If intValue > 0 Then
                                        '▼▼▼ 20110530 コンポジットテーブルの内容ごとクリア ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                        Call gInitSetCompositeRec(gudt.SetChComposite.udtComposite(intValue - 1))
                                        '----------------------------------------------------------------------------------
                                        'gudt.SetChComposite.udtComposite(intValue - 1).shtChid = 0   ''CH クリア
                                        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
                                    End If

                                End If

                            End If

                            ''今はバルブのDiDo以外だが、前はバルブのDiDoではなかったか？
                            If Integer.Parse(grdCHList(gCstChListColPosChType, intRow).Value) = gCstCodeChTypeValve And _
                               grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDI_DO Then
                            Else

                                If mChDataGroupBK(intIndex).udtChCommon.shtChType = gCstCodeChTypeValve And _
                                   mChDataGroupBK(intIndex).udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then

                                    intValue = mChDataGroupBK(intIndex).ValveCompositeTableIndex
                                    If intValue > 0 Then
                                        '▼▼▼ 20110530 コンポジットテーブルの内容ごとクリア ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                        Call gInitSetCompositeRec(gudt.SetChComposite.udtComposite(intValue - 1))
                                        '----------------------------------------------------------------------------------
                                        'gudt.SetChComposite.udtComposite(intValue - 1).shtChid = 0   ''CH クリア
                                        '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
                                    End If

                                End If

                            End If

                        Else
                            'Ver2.0.7.B 行コピペ時のCHIDを退避
                            'CHID
                            intCHID = 0


                            intChNoBefore = 0
                            intChTypeBefore = 0

                            intFuNoIn = gCstCodeChCommonFuNoNothing
                            intPortNoIn = gCstCodeChCommonPortNoNothing
                            intPinIn = gCstCodeChCommonPinNothing
                            intPinNoIn = 0

                            intFuNoOutMotor = gCstCodeChCommonFuNoNothing
                            intPortNoOutMotor = gCstCodeChCommonPortNoNothing
                            intPinOutMotor = gCstCodeChCommonPinNothing
                            intPinNoOutMotor = 0

                            intFuNoOutValveDiDo = gCstCodeChCommonFuNoNothing
                            intPortNoOutValveDiDo = gCstCodeChCommonPortNoNothing
                            intPinOutValveDiDo = gCstCodeChCommonPinNothing
                            intPinNoOutValveDiDo = 0

                            intFuNoOutValveAiDo = gCstCodeChCommonFuNoNothing
                            intPortNoOutValveAiDo = gCstCodeChCommonPortNoNothing
                            intPinOutValveAiDo = gCstCodeChCommonPinNothing
                            intPinNoOutValveAiDo = 0

                            intFuNoOutValveAiAo = gCstCodeChCommonFuNoNothing
                            intPortNoOutValveAiAo = gCstCodeChCommonPortNoNothing
                            intPinOutValveAiAo = gCstCodeChCommonPinNothing
                            intPinNoOutValveAiAo = 0

                        End If

                        ''データクリア ----------------------------------
                        Call gInitSetChannelDispOne(mChDataGroup(intRow))
                        ''-----------------------------------------------

                        ''★ Common
                        intChNo = CCInt(grdCHList(gCstChListColPosChNo, intRow).Value)  ''CH No.

                        If mintChID(intRow) <> 0 Then

                            .udtChCommon.shtChid = mintChID(intRow) ''CH ID(設定済CH IDを戻す)

                            ''CH No.に変更があった場合はCH IDをクリアする
                            If intChNo <> intChNoBefore Then
                                .udtChCommon.shtChid = 0

                                Call ChIDSearch(intChNoBefore)
                            End If

                            'Ver2.0.7.B 行コピペ時のCHIDを退避
                            'CHIDをコピー元値に戻す
                            If blnCopyRow Then
                                .udtChCommon.shtChid = intCHID
                            End If

                        Else
                            ''新規
                            .udtChCommon.shtChid = 0    'CH IDは最後にセット
                            Call ChIDSearch(intChNoBefore)

                            'Ver2.0.7.B 行コピペ時のCHIDを退避
                            'CHIDをコピー元値に戻す
                            If blnCopyRow Then
                                .udtChCommon.shtChid = intCHID
                            End If
                        End If

                        .udtChCommon.shtGroupNo = mSelectGroupIndex + 1         ''Group No
                        .udtChCommon.shtDispPos = intRow + 1                    ''表示位置
                        .udtChCommon.shtChType = CCShort(grdCHList(gCstChListColPosChType, intRow).Value)  ''Type
                        .udtChCommon.shtSysno = CCShort(grdCHList(gCstChListColPosSysNo, intRow).Value)    ''SYS No
                        .udtChCommon.shtChno = CCUInt16(grdCHList(gCstChListColPosChNo, intRow).Value)     ''CH No
                        .udtChCommon.strChitem = grdCHList(gCstChListColPosItemName, intRow).Value         ''Item
                        .udtChCommon.strRemark = grdCHList(gCstChListColPosRemarks, intRow).Value          ''Remark

                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 0, IIf(CCShort(grdCHList(gCstChListColPosFlagDmy, intRow).Value) = 1, True, False))   ''DMY
                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 1, IIf(CCShort(grdCHList(gCstChListColPosFlagSC, intRow).Value) = 1, True, False))    ''SC
                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 2, IIf(CCShort(grdCHList(gCstChListColPosFlagWK, intRow).Value) = 1, True, False))    ''WK
                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 4, IIf(CCShort(grdCHList(gCstChListColPosFlagPLC, intRow).Value) = 1, True, False))   ''PLC 2014.11.18

                        .udtChCommon.shtOutPort = CCShort(grdCHList(gCstChListColPosFlagSIO, intRow).Value) ''SIO
                        .udtChCommon.shtGwsPort = CCShort(grdCHList(gCstChListColPosFlagGWS, intRow).Value) ''GWS

                        .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 0, IIf(CCShort(grdCHList(gCstChListColPosFlagRL, intRow).Value) = 1, True, False))    ''RL
                        ''Bit1 はアラーム有無を確認後にセット
                        .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 2, IIf(CCShort(grdCHList(gCstChListColPosFlagEP, intRow).Value) = 1, True, False))    ''EP
                        .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 3, IIf(CCShort(grdCHList(gCstChListColPosFlagAC, intRow).Value) = 1, True, False))    ''AC
                        .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 4, IIf(CCShort(grdCHList(gCstChListColPosFlagSP, intRow).Value) = 1, True, False))    ''SPARE 2014.11.18
                        .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 5, IIf(CCShort(grdCHList(gCstChListColPosFlagMotorColor, intRow).Value) = 1, True, False))    ''SPARE 2014.11.18

                        ''flag1(Bit3) <-- Unit of Delay Timer
                        If grdCHList(gCstChListColPosChType, intRow).Value = gCstCodeChTypeMotor Then
                            .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 3, IIf(CCShort(grdCHList(gCstChListColPosOutDelayTime, intRow).Value) = 1, True, False))

                        ElseIf grdCHList(gCstChListColPosChType, intRow).Value = gCstCodeChTypeValve Then

                            intValue = grdCHList(gCstChListColPosDataType, intRow).Value

                            If intValue = gCstCodeChDataTypeValveDI_DO Or _
                               intValue = gCstCodeChDataTypeValveAI_DO1 Or intValue = gCstCodeChDataTypeValveAI_DO2 Or _
                               intValue = gCstCodeChDataTypeValvePT_DO2 Or _
                               intValue = gCstCodeChDataTypeValveAI_AO1 Or intValue = gCstCodeChDataTypeValveAI_AO2 Or _
                               intValue = gCstCodeChDataTypeValvePT_AO2 Then
                                .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 3, IIf(CCShort(grdCHList(gCstChListColPosDelayTime, intRow).Value) = 1, True, False))
                            Else
                                .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 3, IIf(CCShort(grdCHList(gCstChListColPosOutDelayTime, intRow).Value) = 1, True, False))
                            End If

                        Else
                            .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 3, IIf(CCShort(grdCHList(gCstChListColPosDelayTime, intRow).Value) = 1, True, False))
                        End If

                        ''FCU番号に変更につき、条件文変更　ver.1.4.0 2011.09.29
                        'If mintFcuNo = 2 Then
                        If gudt.SetSystem.udtSysFcu.shtShareChUse = 1 Then    ''共有CH有無
                            ''FCU 2台構成
                            .udtChCommon.shtShareType = CCShort(grdCHList(gCstChListColPosShareType, intRow).Value)         ''Share Type

                            If .udtChCommon.shtShareType = 1 Or .udtChCommon.shtShareType = 3 Then   ''Local,Share ■Share対応 
                                .udtChCommon.shtShareChid = CCUInt16(grdCHList(gCstChListColPosShareChid, intRow).Value)    ''Share ChNo
                            Else
                                .udtChCommon.shtShareChid = 0
                            End If
                        Else
                            ''FCU 2台構成以外
                            .udtChCommon.shtShareType = 0
                            .udtChCommon.shtShareChid = 0
                        End If

                        If .udtChCommon.shtChno = 804 Then
                            Dim debuA As Integer = 0
                        End If


                        Select Case grdCHList(gCstChListColPosChType, intRow).Value


                            '********************************************************
                            'アナログチャンネル
                            '********************************************************
                            Case gCstCodeChTypeAnalog

                                ''EXT Group ----------------------------------------------------
                                .AnalogHiHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrHH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrHH, intRow).Value)         ''EXT.G HH
                                .AnalogHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrH, intRow).Value)             ''EXT.G H
                                .AnalogLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrL, intRow).Value)             ''EXT.G L
                                .AnalogLoLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrLL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrLL, intRow).Value)         ''EXT.G LL
                                .AnalogSensorFailExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrSF, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrSF, intRow).Value)   ''EXT.G SF

                                ''Delay --------------------------------------------------------
                                .AnalogHiHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayHH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayHH, intRow).Value)        ''Delay HH
                                .AnalogHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayH, intRow).Value)            ''Delay H
                                .AnalogLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayL, intRow).Value)            ''Delay L
                                .AnalogLoLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayLL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayLL, intRow).Value)        ''Delay LL
                                .AnalogSensorFailDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelaySF, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelaySF, intRow).Value)  ''Delay SF

                                ''G Repose 1 ---------------------------------------------------
                                .AnalogHiHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1HH, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1HH, intRow).Value) ''G.Rep1 HH
                                .AnalogHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1H, intRow).Value)     ''G.Rep1 H
                                .AnalogLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1L, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1L, intRow).Value)     ''G.Rep1 L
                                .AnalogLoLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1LL, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1LL, intRow).Value) ''G.Rep1 LL
                                .AnalogSensorFailGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1SF, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1SF, intRow).Value)

                                ''G Repose 2 ---------------------------------------------------
                                .AnalogHiHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2HH, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2HH, intRow).Value) ''G.Rep2 HH
                                .AnalogHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2H, intRow).Value)     ''G.Rep2 H
                                .AnalogLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2L, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2L, intRow).Value)     ''G.Rep2 L
                                .AnalogLoLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2LL, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2LL, intRow).Value) ''G.Rep2 LL
                                .AnalogSensorFailGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2SF, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2SF, intRow).Value)

                                ''Data Type ----------------------------------------------------
                                '' AI(4-20mA)の入力信号種別追加　ver1.4.0 2011.07.29
                                If CCShort(grdCHList(gCstChListColPosDataType, intRow).Value) > 100 Then                    ' PT:122 (AI:22)
                                    .udtChCommon.shtData = CCShort(grdCHList(gCstChListColPosDataType, intRow).Value) - 100
                                Else                                                                                        ' その他
                                    .udtChCommon.shtData = CCShort(grdCHList(gCstChListColPosDataType, intRow).Value)
                                End If

                                If .udtChCommon.shtData = gCstCodeChDataTypeAnalog4_20mA Then                               ' データ種別 4-20mA
                                    If grdCHList(gCstChListColPosDataType, intRow).FormattedValue = "AI(4-20mA)" Then       ' AI
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalAI
                                    ElseIf grdCHList(gCstChListColPosDataType, intRow).FormattedValue = "PT(4-20mA)" Then   ' PT
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalPT
                                    Else                                                                                    ' その他
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalNothing
                                    End If
                                End If

                                ''FU Address ---------------------------------------------------
                                Select Case grdCHList(gCstChListColPosDataType, intRow).Value

                                    Case gCstCodeChDataTypeAnalogJacom     'JACOM-22の場合

                                        'FuNoおよびPortNoは[0]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = 0
                                        .udtChCommon.shtPin = IIf(Not IsNumeric(grdCHList(gCstChListColPosPinAddress, intRow).Value), gCstCodeChNotSetFuPin, Val(grdCHList(gCstChListColPosPinAddress, intRow).Value))

                                    Case gCstCodeChDataTypeAnalogJacom55     'JACOM-55の場合

                                        'FuNoおよびPortNoは[51]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = 51
                                        .udtChCommon.shtPin = IIf(Not IsNumeric(grdCHList(gCstChListColPosPinAddress, intRow).Value), gCstCodeChNotSetFuPin, Val(grdCHList(gCstChListColPosPinAddress, intRow).Value))

                                    Case gCstCodeChDataTypeAnalogModbus, gCstCodeChDataTypeAnalogLatitude, gCstCodeChDataTypeAnalogLongitude     '外部機器の場合

                                        'FuNoは[0]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                        .udtChCommon.shtPin = IIf(Not IsNumeric(grdCHList(gCstChListColPosPinAddress, intRow).Value), gCstCodeChNotSetFuPin, Val(grdCHList(gCstChListColPosPinAddress, intRow).Value))

                                    Case Else

                                        intFuNo = 0 : intPortNo = 0 : intPin = 0
                                        intFuNo = CCInt2(grdCHList(gCstChListColPosFuAddress, intRow).Value)
                                        intPortNo = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                        intPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                        If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn) = 0 Then
                                            mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn)
                                        End If

                                        .udtChCommon.shtFuno = intFuNo
                                        .udtChCommon.shtPortno = intPortNo
                                        .udtChCommon.shtPin = intPin

                                End Select

                                '計測点個数については[1]固定
                                .udtChCommon.shtPinNo = 1


                                ''Status --------------------------------------------------------
                                'Ver2.0.2.6 アナログCHのステータスとセット値関係処理
                                Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                intValue = cmbStatus.FindStringExact(grdCHList(gCstChListColPosStatusIn, intRow).Value)
                                'Ver2.0.2.6 ｽﾃｰﾀｽとｱﾗｰﾑに矛盾があればマニュアル化
                                If intValue >= 0 Then
                                    If fnAnalogStatusAlarmRel(grdCHList(gCstChListColPosStatusIn, intRow).Value, intRow) < 0 Then
                                        intValue = -1
                                    End If
                                End If
                                If intValue >= 0 Then
                                    cmbStatus.SelectedIndex = intValue
                                    .udtChCommon.shtStatus = cmbStatus.SelectedValue
                                    .udtChCommon.strStatus = ""
                                Else
                                    .udtChCommon.shtStatus = gCstCodeChManualInputStatus  ''特殊コード（手入力）

                                    .AnalogHiHiStatusInput = grdCHList(gCstChListColPosStaNmHH, intRow).Value
                                    .AnalogHiStatusInput = grdCHList(gCstChListColPosStaNmH, intRow).Value
                                    .AnalogLoStatusInput = grdCHList(gCstChListColPosStaNmL, intRow).Value
                                    .AnalogLoLoStatusInput = grdCHList(gCstChListColPosStaNmLL, intRow).Value
                                End If

                                ''2,3線式か？
                                If grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypeAnalog2Pt And _
                                   grdCHList(gCstChListColPosDataType, intRow).Value <= gCstCodeChDataTypeAnalog3Jpt Then

                                    ''Decimal Position ------------------------------------------
                                    'Ver2.0.2.7 温度のﾚﾝｼﾞﾀｲﾌﾟも小数点対応
                                    '.AnalogDecimalPosition = Val(grdCHList(gCstChListColPosDecimalPoint, intRow).Value)
                                    .AnalogDecimalPosition = mGetDecimalPosition(intRow)
                                    intDecimalP = .AnalogDecimalPosition

                                    ''Range -----------------------------------------------------

                                    ''RangeType は DataType が2,3線式の場合のみ設定
                                    .AnalogRangeType = CCShort(grdCHList(gCstChListColPosRangeType, intRow).Value)

                                    'Ver2.0.7.D 温度基板もレンジ保存形式は他と同じ処置
                                    'Ver2.0.7.B ２線式、３線式保存形式変更
                                    .AnalogRangeLow = NZfZero(grdCHList(gCstChListColPosRangeLo, intRow).Value) * (10 ^ intDecimalP) + 0.5   'Range Low
                                    .AnalogRangeHigh = NZfZero(grdCHList(gCstChListColPosRangeHi, intRow).Value) * (10 ^ intDecimalP) + 0.5  'Range Hi
                                    '.AnalogRangeLow = NZfZero(grdCHList(gCstChListColPosRangeLo, intRow).Value)    'Range Low
                                    '.AnalogRangeHigh = NZfZero(grdCHList(gCstChListColPosRangeHi, intRow).Value)   'Range Hi
                                    '-
                                    




                                    '' '' ''文字列を分解してRangLowとRangeHighにセット
                                    '' ''strValue = grdCHList(gCstChListColPosRangeType, intRow).FormattedValue  ''Range Type
                                    '' ''If strValue <> "" Then

                                    '' ''    strValue = strValue.Replace(" - ", "/")
                                    '' ''    p = strValue.LastIndexOf("/")

                                    '' ''    .AnalogRangeLow = Val(Long.Parse(strValue.Substring(0, p)) * (10 ^ intDecimalP) + 0.5)     'Range Low
                                    '' ''    .AnalogRangeHigh = Val(Long.Parse(strValue.Substring(p + 1)) * (10 ^ intDecimalP) + 0.5)   'Range Hi
                                    '' ''End If

                                Else
                                    ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                                    intDecimalP = mGetDecimalPosition(intRow)

                                    ''Decimal Position ------------------------------------------
                                    .AnalogDecimalPosition = intDecimalP

                                    ''Range -----------------------------------------------------
                                    .AnalogRangeType = 0    ''RangeType

                                    ''DataTypeが K, 1-5 V, 4-20 mA, Exhaust Gus, 外部機器 の場合は手入力したレンジを設定
                                    strValue = grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString  ''Range Lo
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngLowValue = Int(grdCHList(gCstChListColPosRangeLo, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngLowValue.ToString.Length > 9 Then     ''桁あふれ回避の為に9桁まで
                                            lngLowValue = CCLong(lngLowValue.ToString.Substring(lngLowValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngLowValue = 0
                                    End If
                                    .AnalogRangeLow = lngLowValue   ''Range Low

                                    strValue = grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngHiValue = Int(grdCHList(gCstChListColPosRangeHi, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngHiValue.ToString.Length > 9 Then      ''桁あふれ回避の為に9桁まで
                                            lngHiValue = CCLong(lngHiValue.ToString.Substring(lngHiValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngHiValue = 0
                                    End If
                                    .AnalogRangeHigh = lngHiValue   ''Range Hi

                                End If

                                ''Use SF -------------------------------------------------------
                                'Ver2.0.0.0 2016.12.06 ｾﾝｻｰﾌｪｲﾙ対応
                                '.AnalogSensorFailUse = grdCHList(gCstChListColPosValueSF, intRow).Value
                                Dim intSFbit As Integer = grdCHList(gCstChListColPosValueSF, intRow).Value
                                ' Ver1.11.9.8 2016.12.15 ｾﾝｻFailをｺﾝﾎﾞﾎﾞｯｸｽからの選択に変更
                                If intSFbit = 0 Then    '' Not Use
                                    .AnalogSensorFailUse = 0
                                    .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, False)    ''Under
                                    .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, False)    ''Over
                                    'Ver2.0.2.0 一覧からのみ入力の場合
                                    If NZf(grdCHList(gCstChListColPosExtGrSF, intRow).Value) <> "" Then
                                        .AnalogSensorFailUse = 1
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, True)     ''Under
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, True)     ''Over
                                    End If
                                Else
                                    .AnalogSensorFailUse = 1
                                    If intSFbit = 3 Then    ''Overのみ
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, False)    ''Under
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, True)     ''Over
                                    ElseIf intSFbit = 2 Then    ''Underのみ
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, True)     ''Under
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, False)    ''Over
                                    Else
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, True)     ''Under
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, True)     ''Over
                                    End If

                                    'Ver2.0.6.3 ｾﾝｻｰﾌｪｲﾙのExが入っていなければﾌﾗｸﾞを落とす
                                    If NZf(grdCHList(gCstChListColPosExtGrSF, intRow).Value) = "" Then
                                        .AnalogSensorFailUse = 0
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, False)     ''Under
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, False)     ''Over
                                    End If
                                End If
                                ''Use
                                '.AnalogSensorFailUse = IIf(gBitCheck(intSFbit, 0), 1, 0)
                                ''Under
                                '.AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, gBitCheck(intSFbit, 1))
                                ''Over
                                '.AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, gBitCheck(intSFbit, 2))


                                ''Value, Use ---------------------------------------------------
                                '小数点桁合わせ
                                .AnalogHiHiValue = BeamSsmallNumber(gCstChListColPosValueHH, intRow, intDecimalP)(1)
                                .AnalogHiHiUse = BeamSsmallNumber(gCstChListColPosValueHH, intRow, intDecimalP)(2)

                                .AnalogHiValue = BeamSsmallNumber(gCstChListColPosValueH, intRow, intDecimalP)(1)
                                .AnalogHiUse = BeamSsmallNumber(gCstChListColPosValueH, intRow, intDecimalP)(2)

                                .AnalogLoValue = BeamSsmallNumber(gCstChListColPosValueL, intRow, intDecimalP)(1)
                                .AnalogLoUse = BeamSsmallNumber(gCstChListColPosValueL, intRow, intDecimalP)(2)

                                .AnalogLoLoValue = BeamSsmallNumber(gCstChListColPosValueLL, intRow, intDecimalP)(1)
                                .AnalogLoLoUse = BeamSsmallNumber(gCstChListColPosValueLL, intRow, intDecimalP)(2)

                                ''m_repose_set -------------------------------------------------
                                'T.ueki
                                '排ガス偏差リポーズの場合　マニュアルリポーズ設定無し 条件文修正 2013.11.30
                                'If mAnalogData.DataType = 49 Then
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalogExhRepose Then
                                    If .AnalogHiHiUse = 1 Then .AnalogHiHiManualReposeSet = 0
                                    If .AnalogHiUse = 1 Then .AnalogHiManualReposeSet = 0
                                    If .AnalogLoUse = 1 Then .AnalogLoManualReposeSet = 0
                                    If .AnalogLoLoUse = 1 Then .AnalogLoLoManualReposeSet = 0
                                    If .AnalogSensorFailUse = 1 Then .AnalogSensorFailManualReposeSet = 0

                                    If .AnalogHiHiUse = 1 Or .AnalogHiUse = 1 Or .AnalogLoUse = 1 Or .AnalogLoLoUse = 1 Or .AnalogSensorFailUse = 1 Then
                                        'Ver2.0.2.1 共通MRsetは使わないためノータッチとする
                                        '.udtChCommon.shtM_ReposeSet = 0
                                    End If
                                Else
                                    If .AnalogHiHiUse = 1 Then .AnalogHiHiManualReposeSet = 1
                                    If .AnalogHiUse = 1 Then .AnalogHiManualReposeSet = 1
                                    If .AnalogLoUse = 1 Then .AnalogLoManualReposeSet = 1
                                    If .AnalogLoLoUse = 1 Then .AnalogLoLoManualReposeSet = 1
                                    If .AnalogSensorFailUse = 1 Then .AnalogSensorFailManualReposeSet = 1

                                    If .AnalogHiHiUse = 1 Or .AnalogHiUse = 1 Or .AnalogLoUse = 1 Or .AnalogLoLoUse = 1 Or .AnalogSensorFailUse = 1 Then
                                        'Ver2.0.2.1 共通MRsetは使わないためノータッチとする
                                        '.udtChCommon.shtM_ReposeSet = 1
                                    End If
                                End If
                                'Ver2.0.2.7
                                .udtChCommon.shtM_ReposeSet = inMRsetBF

                                ''Lo Normal -----------------------------------------------------
                                If IsNumeric(grdCHList(gCstChListColPosNormalLo, intRow).Value) Then
                                    ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                    lngValue = Int(Val(grdCHList(gCstChListColPosNormalLo, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                    If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                        lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                    End If
                                    .AnalogNormalLow = lngValue
                                Else
                                    .AnalogNormalLow = gCstCodeChAlalogNormalRangeNothingLo
                                End If

                                ''Hi Normal　----------------------------------------------------
                                If IsNumeric(grdCHList(gCstChListColPosNormalHi, intRow).Value) Then
                                    ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                    lngValue = Int(Val(grdCHList(gCstChListColPosNormalHi, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                    If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                        lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                    End If
                                    .AnalogNormalHigh = lngValue
                                Else
                                    .AnalogNormalHigh = gCstCodeChAlalogNormalRangeNothingHi
                                End If

                                ''Off Set -------------------------------------------------------
                                intValue = Val(grdCHList(gCstChListColPosOffset, intRow).Value)
                                .AnalogOffsetValue = intValue

                                ''Unit ----------------------------------------------------------
                                '' Ver1.9.8 2016.02.20  単位の大文字・小文字を区別するための関数追加
                                If ChkUnitType(grdCHList(gCstChListColPosUnit, intRow).Value) = False Then
                                    intValue = -1
                                Else
                                    'Ver2.0.4.3 unitで大文字小文字区別
                                    intValue = fnBackCmb(cmbUnit, grdCHList(gCstChListColPosUnit, intRow).Value)
                                    'intValue = cmbUnit.FindStringExact(grdCHList(gCstChListColPosUnit, intRow).Value)
                                End If
                                If intValue >= 0 Then
                                    cmbUnit.SelectedIndex = intValue
                                    .udtChCommon.shtUnit = cmbUnit.SelectedValue
                                    .udtChCommon.strUnit = ""
                                Else
                                    .udtChCommon.shtUnit = gCstCodeChManualInputUnit  ''特殊コード（手入力）
                                    .udtChCommon.strUnit = grdCHList(gCstChListColPosUnit, intRow).Value
                                End If

                                ''Display1 <-- Strig --------------------------------------------
                                .AnalogString = Val(grdCHList(gCstChListColPosString, intRow).Value)

                                ''display3(bit0) <-- CenterGraph --------------------------------
                                .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 0, IIf(grdCHList(gCstChListColPosCenterGraph, intRow).Value, True, False))

                                'Power Factor---------------------------------------------------- T.Ueki 2016/11/28
                                Select Case grdCHList(gCstChListPowerFactorRow, intRow).Value
                                    Case 1
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, True)
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 0, True)
                                    Case 2
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 8, True)
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 0, True)
                                    Case 3
                                        'Ver2.0.7.9 AF対応
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 9, True)
                                        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 0, True)
                                    Case Else
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, False)
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 8, False)

                                        'Ver2.0.0.7
                                        'BarCenterフラグは、PFでONにすることはあってもOFFにはしない。
                                        '.AnalogDisplay3 = gBitSet(.AnalogDisplay3, 0, False)

                                        'Ver2.0.7.9 AF対応
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 9, False)
                                End Select


                                'Ver2.0.1.7 自動でCerterBarGraphを立てる処理をやめる。代わりにｺﾝﾊﾟｲﾗでﾁｪｯｸする
                                ''Ver2.0.0.7 アナログCHで、ﾚﾝｼﾞHiとﾚﾝｼﾞLOの絶対値が同じならBarCenterフラグを立てる
                                'If .AnalogRangeLow <> .AnalogRangeHigh Then
                                '    Dim intLow As Integer = Math.Abs(CInt(.AnalogRangeLow))
                                '    Dim intHi As Integer = Math.Abs(CInt(.AnalogRangeHigh))
                                '    If intLow = intHi Then
                                '        .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 0, True)
                                '    End If
                                'End If


                                'Ver2.0.0.0 2016.12.06 ｾﾝｻｰﾌｪｲﾙ対応　上でUPDATEするため、本処理は削除   
                                ' ''display3(bit1, bit2) <-- SFの.useが1の場合、bit1, bit2をONにする
                                'If .AnalogSensorFailUse = 1 Then
                                '    .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 1, True)
                                '    .AnalogDisplay3 = gBitSet(.AnalogDisplay3, 2, True)
                                'End If


                                ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする --------------------
                                'Ver2.0.2.7 アナログの使用しているいないは、EX,DLY,GR1,GR2から判断する
                                Dim blHHuse As Boolean = False
                                Dim blHuse As Boolean = False
                                Dim blLuse As Boolean = False
                                Dim blLLuse As Boolean = False

                                Dim strEx As String = ""
                                Dim strDly As String = ""
                                Dim strGR1 As String = ""
                                Dim strGR2 As String = ""

                                With mChDataGroup(intRow)
                                    '>>HH
                                    strEx = IIf(.AnalogHiHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiHiExtGroup))
                                    strDly = IIf(.AnalogHiHiDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiHiDelay))
                                    strGR1 = IIf(.AnalogHiHiGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiHiGroupRepose1))
                                    strGR2 = IIf(.AnalogHiHiGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiHiGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blHHuse = True
                                    End If
                                    '>>H
                                    strEx = IIf(.AnalogHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiExtGroup))
                                    strDly = IIf(.AnalogHiDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiDelay))
                                    strGR1 = IIf(.AnalogHiGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiGroupRepose1))
                                    strGR2 = IIf(.AnalogHiGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogHiGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blHuse = True
                                    End If
                                    '>>L
                                    strEx = IIf(.AnalogLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoExtGroup))
                                    strDly = IIf(.AnalogLoDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoDelay))
                                    strGR1 = IIf(.AnalogLoGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoGroupRepose1))
                                    strGR2 = IIf(.AnalogLoGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blLuse = True
                                    End If
                                    '>>LL
                                    strEx = IIf(.AnalogLoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoLoExtGroup))
                                    strDly = IIf(.AnalogLoLoDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoLoDelay))
                                    strGR1 = IIf(.AnalogLoLoGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoLoGroupRepose1))
                                    strGR2 = IIf(.AnalogLoLoGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.AnalogLoLoGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blLLuse = True
                                    End If
                                End With

                                bALflg = False
                                'If .AnalogHiHiUse = 1 Or .AnalogHiUse = 1 Or .AnalogLoUse = 1 Or .AnalogLoLoUse = 1 Or .AnalogSensorFailUse = 1 Then
                                If blHHuse = True Or blHuse = True Or blLuse = True Or blLLuse = True Or .AnalogSensorFailUse = 1 Then
                                    If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                        bALflg = True
                                    End If
                                End If
                                'Ver2.0.2.0 ALフラグのON,OFF
                                .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                '2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
                                .AnalogLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value

                                'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                .AnalogAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                'Ver2.0.7.C ｵﾌｾｯﾄ調整ﾊﾟｽﾜｰﾄﾞ有無
                                .AnalogAdjstPsw = IIf(Not IsNumeric(grdCHList(gCstChListColPosCompositeIndex, intRow).Value), 0, grdCHList(gCstChListColPosCompositeIndex, intRow).Value)

                                'Ver2.0.8.5 mmHgレンジ下限小数点対応
                                .AnalogMmHgFlg = IIf(Not IsNumeric(grdCHList(gCstChListColPosAoTerm, intRow).Value), 0, grdCHList(gCstChListColPosAoTerm, intRow).Value)
                                .AnalogMmHgDec = IIf(Not IsNumeric(grdCHList(gCstChListColPosPortAoTerm, intRow).Value), 0, grdCHList(gCstChListColPosPortAoTerm, intRow).Value)


                                ''アナログでは未使用 --------------------------------------------
                                .udtChCommon.shtExtGroup = gCstCodeChCommonExtGroupNothing          ''延長警報グループ
                                .udtChCommon.shtDelay = gCstCodeChCommonDelayTimerNothing           ''ディレイタイマ値
                                .udtChCommon.shtGRepose1 = gCstCodeChCommonGroupRepose1Nothing      ''グループリポーズ１
                                .udtChCommon.shtGRepose2 = gCstCodeChCommonGroupRepose2Nothing      ''グループリポーズ２
                                .udtChCommon.shtM_Repose = 0                                        ''マニュアルリポーズ：無効

                                '仮設定機能対応（アナログ）
                                Call Temporary_setup(1, intRow, intRow, 2)




                                '*****************************************************
                                'デジタル
                                '*****************************************************
                            Case gCstCodeChTypeDigital

                                '' Ver1.11.1 2016.07.12  PWﾌﾗｸﾞを落とす
                                .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, False)

                                ''EXT Group ----------------------------------------------------
                                .udtChCommon.shtExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), _
                                                        gCstCodeChCommonExtGroupNothing, CCInt(grdCHList(gCstChListColPosExtGrH, intRow).Value))
                                'Ver2.0.6.3 EXTが未入力ならUSEを落とす
                                If .udtChCommon.shtExtGroup = gCstCodeChCommonExtGroupNothing Then
                                    grdCHList(gCstChListColPosStatusAlarm, intRow).Value = False
                                End If


                                ''G Repose 1 ---------------------------------------------------
                                .udtChCommon.shtGRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), _
                                                        gCstCodeChCommonGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosGrep1H, intRow).Value))

                                ''G Repose 2 ---------------------------------------------------
                                .udtChCommon.shtGRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), _
                                                        gCstCodeChCommonGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosGrep2H, intRow).Value))

                                ''マニュアルリポーズ：無効 -------------------------------------
                                .udtChCommon.shtM_Repose = 0

                                ''Delay --------------------------------------------------------
                                .udtChCommon.shtDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), _
                                                        gCstCodeChCommonDelayTimerNothing, CCInt(grdCHList(gCstChListColPosDelayH, intRow).Value))

                                ''Data Type ----------------------------------------------------
                                .udtChCommon.shtData = grdCHList(gCstChListColPosDataType, intRow).Value


                                '+++++++++++++++++++++++++
                                'SYSTEM CH(Device Status)
                                '+++++++++++++++++++++++++
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeDigitalDeviceStatus Then

                                    ''FU Address -----------------------------------------------
                                    .udtChCommon.shtFuno = gCstCodeChNotSetFuNo                 'FU No    :設定なし(FFFF)
                                    .udtChCommon.shtPortno = gCstCodeChNotSetFuPort             'Fu PortNo:設定なし(FFFF)
                                    .udtChCommon.shtPin = gCstCodeChNotSetFuPin                 'Fu Pin   :設定なし(FFFF)
                                    .udtChCommon.shtPinNo = 1

                                    ''Use <-- Status Alarm -------------------------------------
                                    .SystemUse = IIf(grdCHList(gCstChListColPosStatusAlarm, intRow).Value, 1, 0)

                                    ''m_repose_set ---------------------------------------------
                                    .udtChCommon.shtM_ReposeSet = .SystemUse

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする ----
                                    bALflg = False
                                    If .SystemUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                    ''Device Status --------------------------------------------
                                    'Ver2.0.2.0



                                    .SystemInfoStatusUse01 = IIf(mSystemChStatusUse(intRow, 0), 1, 0)
                                    .SystemInfoKikiCode01 = Val(mSystemChStatusCode(intRow, 0))
                                    .SystemInfoStatusName01 = gGetString(mSystemChStatusName(intRow, 0))

                                    .SystemInfoStatusUse02 = IIf(mSystemChStatusUse(intRow, 1), 1, 0)
                                    .SystemInfoKikiCode02 = Val(mSystemChStatusCode(intRow, 1))
                                    .SystemInfoStatusName02 = gGetString(mSystemChStatusName(intRow, 1))

                                    .SystemInfoStatusUse03 = IIf(mSystemChStatusUse(intRow, 2), 1, 0)
                                    .SystemInfoKikiCode03 = Val(mSystemChStatusCode(intRow, 2))
                                    .SystemInfoStatusName03 = gGetString(mSystemChStatusName(intRow, 2))

                                    .SystemInfoStatusUse04 = IIf(mSystemChStatusUse(intRow, 3), 1, 0)
                                    .SystemInfoKikiCode04 = Val(mSystemChStatusCode(intRow, 3))
                                    .SystemInfoStatusName04 = gGetString(mSystemChStatusName(intRow, 3))

                                    .SystemInfoStatusUse05 = IIf(mSystemChStatusUse(intRow, 4), 1, 0)
                                    .SystemInfoKikiCode05 = Val(mSystemChStatusCode(intRow, 4))
                                    .SystemInfoStatusName05 = gGetString(mSystemChStatusName(intRow, 4))

                                    .SystemInfoStatusUse06 = IIf(mSystemChStatusUse(intRow, 5), 1, 0)
                                    .SystemInfoKikiCode06 = Val(mSystemChStatusCode(intRow, 5))
                                    .SystemInfoStatusName06 = gGetString(mSystemChStatusName(intRow, 5))

                                    .SystemInfoStatusUse07 = IIf(mSystemChStatusUse(intRow, 6), 1, 0)
                                    .SystemInfoKikiCode07 = Val(mSystemChStatusCode(intRow, 6))
                                    .SystemInfoStatusName07 = gGetString(mSystemChStatusName(intRow, 6))

                                    .SystemInfoStatusUse08 = IIf(mSystemChStatusUse(intRow, 7), 1, 0)
                                    .SystemInfoKikiCode08 = Val(mSystemChStatusCode(intRow, 7))
                                    .SystemInfoStatusName08 = gGetString(mSystemChStatusName(intRow, 7))

                                    .SystemInfoStatusUse09 = IIf(mSystemChStatusUse(intRow, 8), 1, 0)
                                    .SystemInfoKikiCode09 = Val(mSystemChStatusCode(intRow, 8))
                                    .SystemInfoStatusName09 = gGetString(mSystemChStatusName(intRow, 8))

                                    .SystemInfoStatusUse10 = IIf(mSystemChStatusUse(intRow, 9), 1, 0)
                                    .SystemInfoKikiCode10 = Val(mSystemChStatusCode(intRow, 9))
                                    .SystemInfoStatusName10 = gGetString(mSystemChStatusName(intRow, 9))

                                    .SystemInfoStatusUse11 = IIf(mSystemChStatusUse(intRow, 10), 1, 0)
                                    .SystemInfoKikiCode11 = Val(mSystemChStatusCode(intRow, 10))
                                    .SystemInfoStatusName11 = gGetString(mSystemChStatusName(intRow, 10))

                                    .SystemInfoStatusUse12 = IIf(mSystemChStatusUse(intRow, 11), 1, 0)
                                    .SystemInfoKikiCode12 = Val(mSystemChStatusCode(intRow, 11))
                                    .SystemInfoStatusName12 = gGetString(mSystemChStatusName(intRow, 11))

                                    .SystemInfoStatusUse13 = IIf(mSystemChStatusUse(intRow, 12), 1, 0)
                                    .SystemInfoKikiCode13 = Val(mSystemChStatusCode(intRow, 12))
                                    .SystemInfoStatusName13 = gGetString(mSystemChStatusName(intRow, 12))

                                    .SystemInfoStatusUse14 = IIf(mSystemChStatusUse(intRow, 13), 1, 0)
                                    .SystemInfoKikiCode14 = Val(mSystemChStatusCode(intRow, 13))
                                    .SystemInfoStatusName14 = gGetString(mSystemChStatusName(intRow, 13))

                                    .SystemInfoStatusUse15 = IIf(mSystemChStatusUse(intRow, 14), 1, 0)
                                    .SystemInfoKikiCode15 = Val(mSystemChStatusCode(intRow, 14))
                                    .SystemInfoStatusName15 = gGetString(mSystemChStatusName(intRow, 14))

                                    .SystemInfoStatusUse16 = IIf(mSystemChStatusUse(intRow, 15), 1, 0)
                                    .SystemInfoKikiCode16 = Val(mSystemChStatusCode(intRow, 15))
                                    .SystemInfoStatusName16 = gGetString(mSystemChStatusName(intRow, 15))

                                    .SystemLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .SystemAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)
                                Else

                                    '+++++++++++++++++++++++++
                                    'Digital CH
                                    '+++++++++++++++++++++++++

                                    ''Use <-- Status Alarm -------------------------------------
                                    .DigitalUse = IIf(grdCHList(gCstChListColPosStatusAlarm, intRow).Value, 1, 0)

                                    ''Filter Coef ----------------------------------------------
                                    'Ver2.0.0.9 「12」を格納
                                    'Ver2.0.1.9 空白なら12を格納
                                    '.DigitalDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                    If NZf(grdCHList(gCstChListColPosFilterCoef, intRow).Value) = "" Then
                                        .DigitalDiFilter = 12
                                    Else
                                        .DigitalDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                    End If

                                    ''m_repose_set ---------------------------------------------
                                    .udtChCommon.shtM_ReposeSet = .DigitalUse

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする ----
                                    bALflg = False
                                    If .DigitalUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                    .DigitalLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .DigitalAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)
                                End If


                                'FU Address -------------------------------
                                intFuNo = 0 : intPortNo = 0 : intPin = 0

                                'Ver2.0.1.2 分岐条件修正
                                'NO及びNC Deviceの場合とJACOMの場合で処理分岐
                                Select Case grdCHList(gCstChListColPosDataType, intRow).Value

                                    'Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalModbusNO                        'Jacom-22の場合
                                    Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO                        'Jacom-22の場合
                                        'FuNoおよびPortNoは[0]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = 0
                                        .udtChCommon.shtPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    Case gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                                        'FuNoおよびPortNoは[51]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = 51
                                        .udtChCommon.shtPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO                       '外部機器通信

                                        'FuNoは[0]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                        .udtChCommon.shtPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    Case gCstCodeChDataTypeDigitalNC, gCstCodeChDataTypeDigitalNO, gCstCodeChDataTypeDigitalExt     '接点/延長警報デバイス

                                        intFuNo = CCInt2(grdCHList(gCstChListColPosFuAddress, intRow).Value)
                                        intPortNo = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                        intPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                        If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn) = 0 Then
                                            mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn)
                                        End If

                                        .udtChCommon.shtFuno = intFuNo          ''FU No
                                        .udtChCommon.shtPortno = intPortNo      ''Fu PortNo
                                        .udtChCommon.shtPin = intPin            ''Fu Pin

                                End Select

                                '延長警報デバイスのとき
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeDigitalExt Then
                                    .udtChCommon.shtEccFunc = CCShort(grdCHList(gCstChListColPosEccFunc, intRow).Value)
                                End If

                                '計測点個数については[1]固定
                                .udtChCommon.shtPinNo = 1

                                ''Status -------------------------------------------------------
                                Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                intValue = cmbStatus.FindStringExact(grdCHList(gCstChListColPosStatusIn, intRow).Value)
                                If intValue >= 0 Then
                                    cmbStatus.SelectedIndex = intValue
                                    .udtChCommon.shtStatus = cmbStatus.SelectedValue
                                    .udtChCommon.strStatus = ""
                                Else
                                    .udtChCommon.shtStatus = gCstCodeChManualInputStatus  ''特殊コード（手入力）

                                    Dim strStatus1 As String = ""
                                    Dim strStatus2 As String = ""

                                    strValue = Trim(grdCHList(gCstChListColPosStatusIn, intRow).Value)
                                    GetStatusString(strValue, strStatus1, strStatus2)
                                    'Ver2.0.7.L
                                    '.udtChCommon.strStatus = strStatus1.PadRight(8) & strStatus2.PadRight(8)
                                    .udtChCommon.strStatus = PadB(strStatus1, "LEFT", 8, " ") & PadB(strStatus2, "LEFT", 8, " ")

                                End If

                                '仮設定機能対応（デジタル）
                                Call Temporary_setup(2, intRow, intRow, 2)


                                '*****************************************************
                                'モーターチャンネル
                                '*****************************************************
                            Case gCstCodeChTypeMotor

                                '' Ver1.11.1 2016.07.12  PWﾌﾗｸﾞを落とす
                                .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, False)

                                ''EXT Group ----------------------------------------------------
                                .udtChCommon.shtExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChCommonExtGroupNothing, CCInt(grdCHList(gCstChListColPosExtGrH, intRow).Value))       ''EXT.G H

                                ''Delay --------------------------------------------------------
                                .udtChCommon.shtDelay = gCstCodeChCommonDelayTimerNothing

                                ''G Repose 1 ---------------------------------------------------
                                .udtChCommon.shtGRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChCommonGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosGrep1H, intRow).Value))   ''G.Rep1 H

                                ''G Repose 2 ---------------------------------------------------
                                .udtChCommon.shtGRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChCommonGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosGrep2H, intRow).Value))   ''G.Rep2 H

                                ''マニュアルリポーズ：無効 -------------------------------------
                                .udtChCommon.shtM_Repose = 0

                                ''Data Type ----------------------------------------------------
                                .udtChCommon.shtData = grdCHList(gCstChListColPosDataType, intRow).Value

                                Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusMotor)

                                ''Status IN ----------------------------------------------------
                                'Ver2.0.0.2 モーター種別増加 R Device追加
                                'Ver2.0.8.4 モーター M0 Rを追加
                                'If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDevice Or _
                                '   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDeviceJacom Then
                                'grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorRDevice Then
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDevice Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDeviceJacom Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorDeviceJacom55 Or _
                                    grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeMotorRDevice Then
                                    ''Device Operation, JACOM-22

                                    'T.Ueki変更　No.107
                                    .udtChCommon.shtStatus = 20

                                    .udtChCommon.shtPinNo = 1   ''pin_no(計測点個数) -----------
                                Else

                                    ''Data Type からStatus IN を自動設定する
                                    strValue = grdCHList(gCstChListColPosDataType, intRow).FormattedValue
                                    If strValue.IndexOf(":") >= 0 Then
                                        strValue = strValue.Substring(strValue.IndexOf(":") + 1)
                                    Else
                                        strValue = "RUN"
                                    End If

                                    intValue = cmbStatus.FindStringExact(strValue)
                                    If intValue >= 0 Then
                                        cmbStatus.SelectedIndex = intValue
                                    Else
                                        cmbStatus.SelectedIndex = 0
                                    End If

                                    .udtChCommon.shtStatus = cmbStatus.SelectedValue
                                    .udtChCommon.strStatus = ""

                                    ''計測点個数 : モーターステータスにより設定 ----------------
                                    Dim intKubun As Integer = IIf(grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypeMotorManRun And _
                                                                  grdCHList(gCstChListColPosDataType, intRow).Value <= gCstCodeChDataTypeMotorManRunK, 1, 2)    'Ver2.0.0.2 モーター種別増加 JをKへ
                                    ''Ver2.0.0.2 モーター種別増加 Rの場合のintKubun
                                    If grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypeMotorRManRun And _
                                        grdCHList(gCstChListColPosDataType, intRow).Value <= gCstCodeChDataTypeMotorRManRunK Then
                                        intKubun = IIf(grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypeMotorRManRun And grdCHList(gCstChListColPosDataType, intRow).Value <= gCstCodeChDataTypeMotorRManRunK, 1, 2)
                                    End If

                                    Dim strMotorStatus() As String = Nothing
                                    Dim strwk() As String = Nothing
                                    Call GetStatusMotor(strMotorStatus, intKubun) ''モーターチャンネルのステータス情報を獲得する
                                    strwk = strMotorStatus(cmbStatus.SelectedIndex).ToString.Split("_") ''「_」区切りの文字列取得

                                    intValue = 0
                                    For ii As Integer = LBound(strwk) To UBound(strwk)
                                        If strwk(ii) <> "" Then
                                            intValue = ii + 1
                                        End If
                                    Next
                                    .udtChCommon.shtPinNo = intValue

                                End If

                                Dim intCH As Integer = .udtChCommon.shtChno

                                ''Status OUT ---------------------------------------------------
                                'Ver2.0.1.7 StatusOutの設定不具合修正
                                'intValue = cmbStatus.FindStringExact(grdCHList(gCstChListColPosStatusOut, intRow).Value)
                                Dim strVal As String = NZf(grdCHList(gCstChListColPosStatusOut, intRow).Value)
                                Dim blOK As Boolean = False
                                For z As Integer = 0 To cmbStatus.Items.Count - 1 Step 1
                                    If cmbStatus.Items(z).row(0).ToString = strVal Then
                                        cmbStatus.SelectedIndex = z
                                        blOK = True
                                        Exit For
                                    End If
                                Next z
                                If blOK = False Then
                                    '見つからない場合は手入力扱い
                                    cmbStatus.SelectedValue = gCstCodeChManualInputStatus
                                End If
                                .MotorStatus = cmbStatus.SelectedValue

                                ''FU Address ---------------------------------------------------
                                Select Case grdCHList(gCstChListColPosDataType, intRow).Value

                                    Case gCstCodeChDataTypeMotorDeviceJacom

                                        'FuNoおよびPortNoは[0]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = 0
                                        .udtChCommon.shtPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    Case gCstCodeChDataTypeMotorDeviceJacom55

                                        'PortNoは[51]固定
                                        .udtChCommon.shtFuno = 0
                                        .udtChCommon.shtPortno = 51
                                        .udtChCommon.shtPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    Case Else

                                        intFuNo = 0 : intPortNo = 0 : intPin = 0
                                        intFuNo = CCInt2(grdCHList(gCstChListColPosFuAddress, intRow).Value)
                                        intPortNo = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                        intPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                        If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn, .udtChCommon.shtPinNo, intPinNoIn) = 0 Then
                                            mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn, .udtChCommon.shtPinNo, intPinNoIn)
                                        End If

                                        .udtChCommon.shtFuno = intFuNo            ''FU No
                                        .udtChCommon.shtPortno = intPortNo        ''Fu PortNo
                                        .udtChCommon.shtPin = intPin              ''Fu Pin

                                End Select


                                ''OUTPUT FU Address ---------------------------------------------------
                                Select Case grdCHList(gCstChListColPosDataType, intRow).Value

                                    Case gCstCodeChDataTypeMotorDeviceJacom, gCstCodeChDataTypeMotorDevice, gCstCodeChDataTypeMotorDeviceJacom55

                                        .MotorFuNo = gCstCodeChNotSetFuNo         ''FU No:設定なし(FFFF)
                                        .MotorPortNo = gCstCodeChNotSetFuPort     ''Fu PortNo:設定なし(FFFF)       
                                        .MotorPin = gCstCodeChNotSetFuPin         ''Fu Pin:設定なし(FFFF)

                                    Case Else

                                        intFuNo = 0 : intPortNo = 0 : intPin = 0
                                        intFuNo = CCInt2(grdCHList(gCstChListColPosDoStart, intRow).Value)
                                        intPortNo = CCInt2(grdCHList(gCstChListColPosPortDoStart, intRow).Value)
                                        intPin = CCInt2(grdCHList(gCstChListColPosPinDoStart, intRow).Value)

                                        If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoOutMotor, intPortNoOutMotor, intPinOutMotor, .MotorPinNo, intPinNoOutMotor) = 0 Then
                                            mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoOutMotor, intPortNoOutMotor, intPinOutMotor, .MotorPinNo, intPinNoOutMotor)
                                        End If

                                        .MotorFuNo = intFuNo        ''FU No
                                        .MotorPortNo = intPortNo    ''Fu PortNo        
                                        .MotorPin = intPin          ''Fu Pin

                                End Select

                                'Ver2.0.2.9 MotorPinNoは常にｽﾃｰﾀｽに準じて自動とする
                                'Ver2.0.2.0 出力ｱﾄﾞﾚｽが無しの場合は、DO計測点個数に何も格納しない
                                'If _
                                '    (.MotorFuNo = gCstCodeChNotSetFuNo) Or _
                                '    (.MotorPortNo = gCstCodeChNotSetFuPort) Or _
                                '    (.MotorPin = gCstCodeChNotSetFuPin) _
                                '    Then
                                'Else
                                '    'Ver2.0.2.8 DO計測点個数(Output count)は完全ﾉｰﾀｯﾁとする。
                                '    'Ver2.0.2.9 復活
                                '    ''DO計測点個数 : 入力側の計測点個数と同じ ----------------------
                                '    .MotorPinNo = .udtChCommon.shtPinNo  ''pin_no(計測点個数)
                                'End If
                                .MotorPinNo = .udtChCommon.shtPinNo  ''pin_no(計測点個数)


                                ''DO Status ------------------------------------------------------
                                .MotorOutStatus1 = grdCHList(gCstChListColPosDoStatus1, intRow).Value.ToString
                                .MotorOutStatus2 = grdCHList(gCstChListColPosDoStatus2, intRow).Value.ToString
                                .MotorOutStatus3 = grdCHList(gCstChListColPosDoStatus3, intRow).Value.ToString
                                .MotorOutStatus4 = grdCHList(gCstChListColPosDoStatus4, intRow).Value.ToString
                                .MotorOutStatus5 = grdCHList(gCstChListColPosDoStatus5, intRow).Value.ToString
                                .MotorOutStatus6 = grdCHList(gCstChListColPosDoStatus6, intRow).Value.ToString
                                .MotorOutStatus7 = grdCHList(gCstChListColPosDoStatus7, intRow).Value.ToString
                                .MotorOutStatus8 = grdCHList(gCstChListColPosDoStatus8, intRow).Value.ToString

                                ''Use <-- Status Alarm -------------------------------------------
                                .MotorUse = IIf(grdCHList(gCstChListColPosStatusAlarm, intRow).Value, 1, 0)

                                ''Filter Coef ----------------------------------------------------
                                'Ver2.0.0.9 「12」を格納
                                'Ver2.0.1.9 空白なら「12」を格納
                                '.MotorDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                If NZf(grdCHList(gCstChListColPosFilterCoef, intRow).Value) = "" Then
                                    .MotorDiFilter = 12
                                Else
                                    .MotorDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                End If


                                ''Alarm Timer ----------------------------------------------------
                                .MotorFeedback = Val(grdCHList(gCstChListColPosAlarmTimeup, intRow).Value) * 10

                                ''Control Type ---------------------------------------------------
                                .MotorControl = CCInt(grdCHList(gCstChListColPosControlType, intRow).Value)

                                ''Pulse Width ----------------------------------------------------
                                .MotorWidth = Val(grdCHList(gCstChListColPosPulseWidth, intRow).Value)

                                ''m_repose_set ---------------------------------------------------
                                .udtChCommon.shtM_ReposeSet = .MotorUse

                                ''FeedBack Alarm -------------------------------------------------
                                .MotorAlarmUse = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), 0, 1)    ''Use

                                .MotorAlarmDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutDelayH, intRow).Value), _
                                                       gCstCodeChMotorDelayTimerNothing, CCInt(grdCHList(gCstChListColPosOutDelayH, intRow).Value))

                                .MotorAlarmSp1 = 0      ''規定値1(未使用)
                                .MotorAlarmSp2 = 0      ''規定値2(未使用)
                                .MotorAlarmHys1 = 0     ''ヒステリシス値(開処理用)(未使用)
                                .MotorAlarmHys2 = 0     ''ヒステリシス値(閉処理用)(未使用)
                                .MotorAlarmSt = 0       ''サンプリング時間(未使用)
                                .MotorAlarmVar = 0      ''変化量(未使用)

                                .MotorAlarmExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), gCstCodeChMotorExtGroupNothing, CCInt(grdCHList(gCstChListColPosOutExtgH, intRow).Value)) ''EXT.G
                                .MotorAlarmGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep1H, intRow).Value), gCstCodeChMotorGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosOutGrep1H, intRow).Value))   ''G.Rep1
                                .MotorAlarmGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep2H, intRow).Value), gCstCodeChMotorGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosOutGrep2H, intRow).Value))   ''G.Rep2
                                .MotorAlarmManualReposeState = 0 ''マニュアルリポーズ状態：無効
                                .MotorAlarmStatusInput = NZf(grdCHList(gCstChListColPosOutStatusH, intRow).Value).ToString
                                .MotorAlarmManualReposeSet = .MotorAlarmUse

                                ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする---------
                                bALflg = False
                                If .MotorUse = 1 Or .MotorAlarmUse = 1 Then
                                    If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                        bALflg = True
                                    End If
                                End If
                                'Ver2.0.2.0 ALフラグのON,OFF
                                .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                .MotorLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                .MotorAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                '仮設定機能対応（モーター）
                                Call Temporary_setup(3, intRow, intRow, 2)


                                '*****************************************************
                                'バルブチャンネル
                                '*****************************************************
                            Case gCstCodeChTypeValve

                                '' Ver1.11.1 2016.07.12  PWﾌﾗｸﾞを落とす
                                .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, False)

                                ''EXT Group ----------------------------------------------------
                                .udtChCommon.shtExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChCommonExtGroupNothing, CCInt(grdCHList(gCstChListColPosExtGrH, intRow).Value))         ''EXT.G H

                                ''G Repose 1 ---------------------------------------------------
                                .udtChCommon.shtGRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChCommonGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosGrep1H, intRow).Value))   ''G.Rep1 H

                                ''G Repose 2 ---------------------------------------------------
                                .udtChCommon.shtGRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChCommonGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosGrep2H, intRow).Value))   ''G.Rep2 H

                                ''マニュアルリポーズ：無効 -------------------------------------
                                .udtChCommon.shtM_Repose = 0

                                ''Delay --------------------------------------------------------
                                .udtChCommon.shtDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), gCstCodeChCommonDelayTimerNothing, CCInt(grdCHList(gCstChListColPosDelayH, intRow).Value))

                                ''Data Type ----------------------------------------------------
                                '.udtChCommon.shtData = grdCHList(gCstChListColPosDataType, intRow).Value

                                '' AI(4-20mA)の入力信号種別追加　ver1.4.0 2011.07.29
                                If CCShort(grdCHList(gCstChListColPosDataType, intRow).Value) > 100 Then                    ' PT->DO:118 (AI:18), PT->AO:120 (AI:20)
                                    .udtChCommon.shtData = CCShort(grdCHList(gCstChListColPosDataType, intRow).Value) - 100
                                Else                                                                                        ' その他
                                    .udtChCommon.shtData = CCShort(grdCHList(gCstChListColPosDataType, intRow).Value)
                                End If

                                If .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Then                                    ' データ種別 AI(4-20mA)->DO
                                    If grdCHList(gCstChListColPosDataType, intRow).FormattedValue = "AI(4-20mA) -> DO" Then     ' AI
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalAI
                                    ElseIf grdCHList(gCstChListColPosDataType, intRow).FormattedValue = "PT(4-20mA) -> DO" Then ' PT
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalPT
                                    Else                                                                                        ' その他
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalNothing
                                    End If
                                End If

                                If .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Then                                    ' データ種別 PT(4-20mA)->DO
                                    If grdCHList(gCstChListColPosDataType, intRow).FormattedValue = "AI(4-20mA) -> AO" Then     ' AI
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalAI
                                    ElseIf grdCHList(gCstChListColPosDataType, intRow).FormattedValue = "PT(4-20mA) -> AO" Then ' PT
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalPT
                                    Else                                                                                        ' その他
                                        .udtChCommon.shtSignal = gCstCodeChAnalogSignalNothing
                                    End If
                                End If

                                ''入力側 IN
                                'Ver2.0.1.2 データタイプ範囲修正
                                'AIであること
                                'If .udtChCommon.shtData >= gCstCodeChDataTypeValveDI_DO And .udtChCommon.shtData <= gCstCodeChDataTypeValvePT_AO2 Then
                                If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO1 Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValvePT_DO2 Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO1 Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypeValvePT_AO2 Then


                                    ''Status IN ------------------------------------------------
                                    If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                    Else
                                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                    End If

                                    intValue = cmbStatus.FindStringExact(grdCHList(gCstChListColPosStatusIn, intRow).Value)

                                    If intValue >= 0 Then
                                        cmbStatus.SelectedIndex = intValue
                                        .udtChCommon.shtStatus = cmbStatus.SelectedValue
                                        .udtChCommon.strStatus = ""
                                    Else
                                        .udtChCommon.shtStatus = gCstCodeChManualInputStatus  ''特殊コード（手入力）

                                        If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then

                                            .udtChCommon.strStatus = grdCHList(gCstChListColPosStatusIn, intRow).Value

                                        ElseIf .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO1 Or _
                                               .udtChCommon.shtData = gCstCodeChDataTypeValveAI_DO2 Then
                                            ''AI Status
                                            .ValveAiDoHiHiStatusInput = grdCHList(gCstChListColPosStaNmHH, intRow).Value
                                            .ValveAiDoHiStatusInput = grdCHList(gCstChListColPosStaNmH, intRow).Value
                                            .ValveAiDoLoStatusInput = grdCHList(gCstChListColPosStaNmL, intRow).Value
                                            .ValveAiDoLoLoStatusInput = grdCHList(gCstChListColPosStaNmLL, intRow).Value

                                        ElseIf .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO1 Or _
                                               .udtChCommon.shtData = gCstCodeChDataTypeValveAI_AO2 Then
                                            ''AI Status
                                            .ValveAiAoHiHiStatusInput = grdCHList(gCstChListColPosStaNmHH, intRow).Value
                                            .ValveAiAoHiStatusInput = grdCHList(gCstChListColPosStaNmH, intRow).Value
                                            .ValveAiAoLoStatusInput = grdCHList(gCstChListColPosStaNmL, intRow).Value
                                            .ValveAiAoLoLoStatusInput = grdCHList(gCstChListColPosStaNmLL, intRow).Value
                                        End If

                                    End If

                                    ''FU Address IN ----------------------------------------------
                                    intFuNo = 0 : intPortNo = 0 : intPin = 0
                                    intFuNo = CCInt2(grdCHList(gCstChListColPosFuAddress, intRow).Value)
                                    intPortNo = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                    intPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoIn) = 0 Then
                                        mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoIn)
                                    End If

                                    .udtChCommon.shtFuno = intFuNo          ''FU No
                                    .udtChCommon.shtPortno = intPortNo      ''Fu PortNo
                                    .udtChCommon.shtPin = intPin            ''Fu Pin

                                    ''Bit Count ---------------------------------------------------
                                    If .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then
                                        .udtChCommon.shtPinNo = Val(grdCHList(gCstChListColPosBitCount, intRow).Value)
                                    Else
                                        .udtChCommon.shtPinNo = 1
                                    End If

                                Else
                                    .udtChCommon.shtFuno = gCstCodeChCommonFuNoNothing          ''FU No
                                    .udtChCommon.shtPortno = gCstCodeChCommonPortNoNothing      ''Fu PortNo
                                    .udtChCommon.shtPin = gCstCodeChCommonPinNothing            ''Fu Pin
                                    .udtChCommon.shtPinNo = 0                                   ''Bit Count
                                End If

                                ''延長警報盤(EXT PANEL) --------------------------------------------
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveExt Then
                                    .udtChCommon.shtEccFunc = grdCHList(gCstChListColPosEccFunc, intRow).Value
                                End If

                                'Data Typeにより判断
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDI_DO Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDO Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom55 Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveExt Then

                                    ''<< DI -> DO >> << DO >> << DO(JACOM-22) >> << DO(EXT PANEL) >>

                                    ''Status OUT --------------------------------------------------
                                    Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                    '.ValveDiDoStatus = cmbStatus.SelectedIndex
                                    .ValveDiDoStatus = NZf(grdCHList(gCstChListColPosStatusOut, intRow).Value)


                                    ''出力 FU Address --------------------------------------------
                                    If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom Or _
                                       grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom55 Then

                                        'FuNoおよびPortNoは[0]固定
                                        .ValveDiDoFuNo = 0                                                                                                                                                              ''FU No
                                        .ValveDiDoPortNo = 0                                                                                                                                                            ''Fu PortNo
                                        'Ver2.0.1.2 参照場所修正
                                        '.ValveDiDoPin = IIf(Not IsNumeric(grdCHList(gCstChListColPosPinDoStart, intRow).Value), gCstCodeChNotSetFuPin, CCInt(grdCHList(gCstChListColPosPinDoStart, intRow).Value))      ''Port No
                                        .ValveDiDoPin = IIf(Not IsNumeric(grdCHList(gCstChListColPosPinAddress, intRow).Value), gCstCodeChNotSetFuPin, CCInt(grdCHList(gCstChListColPosPinAddress, intRow).Value))      ''Port No
                                    Else
                                        intFuNo = 0 : intPortNo = 0 : intPin = 0
                                        'Ver2.0.1.2 出力FUadr保存部修正
                                        'intFuNo = CCInt2(grdCHList(gCstChListColPosDoStart, intRow).Value)
                                        'intPortNo = CCInt2(grdCHList(gCstChListColPosPortDoStart, intRow).Value)
                                        'intPin = CCInt2(grdCHList(gCstChListColPosPinDoStart, intRow).Value)
                                        If grdCHList(gCstChListColPosDoStart, intRow).Value <> "" Then
                                            intFuNo = CCInt2(grdCHList(gCstChListColPosDoStart, intRow).Value)
                                            intPortNo = CCInt2(grdCHList(gCstChListColPosPortDoStart, intRow).Value)
                                            intPin = CCInt2(grdCHList(gCstChListColPosPinDoStart, intRow).Value)
                                        Else
                                            intFuNo = gCstCodeChNotSetFuNo          ''FU No:設定なし(FFFF)
                                            intPortNo = gCstCodeChNotSetFuPort      ''Fu PortNo:設定なし(FFFF)
                                            intPin = gCstCodeChNotSetFuPin          ''Fu PinNo:設定なし(FFFF)
                                        End If

                                        If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoOutValveDiDo, intPortNoOutValveDiDo, intPinOutValveDiDo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveDiDo) = 0 Then
                                            mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoOutValveDiDo, intPortNoOutValveDiDo, intPinOutValveDiDo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveDiDo)
                                        End If

                                        .ValveDiDoFuNo = intFuNo        ''FU No
                                        .ValveDiDoPortNo = intPortNo    ''Fu PortNo        
                                        .ValveDiDoPin = intPin          ''Fu Pin
                                    End If

                                    ''Bit Count -------------------------------------------------
                                    .ValveDiDoPinNo = Val(grdCHList(gCstChListColPosBitCount, intRow).Value)

                                    ''DO Status -------------------------------------------------
                                    If .ValveDiDoPinNo >= 1 Then .ValveDiDoOutStatus1 = grdCHList(gCstChListColPosDoStatus1, intRow).Value.ToString
                                    If .ValveDiDoPinNo >= 2 Then .ValveDiDoOutStatus2 = grdCHList(gCstChListColPosDoStatus2, intRow).Value.ToString
                                    If .ValveDiDoPinNo >= 3 Then .ValveDiDoOutStatus3 = grdCHList(gCstChListColPosDoStatus3, intRow).Value.ToString
                                    If .ValveDiDoPinNo >= 4 Then .ValveDiDoOutStatus4 = grdCHList(gCstChListColPosDoStatus4, intRow).Value.ToString
                                    If .ValveDiDoPinNo >= 5 Then .ValveDiDoOutStatus5 = grdCHList(gCstChListColPosDoStatus5, intRow).Value.ToString
                                    If .ValveDiDoPinNo >= 6 Then .ValveDiDoOutStatus6 = grdCHList(gCstChListColPosDoStatus6, intRow).Value.ToString
                                    If .ValveDiDoPinNo >= 7 Then .ValveDiDoOutStatus7 = grdCHList(gCstChListColPosDoStatus7, intRow).Value.ToString
                                    If .ValveDiDoPinNo >= 8 Then .ValveDiDoOutStatus8 = grdCHList(gCstChListColPosDoStatus8, intRow).Value.ToString

                                    ''Use <-- Status Alarm --------------------------------------
                                    .ValveDiDoUse = IIf(grdCHList(gCstChListColPosStatusAlarm, intRow).Value, 1, 0)

                                    ''Common(m_repose_set) --------------------------------------
                                    .udtChCommon.shtM_ReposeSet = .ValveDiDoUse

                                    ''Alarm Timeer -----------------------------------------------
                                    .ValveDiDoFeedback = Val(grdCHList(gCstChListColPosAlarmTimeup, intRow).Value) * 10

                                    ''Control Type -----------------------------------------------
                                    .ValveDiDoControl = CCInt(grdCHList(gCstChListColPosControlType, intRow).Value)

                                    ''Pulse Width ------------------------------------------------
                                    .ValveDiDoWidth = Val(grdCHList(gCstChListColPosPulseWidth, intRow).Value)

                                    ''Feedback Alarm　--------------------------------------------
                                    .ValveDiDoAlarmUse = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), 0, 1)    ''Use

                                    .ValveDiDoAlarmDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutDelayH, intRow).Value), _
                                                           gCstCodeChMotorDelayTimerNothing, CCInt(grdCHList(gCstChListColPosOutDelayH, intRow).Value))

                                    .ValveDiDoAlarmSp1 = 0      ''規定値1(未使用)
                                    .ValveDiDoAlarmSp2 = 0      ''規定値2(未使用)
                                    .ValveDiDoAlarmHys1 = 0     ''ヒステリシス値(開処理用)(未使用)
                                    .ValveDiDoAlarmHys2 = 0     ''ヒステリシス値(閉処理用)(未使用)
                                    .ValveDiDoAlarmSt = 0       ''サンプリング時間(未使用)
                                    .ValveDiDoAlarmVar = 0      ''変化量(未使用)

                                    .ValveDiDoAlarmExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), gCstCodeChValveExtGroupNothing, CCInt(grdCHList(gCstChListColPosOutExtgH, intRow).Value)) ''EXT.G
                                    .ValveDiDoAlarmGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep1H, intRow).Value), gCstCodeChValveGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosOutGrep1H, intRow).Value))   ''G.Rep1
                                    .ValveDiDoAlarmGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep2H, intRow).Value), gCstCodeChValveGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosOutGrep2H, intRow).Value))   ''G.Rep2
                                    .ValveDiDoAlarmStatusInput = NZf(grdCHList(gCstChListColPosOutStatusH, intRow).Value).ToString
                                    .ValveDiDoAlarmManualReposeState = 0                ''マニュアルリポーズ状態：無効
                                    .ValveDiDoAlarmManualReposeSet = .ValveDiDoAlarmUse ''マニュアルリポーズ

                                    ''コンポジット設定テーブルインデックス -------------------------
                                    If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDI_DO Then

                                        .ValveCompositeTableIndex = Val(grdCHList(gCstChListColPosComposite, intRow).Value)
                                        intValue = .ValveCompositeTableIndex - 1
                                        If intValue >= 0 Then
                                            With gudt.SetChComposite.udtComposite(intValue)

                                                ''コンポジットテーブルのCH No.も更新
                                                .shtChid = intChNo

                                                ''コンポジットテーブルを変更した可能性があるので、ダブっているCH No.をクリア
                                                For j As Integer = 0 To UBound(gudt.SetChComposite.udtComposite)
                                                    If j <> intValue Then
                                                        If gudt.SetChComposite.udtComposite(j).shtChid = intChNo Then
                                                            gudt.SetChComposite.udtComposite(j).shtChid = 0
                                                        End If
                                                    End If
                                                Next

                                            End With
                                        End If

                                    End If

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする ---
                                    bALflg = False
                                    If .ValveDiDoUse = 1 Or .ValveDiDoAlarmUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                    .ValveDiDoLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .ValveDiDoAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                ElseIf grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_DO1 Or _
                                       grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_DO2 Or _
                                       grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValvePT_DO2 Then

                                    ''<< AI -> DO >>

                                    ''AI アラーム情報
                                    ''EXT Group ----------------------------------------------------
                                    .ValveAiDoHiHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrHH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrHH, intRow).Value)       ''EXT.G HH
                                    .ValveAiDoHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrH, intRow).Value)           ''EXT.G H
                                    .ValveAiDoLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrL, intRow).Value)           ''EXT.G L
                                    .ValveAiDoLoLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrLL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrLL, intRow).Value)       ''EXT.G LL
                                    .ValveAiDoSensorFailExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrSF, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrSF, intRow).Value) ''EXT.G SF

                                    ''Delay --------------------------------------------------------
                                    .ValveAiDoHiHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayHH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayHH, intRow).Value)         ''Delay HH
                                    .ValveAiDoHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayH, intRow).Value)             ''Delay H
                                    .ValveAiDoLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayL, intRow).Value)             ''Delay L
                                    .ValveAiDoLoLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayLL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayLL, intRow).Value)         ''Delay LL
                                    .ValveAiDoSensorFailDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelaySF, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelaySF, intRow).Value)   ''Delay SF

                                    ''G Repose 1 ---------------------------------------------------
                                    .ValveAiDoHiHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1HH, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1HH, intRow).Value) ''G.Rep1 HH
                                    .ValveAiDoHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1H, intRow).Value)     ''G.Rep1 H
                                    .ValveAiDoLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1L, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1L, intRow).Value)     ''G.Rep1 L
                                    .ValveAiDoLoLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1LL, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1LL, intRow).Value) ''G.Rep1 LL

                                    ''G Repose 2 ---------------------------------------------------
                                    .ValveAiDoHiHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2HH, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2HH, intRow).Value) ''G.Rep2 HH
                                    .ValveAiDoHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2H, intRow).Value)     ''G.Rep2 H
                                    .ValveAiDoLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2L, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2L, intRow).Value)     ''G.Rep2 L
                                    .ValveAiDoLoLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2LL, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2LL, intRow).Value) ''G.Rep2 LL

                                    ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                                    intDecimalP = mGetDecimalPosition(intRow)

                                    ''Decimal Position --------------------------------------------
                                    .ValveAiDoDecimalPosition = intDecimalP

                                    ''Range -------------------------------------------------------
                                    strValue = grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString  ''Range Lo
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngLowValue = Int(grdCHList(gCstChListColPosRangeLo, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngLowValue.ToString.Length > 9 Then     ''桁あふれ回避の為に9桁まで
                                            lngLowValue = CCLong(lngLowValue.ToString.Substring(lngLowValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngLowValue = 0
                                    End If
                                    .ValveAiDoRangeLow = lngLowValue

                                    ''Range Hi
                                    strValue = grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngHiValue = Int(grdCHList(gCstChListColPosRangeHi, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngHiValue.ToString.Length > 9 Then      ''桁あふれ回避の為に9桁まで
                                            lngHiValue = CCLong(lngHiValue.ToString.Substring(lngHiValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngHiValue = 0
                                    End If
                                    .ValveAiDoRangeHigh = lngHiValue

                                    ''Use SF -----------------------------------------------------
                                    .ValveAiDoSensorFailUse = grdCHList(gCstChListColPosValueSF, intRow).Value

                                    ''Value, Use -------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosValueHH, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueHH, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiDoHiHiValue = lngValue  ''HIHI
                                        .ValveAiDoHiHiUse = 1
                                    Else
                                        .ValveAiDoHiHiValue = 0
                                        .ValveAiDoHiHiUse = 0
                                    End If

                                    If IsNumeric(grdCHList(gCstChListColPosValueH, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueH, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiDoHiValue = lngValue    ''HI
                                        .ValveAiDoHiUse = 1
                                    Else
                                        .ValveAiDoHiValue = 0
                                        .ValveAiDoHiUse = 0
                                    End If

                                    If IsNumeric(grdCHList(gCstChListColPosValueL, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueL, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiDoLoValue = lngValue    ''LO
                                        .ValveAiDoLoUse = 1
                                    Else
                                        .ValveAiDoLoValue = 0
                                        .ValveAiDoLoUse = 0
                                    End If

                                    If IsNumeric(grdCHList(gCstChListColPosValueLL, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueLL, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiDoLoLoValue = lngValue  ''LOLO
                                        .ValveAiDoLoLoUse = 1
                                    Else
                                        .ValveAiDoLoLoValue = 0
                                        .ValveAiDoLoLoUse = 0
                                    End If

                                    ''m_repose_set -----------------------------------------------
                                    If .ValveAiDoHiHiUse = 1 Then .ValveAiDoHiHiManualReposeSet = 1
                                    If .ValveAiDoHiUse = 1 Then .ValveAiDoHiManualReposeSet = 1
                                    If .ValveAiDoLoUse = 1 Then .ValveAiDoLoManualReposeSet = 1
                                    If .ValveAiDoLoLoUse = 1 Then .ValveAiDoLoLoManualReposeSet = 1
                                    If .ValveAiDoSensorFailUse = 1 Then .ValveAiDoSensorFailManualReposeSet = 1

                                    ''Common(m_repose_set)
                                    If .ValveAiDoHiHiUse = 1 Or .ValveAiDoHiUse = 1 Or .ValveAiDoLoUse = 1 Or .ValveAiDoLoLoUse = 1 Or .ValveAiDoSensorFailUse = 1 Then
                                        .udtChCommon.shtM_ReposeSet = 1
                                    End If

                                    ''Lo Normal -------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosNormalLo, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosNormalLo, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiDoNormalLow = lngValue
                                    Else
                                        .ValveAiDoNormalLow = gCstCodeChAlalogNormalRangeNothingLo
                                    End If

                                    ''Hi Normal --------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosNormalHi, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosNormalHi, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiDoNormalHigh = lngValue
                                    Else
                                        .ValveAiDoNormalHigh = gCstCodeChAlalogNormalRangeNothingHi
                                    End If

                                    ''Off Set ---------------------------------------------------
                                    intValue = Val(grdCHList(gCstChListColPosOffset, intRow).Value)
                                    .ValveAiDoOffsetValue = intValue

                                    ''Display1 <-- Strig ----------------------------------------
                                    .ValveAiDoString = Val(grdCHList(gCstChListColPosString, intRow).Value)

                                    ''CenterGraph <--display3 -----------------------------------
                                    .ValveAiDoDisplay3 = gBitSet(.ValveAiDoDisplay3, 0, IIf(grdCHList(gCstChListColPosCenterGraph, intRow).Value, True, False))

                                    ''display3(bit1, bit2) <-- SFの.useが1の場合、bit1, bit2をONにする ----
                                    If .ValveAiDoSensorFailUse = 1 Then
                                        .ValveAiDoDisplay3 = gBitSet(.ValveAiDoDisplay3, 1, True)
                                        .ValveAiDoDisplay3 = gBitSet(.ValveAiDoDisplay3, 2, True)
                                    Else
                                        'Ver2.0.2.0 一覧からのみ入力の場合
                                        If NZf(grdCHList(gCstChListColPosExtGrSF, intRow).Value) <> "" Then
                                            .ValveAiDoSensorFailUse = 1
                                            .ValveAiDoDisplay3 = gBitSet(.ValveAiDoDisplay3, 1, True)     ''Under
                                            .ValveAiDoDisplay3 = gBitSet(.ValveAiDoDisplay3, 2, True)     ''Over
                                        End If
                                    End If

                                    ''Unit ------------------------------------------------------
                                    'Ver2.0.4.3 unitで大文字小文字区別
                                    intValue = fnBackCmb(cmbUnit, grdCHList(gCstChListColPosUnit, intRow).Value)
                                    'intValue = cmbUnit.FindStringExact(grdCHList(gCstChListColPosUnit, intRow).Value)
                                    If intValue >= 0 Then
                                        cmbUnit.SelectedIndex = intValue
                                        .udtChCommon.shtUnit = cmbUnit.SelectedValue
                                        .udtChCommon.strUnit = ""
                                    Else
                                        .udtChCommon.shtUnit = gCstCodeChManualInputUnit  ''特殊コード（手入力）
                                        .udtChCommon.strUnit = grdCHList(gCstChListColPosUnit, intRow).Value
                                    End If

                                    ''未使用 -----------------------------------------------------
                                    .udtChCommon.shtExtGroup = gCstCodeChCommonExtGroupNothing          ''延長警報グループ
                                    .udtChCommon.shtDelay = gCstCodeChCommonDelayTimerNothing           ''ディレイタイマ値
                                    .udtChCommon.shtGRepose1 = gCstCodeChCommonGroupRepose1Nothing      ''グループリポーズ１
                                    .udtChCommon.shtGRepose2 = gCstCodeChCommonGroupRepose2Nothing      ''グループリポーズ２
                                    .udtChCommon.shtM_Repose = 0                                        ''マニュアルリポーズ：無効

                                    'Ver2.0.0.7 SFグループリポーズ1,2は未使用であるためFFセット
                                    .ValveAiDoSensorFailGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing
                                    .ValveAiDoSensorFailGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing


                                    ''Status OUT -------------------------------------------------
                                    'Ver2.0.1.2 STATUS OUTを修正
                                    'Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusDigital)
                                    '.ValveAiDoOutStatus = cmbStatus.SelectedIndex
                                    If IsNumeric(grdCHList(gCstChListColPosStatusOut, intRow).Value) = True Then
                                        .ValveAiDoOutStatus = NZf(grdCHList(gCstChListColPosStatusOut, intRow).Value)
                                    Else
                                        .ValveAiDoOutStatus = gCstCodeChManualInputStatus
                                    End If


                                    ''出力 FU Address --------------------------------------------
                                    strValue = ""
                                    intFuNo = 0 : intPortNo = 0 : intPin = 0
                                    intFuNo = CCInt2(grdCHList(gCstChListColPosDoStart, intRow).Value)
                                    intPortNo = CCInt2(grdCHList(gCstChListColPosPortDoStart, intRow).Value)
                                    intPin = CCInt2(grdCHList(gCstChListColPosPinDoStart, intRow).Value)

                                    If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoOutValveAiDo, intPortNoOutValveAiDo, intPinOutValveAiDo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveAiDo) = 0 Then
                                        mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoOutValveAiDo, intPortNoOutValveAiDo, intPinOutValveAiDo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveAiDo)
                                    End If

                                    .ValveAiDoFuNo = intFuNo        ''FU No
                                    .ValveAiDoPortNo = intPortNo    ''Fu PortNo        
                                    .ValveAiDoPin = intPin          ''Fu Pin

                                    ''Bit Count --------------------------------------------------
                                    .ValveAiDoPinNo = Val(grdCHList(gCstChListColPosBitCount, intRow).Value)

                                    ''DO Status --------------------------------------------------
                                    If .ValveAiDoPinNo >= 1 Then .ValveAiDoOutStatus1 = grdCHList(gCstChListColPosDoStatus1, intRow).Value.ToString
                                    If .ValveAiDoPinNo >= 2 Then .ValveAiDoOutStatus2 = grdCHList(gCstChListColPosDoStatus2, intRow).Value.ToString
                                    If .ValveAiDoPinNo >= 3 Then .ValveAiDoOutStatus3 = grdCHList(gCstChListColPosDoStatus3, intRow).Value.ToString
                                    If .ValveAiDoPinNo >= 4 Then .ValveAiDoOutStatus4 = grdCHList(gCstChListColPosDoStatus4, intRow).Value.ToString
                                    If .ValveAiDoPinNo >= 5 Then .ValveAiDoOutStatus5 = grdCHList(gCstChListColPosDoStatus5, intRow).Value.ToString
                                    If .ValveAiDoPinNo >= 6 Then .ValveAiDoOutStatus6 = grdCHList(gCstChListColPosDoStatus6, intRow).Value.ToString
                                    If .ValveAiDoPinNo >= 7 Then .ValveAiDoOutStatus7 = grdCHList(gCstChListColPosDoStatus7, intRow).Value.ToString
                                    If .ValveAiDoPinNo >= 8 Then .ValveAiDoOutStatus8 = grdCHList(gCstChListColPosDoStatus8, intRow).Value.ToString

                                    ''Alarm Timer ------------------------------------------------
                                    .ValveAiDoFeedback = Val(grdCHList(gCstChListColPosAlarmTimeup, intRow).Value) * 10

                                    ''Control Type -----------------------------------------------
                                    .ValveAiDoOutControl = CCInt(grdCHList(gCstChListColPosControlType, intRow).Value)

                                    ''Pulse Width ------------------------------------------------
                                    .ValveAiDoWidth = Val(grdCHList(gCstChListColPosPulseWidth, intRow).Value)

                                    ''Feedback Alarm ---------------------------------------------
                                    .ValveAiDoAlarmUse = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), 0, 1)    ''Use

                                    .ValveAiDoAlarmDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutDelayH, intRow).Value), _
                                                           gCstCodeChMotorDelayTimerNothing, CCInt(grdCHList(gCstChListColPosOutDelayH, intRow).Value))

                                    .ValveAiDoAlarmSp1 = Val(grdCHList(gCstChListColPosOutSp1, intRow).Value)    ''規定値1
                                    .ValveAiDoAlarmSp2 = Val(grdCHList(gCstChListColPosOutSp2, intRow).Value)    ''規定値2
                                    .ValveAiDoAlarmHys1 = Val(grdCHList(gCstChListColPosOutHys1, intRow).Value)  ''ヒステリシス値(開処理用)
                                    .ValveAiDoAlarmHys2 = Val(grdCHList(gCstChListColPosOutHys2, intRow).Value)  ''ヒステリシス値(閉処理用)
                                    .ValveAiDoAlarmSt = Val(grdCHList(gCstChListColPosOutSt, intRow).Value)      ''サンプリング時間
                                    .ValveAiDoAlarmVar = 0                                          ''変化量(未使用)

                                    .ValveAiDoAlarmExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), gCstCodeChValveExtGroupNothing, CCInt(grdCHList(gCstChListColPosOutExtgH, intRow).Value)) ''EXT.G
                                    .ValveAiDoAlarmGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep1H, intRow).Value), gCstCodeChValveGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosOutGrep1H, intRow).Value))   ''G.Rep1
                                    .ValveAiDoAlarmGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep2H, intRow).Value), gCstCodeChValveGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosOutGrep2H, intRow).Value))   ''G.Rep2
                                    .ValveAiDoAlarmStatusInput = NZf(grdCHList(gCstChListColPosOutStatusH, intRow).Value).ToString
                                    .ValveAiDoAlarmManualReposeState = 0                ''マニュアルリポーズ状態：無効
                                    .ValveAiDoAlarmManualReposeSet = .ValveAiDoAlarmUse ''マニュアルリポーズ

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする
                                    bALflg = False
                                    If .ValveAiDoHiHiUse = 1 Or .ValveAiDoHiUse = 1 Or .ValveAiDoLoUse = 1 Or .ValveAiDoLoLoUse = 1 Or .ValveAiDoSensorFailUse = 1 Or .ValveAiDoAlarmUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                    .ValveAiDoLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .ValveAiDoAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                ElseIf grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_AO1 Or _
                                       grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_AO2 Or _
                                       grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValvePT_AO2 Then

                                    ''<< AI -> AO >>

                                    ''アラーム情報
                                    ''EXT Group ----------------------------------------------------
                                    .ValveAiAoHiHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrHH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrHH, intRow).Value)       ''EXT.G HH
                                    .ValveAiAoHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrH, intRow).Value)           ''EXT.G H
                                    .ValveAiAoLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrL, intRow).Value)           ''EXT.G L
                                    .ValveAiAoLoLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrLL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrLL, intRow).Value)       ''EXT.G LL
                                    .ValveAiAoSensorFailExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrSF, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrSF, intRow).Value) ''EXT.G SF

                                    ''Delay --------------------------------------------------------
                                    .ValveAiAoHiHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayHH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayHH, intRow).Value)         ''Delay HH
                                    .ValveAiAoHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayH, intRow).Value)             ''Delay H
                                    .ValveAiAoLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayL, intRow).Value)             ''Delay L
                                    .ValveAiAoLoLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayLL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayLL, intRow).Value)         ''Delay LL
                                    .ValveAiAoSensorFailDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelaySF, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelaySF, intRow).Value)   ''Delay SF

                                    ''G Repose 1 ---------------------------------------------------
                                    .ValveAiAoHiHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1HH, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1HH, intRow).Value) ''G.Rep1 HH
                                    .ValveAiAoHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1H, intRow).Value)     ''G.Rep1 H
                                    .ValveAiAoLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1L, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1L, intRow).Value)     ''G.Rep1 L
                                    .ValveAiAoLoLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1LL, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1LL, intRow).Value) ''G.Rep1 LL

                                    ''G Repose 2 ---------------------------------------------------
                                    .ValveAiAoHiHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2HH, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2HH, intRow).Value) ''G.Rep2 HH
                                    .ValveAiAoHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2H, intRow).Value)     ''G.Rep2 H
                                    .ValveAiAoLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2L, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2L, intRow).Value)     ''G.Rep2 L
                                    .ValveAiAoLoLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2LL, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2LL, intRow).Value) ''G.Rep2 LL

                                    ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                                    intDecimalP = mGetDecimalPosition(intRow)

                                    ''Decimal Position --------------------------------------------
                                    .ValveAiAoDecimalPosition = intDecimalP

                                    ''Range -------------------------------------------------------
                                    strValue = grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString  ''Range Lo
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngLowValue = Int(grdCHList(gCstChListColPosRangeLo, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngLowValue.ToString.Length > 9 Then     ''桁あふれ回避の為に9桁まで
                                            lngLowValue = CCLong(lngLowValue.ToString.Substring(lngLowValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngLowValue = 0
                                    End If
                                    .ValveAiAoRangeLow = lngLowValue

                                    ''Range Hi
                                    strValue = grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngHiValue = Int(grdCHList(gCstChListColPosRangeHi, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngHiValue.ToString.Length > 9 Then      ''桁あふれ回避の為に9桁まで
                                            lngHiValue = CCLong(lngHiValue.ToString.Substring(lngHiValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngHiValue = 0
                                    End If
                                    .ValveAiAoRangeHigh = lngHiValue

                                    ''Use SF ------------------------------------------------------
                                    .ValveAiAoSensorFailUse = grdCHList(gCstChListColPosValueSF, intRow).Value

                                    ''Value, Use --------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosValueHH, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueHH, intRow).Value) * (10 ^ intDecimalP) + 0.5)  ''Value HH
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiAoHiHiValue = lngValue
                                        .ValveAiAoHiHiUse = 1
                                    Else
                                        .ValveAiAoHiHiValue = 0
                                        .ValveAiAoHiHiUse = 0
                                    End If

                                    If IsNumeric(grdCHList(gCstChListColPosValueH, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueH, intRow).Value) * (10 ^ intDecimalP) + 0.5)  ''Value H
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiAoHiValue = lngValue
                                        .ValveAiAoHiUse = 1
                                    Else
                                        .ValveAiAoHiValue = 0
                                        .ValveAiAoHiUse = 0
                                    End If

                                    If IsNumeric(grdCHList(gCstChListColPosValueL, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueL, intRow).Value) * (10 ^ intDecimalP) + 0.5)  ''Value L
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiAoLoValue = lngValue
                                        .ValveAiAoLoUse = 1
                                    Else
                                        .ValveAiAoLoValue = 0
                                        .ValveAiAoLoUse = 0
                                    End If

                                    If IsNumeric(grdCHList(gCstChListColPosValueLL, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueLL, intRow).Value) * (10 ^ intDecimalP) + 0.5)  ''Value LL
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiAoLoLoValue = lngValue
                                        .ValveAiAoLoLoUse = 1
                                    Else
                                        .ValveAiAoLoLoValue = 0
                                        .ValveAiAoLoLoUse = 0
                                    End If

                                    ''m_repose_set -----------------------------------------------
                                    If .ValveAiAoHiHiUse = 1 Then .ValveAiAoHiHiManualReposeSet = 1
                                    If .ValveAiAoHiUse = 1 Then .ValveAiAoHiManualReposeSet = 1
                                    If .ValveAiAoLoUse = 1 Then .ValveAiAoLoManualReposeSet = 1
                                    If .ValveAiAoLoLoUse = 1 Then .ValveAiAoLoLoManualReposeSet = 1
                                    If .ValveAiAoSensorFailUse = 1 Then .ValveAiAoSensorFailManualReposeSet = 1

                                    ''Common(m_repose_set) ---------------------------------------
                                    If .ValveAiAoHiHiUse = 1 Or .ValveAiAoHiUse = 1 Or .ValveAiAoLoUse = 1 Or .ValveAiAoLoLoUse = 1 Or .ValveAiAoSensorFailUse = 1 Then
                                        .udtChCommon.shtM_ReposeSet = 1
                                    End If

                                    ''Lo Normal --------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosNormalLo, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosNormalLo, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiAoNormalLow = lngValue
                                    Else
                                        .ValveAiAoNormalLow = gCstCodeChAlalogNormalRangeNothingLo
                                    End If

                                    ''Hi Normal --------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosNormalHi, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosNormalHi, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .ValveAiAoNormalHigh = lngValue
                                    Else
                                        .ValveAiAoNormalHigh = gCstCodeChAlalogNormalRangeNothingHi
                                    End If

                                    ''Off Set ----------------------------------------------------
                                    intValue = Val(grdCHList(gCstChListColPosOffset, intRow).Value)
                                    .ValveAiAoOffsetValue = intValue

                                    ''Display1 <-- Strig -----------------------------------------
                                    .ValveAiAoString = Val(grdCHList(gCstChListColPosString, intRow).Value)

                                    ''CenterGraph <--display3 ------------------------------------
                                    .ValveAiAoDisplay3 = gBitSet(.ValveAiAoDisplay3, 0, IIf(grdCHList(gCstChListColPosCenterGraph, intRow).Value, True, False))

                                    ''display3(bit1, bit2) <-- SFの.useが1の場合、bit1, bit2をONにする ---
                                    If .ValveAiAoSensorFailUse = 1 Then
                                        .ValveAiAoDisplay3 = gBitSet(.ValveAiAoDisplay3, 1, True)
                                        .ValveAiAoDisplay3 = gBitSet(.ValveAiAoDisplay3, 2, True)
                                    Else
                                        'Ver2.0.2.0 一覧からのみ入力の場合
                                        If NZf(grdCHList(gCstChListColPosExtGrSF, intRow).Value) <> "" Then
                                            .ValveAiAoSensorFailUse = 1
                                            .ValveAiAoDisplay3 = gBitSet(.ValveAiAoDisplay3, 1, True)     ''Under
                                            .ValveAiAoDisplay3 = gBitSet(.ValveAiAoDisplay3, 2, True)     ''Over
                                        End If
                                    End If

                                    ''Unit -------------------------------------------------------
                                    'Ver2.0.4.3 unitで大文字小文字区別
                                    intValue = fnBackCmb(cmbUnit, grdCHList(gCstChListColPosUnit, intRow).Value)
                                    'intValue = cmbUnit.FindStringExact(grdCHList(gCstChListColPosUnit, intRow).Value)
                                    If intValue >= 0 Then
                                        cmbUnit.SelectedIndex = intValue
                                        .udtChCommon.shtUnit = cmbUnit.SelectedValue
                                        .udtChCommon.strUnit = ""
                                    Else
                                        .udtChCommon.shtUnit = gCstCodeChManualInputUnit  ''特殊コード（手入力）
                                        .udtChCommon.strUnit = grdCHList(gCstChListColPosUnit, intRow).Value
                                    End If

                                    ''未使用 -----------------------------------------------------
                                    .udtChCommon.shtExtGroup = gCstCodeChCommonExtGroupNothing          ''延長警報グループ
                                    .udtChCommon.shtDelay = gCstCodeChCommonDelayTimerNothing           ''ディレイタイマ値
                                    .udtChCommon.shtGRepose1 = gCstCodeChCommonGroupRepose1Nothing      ''グループリポーズ１
                                    .udtChCommon.shtGRepose2 = gCstCodeChCommonGroupRepose2Nothing      ''グループリポーズ２
                                    .udtChCommon.shtM_Repose = 0                                        ''マニュアルリポーズ：無効

                                    ''Status OUT -------------------------------------------------
                                    Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                    .ValveAiDoOutStatus = cmbStatus.SelectedIndex

                                    ''Out FU Address --------------------------------------------
                                    strValue = ""
                                    intFuNo = 0 : intPortNo = 0 : intPin = 0
                                    intFuNo = CCInt2(grdCHList(gCstChListColPosDoStart, intRow).Value)
                                    intPortNo = CCInt2(grdCHList(gCstChListColPosPortDoStart, intRow).Value)
                                    intPin = CCInt2(grdCHList(gCstChListColPosPinDoStart, intRow).Value)

                                    If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoOutValveAiAo, intPortNoOutValveAiAo, intPinOutValveAiAo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveAiAo) = 0 Then
                                        mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoOutValveAiAo, intPortNoOutValveAiAo, intPinOutValveAiAo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveAiAo)
                                    End If

                                    .ValveAiAoFuNo = intFuNo        ''FU No
                                    .ValveAiAoPortNo = intPortNo    ''Fu PortNo        
                                    .ValveAiAoPin = intPin          ''Fu Pin

                                    ''Bit Count --------------------------------------------------
                                    .ValveAiAoPinNo = 1

                                    ''Alarm Timer ------------------------------------------------
                                    .ValveAiAoFeedback = Val(grdCHList(gCstChListColPosAlarmTimeup, intRow).Value) * 10

                                    ''Feedback Alarm ----------------------------------------------------------
                                    .ValveAiAoAlarmUse = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), 0, 1)    ''Use

                                    .ValveAiAoAlarmDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutDelayH, intRow).Value), _
                                                           gCstCodeChMotorDelayTimerNothing, CCInt(grdCHList(gCstChListColPosOutDelayH, intRow).Value))

                                    .ValveAiAoAlarmSp1 = Val(grdCHList(gCstChListColPosOutSp1, intRow).Value)    ''規定値1
                                    .ValveAiAoAlarmSp2 = Val(grdCHList(gCstChListColPosOutSp2, intRow).Value)    ''規定値2
                                    .ValveAiAoAlarmHys1 = Val(grdCHList(gCstChListColPosOutHys1, intRow).Value)  ''ヒステリシス値(開処理用)
                                    .ValveAiAoAlarmHys2 = Val(grdCHList(gCstChListColPosOutHys2, intRow).Value)  ''ヒステリシス値(閉処理用)
                                    .ValveAiAoAlarmSt = Val(grdCHList(gCstChListColPosOutSt, intRow).Value)      ''サンプリング時間
                                    .ValveAiAoAlarmVar = Val(grdCHList(gCstChListColPosOutVar, intRow).Value) * 10    ''変化量

                                    .ValveAiAoAlarmExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), gCstCodeChValveExtGroupNothing, CCInt(grdCHList(gCstChListColPosOutExtgH, intRow).Value)) ''EXT.G
                                    .ValveAiAoAlarmGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep1H, intRow).Value), gCstCodeChValveGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosOutGrep1H, intRow).Value))   ''G.Rep1
                                    .ValveAiAoAlarmGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep2H, intRow).Value), gCstCodeChValveGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosOutGrep2H, intRow).Value))   ''G.Rep2
                                    .ValveAiAoAlarmStatusInput = NZf(grdCHList(gCstChListColPosOutStatusH, intRow).Value).ToString
                                    .ValveAiAoAlarmManualReposeState = 0                ''マニュアルリポーズ状態：無効
                                    .ValveAiAoAlarmManualReposeSet = .ValveAiAoAlarmUse ''マニュアルリポーズ

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする ---
                                    bALflg = False
                                    If .ValveAiAoHiHiUse = 1 Or .ValveAiAoHiUse = 1 Or .ValveAiAoLoUse = 1 Or .ValveAiAoLoLoUse = 1 Or .ValveAiAoSensorFailUse = 1 Or .ValveAiAoAlarmUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                    .ValveAiAoLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .ValveAiAoAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                ElseIf grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAO_4_20 Then

                                    ''<< AO >> 
                                    .udtChCommon.shtExtGroup = gCstCodeChCommonExtGroupNothing          ''延長警報グループ
                                    .udtChCommon.shtDelay = gCstCodeChCommonDelayTimerNothing           ''ディレイタイマ値
                                    .udtChCommon.shtGRepose1 = gCstCodeChCommonGroupRepose1Nothing      ''グループリポーズ１
                                    .udtChCommon.shtGRepose2 = gCstCodeChCommonGroupRepose2Nothing      ''グループリポーズ２
                                    .udtChCommon.shtM_Repose = 0                                        ''マニュアルリポーズ：無効

                                    ''Status OUT --------------------------------------------------------------
                                    Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                    intValue = cmbStatus.FindStringExact(grdCHList(gCstChListColPosStatusOut, intRow).Value)
                                    If intValue >= 0 Then
                                        cmbStatus.SelectedIndex = intValue
                                        .ValveAiAoOutStatus = cmbStatus.SelectedValue
                                        .ValveAiAoOutStatus1 = ""
                                    Else
                                        .ValveAiAoOutStatus = gCstCodeChManualInputStatus  ''特殊コード（手入力）
                                        .ValveAiAoOutStatus1 = NZf(grdCHList(gCstChListColPosStatusOut, intRow).Value).ToString
                                    End If

                                    ''出力 FU Address ---------------------------------------------------------
                                    intFuNo = 0 : intPortNo = 0 : intPin = 0
                                    intFuNo = CCInt2(grdCHList(gCstChListColPosDoStart, intRow).Value)
                                    intPortNo = CCInt2(grdCHList(gCstChListColPosPortDoStart, intRow).Value)
                                    intPin = CCInt2(grdCHList(gCstChListColPosPinDoStart, intRow).Value)

                                    If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoOutValveAiAo, intPortNoOutValveAiAo, intPinOutValveAiAo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveAiAo) = 0 Then
                                        mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoOutValveAiAo, intPortNoOutValveAiAo, intPinOutValveAiAo, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoOutValveAiAo)
                                    End If

                                    .ValveAiAoFuNo = intFuNo        ''FU No
                                    .ValveAiAoPortNo = intPortNo    ''Fu PortNo        
                                    .ValveAiAoPin = intPin          ''Fu Pin

                                    ''Bit Count ---------------------------------------------------------------
                                    .ValveAiAoPinNo = 1

                                    ''Alarm Timer -------------------------------------------------------------
                                    .ValveAiAoFeedback = Val(grdCHList(gCstChListColPosAlarmTimeup, intRow).Value) * 10

                                    ''Feedback Alarm ----------------------------------------------------------
                                    .ValveAiAoAlarmUse = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), 0, 1)    ''Use

                                    .ValveAiAoAlarmDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutDelayH, intRow).Value), _
                                                           gCstCodeChMotorDelayTimerNothing, CCInt(grdCHList(gCstChListColPosOutDelayH, intRow).Value))

                                    .ValveAiAoAlarmSp1 = Val(grdCHList(gCstChListColPosOutSp1, intRow).Value)    ''規定値1
                                    .ValveAiAoAlarmSp2 = Val(grdCHList(gCstChListColPosOutSp2, intRow).Value)    ''規定値2
                                    .ValveAiAoAlarmHys1 = Val(grdCHList(gCstChListColPosOutHys1, intRow).Value)  ''ヒステリシス値(開処理用)
                                    .ValveAiAoAlarmHys2 = Val(grdCHList(gCstChListColPosOutHys2, intRow).Value)  ''ヒステリシス値(閉処理用)
                                    .ValveAiAoAlarmSt = Val(grdCHList(gCstChListColPosOutSt, intRow).Value)      ''サンプリング時間
                                    .ValveAiAoAlarmVar = Val(grdCHList(gCstChListColPosOutVar, intRow).Value) * 10    ''変化量

                                    .ValveAiAoAlarmExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutExtgH, intRow).Value), gCstCodeChValveExtGroupNothing, CCInt(grdCHList(gCstChListColPosOutExtgH, intRow).Value)) ''EXT.G
                                    .ValveAiAoAlarmGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep1H, intRow).Value), gCstCodeChValveGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosOutGrep1H, intRow).Value))   ''G.Rep1
                                    .ValveAiAoAlarmGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosOutGrep2H, intRow).Value), gCstCodeChValveGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosOutGrep2H, intRow).Value))   ''G.Rep2
                                    .ValveAiAoAlarmManualReposeState = 0                ''マニュアルリポーズ状態：無効
                                    .ValveAiAoAlarmManualReposeSet = .ValveAiAoAlarmUse ''マニュアルリポーズ

                                    ''Common(m_repose_set) --------------------------------------------------
                                    .udtChCommon.shtM_ReposeSet = .ValveAiAoAlarmUse

                                    ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                                    intDecimalP = mGetDecimalPosition(intRow)

                                    ''Decimal Position ------------------------------------------------------
                                    .ValveAiAoDecimalPosition = intDecimalP

                                    ''Range -----------------------------------------------------------------
                                    strValue = grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString  ''Range Lo
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngLowValue = Int(grdCHList(gCstChListColPosRangeLo, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngLowValue.ToString.Length > 9 Then     ''桁あふれ回避の為に9桁まで
                                            lngLowValue = CCLong(lngLowValue.ToString.Substring(lngLowValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngLowValue = 0
                                    End If
                                    .ValveAiAoRangeLow = lngLowValue

                                    ''Range Hi
                                    strValue = grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngHiValue = Int(grdCHList(gCstChListColPosRangeHi, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngHiValue.ToString.Length > 9 Then      ''桁あふれ回避の為に9桁まで
                                            lngHiValue = CCLong(lngHiValue.ToString.Substring(lngHiValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngHiValue = 0
                                    End If

                                    .ValveAiAoRangeHigh = lngHiValue

                                    ''Unit ------------------------------------------------------------------
                                    'Ver2.0.4.3 unitで大文字小文字区別
                                    intValue = fnBackCmb(cmbUnit, grdCHList(gCstChListColPosUnit, intRow).Value)
                                    'intValue = cmbUnit.FindStringExact(grdCHList(gCstChListColPosUnit, intRow).Value)
                                    If intValue >= 0 Then
                                        cmbUnit.SelectedIndex = intValue
                                        .udtChCommon.shtUnit = cmbUnit.SelectedValue
                                        .udtChCommon.strUnit = ""
                                    Else
                                        .udtChCommon.shtUnit = gCstCodeChManualInputUnit  ''特殊コード（手入力）
                                        .udtChCommon.strUnit = grdCHList(gCstChListColPosUnit, intRow).Value
                                    End If

                                    .ValveAiAoLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .ValveAiAoAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                    ''未使用↓ --------------------------------------------------------------
                                    .ValveAiAoHiHiExtGroup = gCstCodeChAnalogExtGroupNothing        ''EXT.G HH
                                    .ValveAiAoHiExtGroup = gCstCodeChAnalogExtGroupNothing          ''EXT.G H
                                    .ValveAiAoLoExtGroup = gCstCodeChAnalogExtGroupNothing          ''EXT.G L
                                    .ValveAiAoLoLoExtGroup = gCstCodeChAnalogExtGroupNothing        ''EXT.G LL
                                    .ValveAiAoSensorFailExtGroup = gCstCodeChAnalogExtGroupNothing  ''EXT.G SF

                                    .ValveAiAoHiHiDelay = gCstCodeChAnalogDelayTimerNothing         ''Delay HH
                                    .ValveAiAoHiDelay = gCstCodeChAnalogDelayTimerNothing           ''Delay H
                                    .ValveAiAoLoDelay = gCstCodeChAnalogDelayTimerNothing           ''Delay L
                                    .ValveAiAoLoLoDelay = gCstCodeChAnalogDelayTimerNothing         ''Delay LL
                                    .ValveAiAoSensorFailDelay = gCstCodeChAnalogDelayTimerNothing

                                    .ValveAiAoHiHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing ''G.Rep1 HH
                                    .ValveAiAoHiGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing   ''G.Rep1 H
                                    .ValveAiAoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing   ''G.Rep1 L
                                    .ValveAiAoLoLoGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing ''G.Rep1 LL
                                    .ValveAiAoSensorFailGroupRepose1 = gCstCodeChAnalogGroupRepose1Nothing

                                    .ValveAiAoHiHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing ''G.Rep2 HH
                                    .ValveAiAoHiGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing   ''G.Rep2 H
                                    .ValveAiAoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing   ''G.Rep2 L
                                    .ValveAiAoLoLoGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing ''G.Rep2 LL
                                    .ValveAiAoSensorFailGroupRepose2 = gCstCodeChAnalogGroupRepose2Nothing

                                    .ValveAiAoNormalLow = gCstCodeChAlalogNormalRangeNothingLo
                                    .ValveAiAoNormalHigh = gCstCodeChAlalogNormalRangeNothingHi

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする
                                    bALflg = False
                                    If .ValveAiAoAlarmUse = 1 Or .ValveAiAoAlarmUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                End If

                                .ValveAiAoLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応
                                'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                .ValveAiAoAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                '仮設定機能対応（バルブ）
                                Call Temporary_setup(4, intRow, intRow, 2)


                                '*****************************************************
                                'デジタルコンポジットチャンネル
                                '*****************************************************
                            Case gCstCodeChTypeComposite

                                '' Ver1.11.1 2016.07.12  PWﾌﾗｸﾞを落とす
                                .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, False)

                                .udtChCommon.shtExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChCommonExtGroupNothing, CCInt(grdCHList(gCstChListColPosExtGrH, intRow).Value))         ''EXT.G H
                                .udtChCommon.shtGRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChCommonGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosGrep1H, intRow).Value))   ''G.Rep1 H
                                .udtChCommon.shtGRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChCommonGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosGrep2H, intRow).Value))   ''G.Rep2 H
                                .udtChCommon.shtM_Repose = 0    ''マニュアルリポーズ：無効
                                .udtChCommon.shtDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), gCstCodeChCommonDelayTimerNothing, CCInt(grdCHList(gCstChListColPosDelayH, intRow).Value))

                                ''Data Type -----------------------------------------------------------------
                                .udtChCommon.shtData = grdCHList(gCstChListColPosDataType, intRow).Value

                                ''Status --------------------------------------------------------------------
                                If .udtChCommon.shtData = gCstCodeChDataTypeCompTankLevel Then
                                    .udtChCommon.shtStatus = gCstCodeChManualInputStatus

                                    strValue = Trim(grdCHList(gCstChListColPosStatusIn, intRow).Value)
                                    p = strValue.IndexOf("/")
                                    If p >= 0 Then
                                        .udtChCommon.strStatus = strValue.Substring(0, p).PadRight(8) & strValue.Substring(p + 1).PadRight(8)
                                    Else
                                        .udtChCommon.strStatus = strValue
                                    End If
                                Else
                                    .udtChCommon.shtStatus = 0
                                    .udtChCommon.strStatus = ""
                                End If

                                ''FU Address(DI Start) -------------------------------------------------------
                                intFuNo = 0 : intPortNo = 0 : intPin = 0
                                intFuNo = CCInt2(grdCHList(gCstChListColPosDiStart, intRow).Value)
                                intPortNo = CCInt2(grdCHList(gCstChListColPosPortDiStart, intRow).Value)
                                intPin = CCInt2(grdCHList(gCstChListColPosPinDiStart, intRow).Value)

                                If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoIn) = 0 Then
                                    mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn, Val(grdCHList(gCstChListColPosBitCount, intRow).Value), intPinNoIn)
                                End If

                                .udtChCommon.shtFuno = intFuNo                      ''FU No
                                .udtChCommon.shtPortno = intPortNo                  ''Fu PortNo
                                .udtChCommon.shtPin = intPin                        ''Fu Pin

                                ''計測点個数 ----------------------------------------------------------------
                                .udtChCommon.shtPinNo = Val(grdCHList(gCstChListColPosBitCount, intRow).Value)

                                ''コンポジット設定テーブルインデックス --------------------------------------
                                .CompositeTableIndex = grdCHList(gCstChListColPosComposite, intRow).Value
                                intValue = .CompositeTableIndex - 1

                                Dim intUseCount As Integer = 0
                                With gudt.SetChComposite.udtComposite(intValue)

                                    ''コンポジットテーブルのCH No.も更新
                                    .shtChid = intChNo

                                    ''コンポジットテーブルを変更した可能性があるので、ダブっているCH No.をクリア
                                    For j As Integer = 0 To UBound(gudt.SetChComposite.udtComposite)
                                        If j <> intValue Then
                                            If gudt.SetChComposite.udtComposite(j).shtChid = intChNo Then
                                                gudt.SetChComposite.udtComposite(j).shtChid = 0
                                            End If
                                        End If
                                    Next

                                    ''comp_inf　コンポジット設定値情報(9ﾊﾟﾀｰﾝ分)
                                    For j As Integer = 0 To UBound(.udtCompInf)
                                        If .udtCompInf(j).bytAlarmUse <> 0 Then intUseCount += 1
                                    Next

                                End With

                                ''m_repose_set -------------------------------------------------------------
                                .udtChCommon.shtM_ReposeSet = IIf(intUseCount = 0, 0, 1)

                                ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする ---
                                bALflg = False
                                If intUseCount > 0 Then
                                    If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                        bALflg = True
                                    End If
                                End If
                                'Ver2.0.2.0 ALフラグのON,OFF
                                .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                .CompositeLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                .CompositeAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)

                                '仮設定機能対応（コンポジット）
                                Call Temporary_setup(5, intRow, intRow, 2)


                                '*****************************************************
                                'パルスチャンネル
                                '*****************************************************
                            Case gCstCodeChTypePulse

                                '' Ver1.11.1 2016.07.12  PWﾌﾗｸﾞを落とす
                                .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, False)

                                .udtChCommon.shtExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChCommonExtGroupNothing, CCInt(grdCHList(gCstChListColPosExtGrH, intRow).Value))         ''EXT.G H
                                .udtChCommon.shtGRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChCommonGroupRepose1Nothing, CCInt(grdCHList(gCstChListColPosGrep1H, intRow).Value))   ''G.Rep1 H
                                .udtChCommon.shtGRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChCommonGroupRepose2Nothing, CCInt(grdCHList(gCstChListColPosGrep2H, intRow).Value))   ''G.Rep2 H
                                .udtChCommon.shtM_Repose = 0                                                            ''マニュアルリポーズ：無効
                                .udtChCommon.shtDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), gCstCodeChCommonDelayTimerNothing, CCInt(grdCHList(gCstChListColPosDelayH, intRow).Value))

                                ''FU Address ---------------------------------------------------------------
                                '' Ver1.11.8.3 2016.11.08  運転積算 通信CH追加
                                '' Ver1.12.0.1 2017.01.13  運転積算種類追加
                                ' Ver2.0.6.1 通信ﾁｬﾝﾈﾙ追加
                                'If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypePulseExtDev Or _
                                '   grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypePulseRevoExtDev Then
                                If grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypePulseExtDev And _
                                    grdCHList(gCstChListColPosDataType, intRow).Value <= gCstCodeChDataTypePulseRevoExtDevLapMin Then

                                    intFuNo = 0 : intPortNo = 0 : intPin = 0
                                    intFuNo = CCInt2(grdCHList(gCstChListColPosFuAddress, intRow).Value)
                                    intPortNo = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                    intPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    .udtChCommon.shtFuno = 0                ''FU No
                                    .udtChCommon.shtPortno = intPortNo      ''Fu PortNo
                                    .udtChCommon.shtPin = intPin            ''Fu Pin
                                    .udtChCommon.shtPinNo = 1               ''計測点個数：1

                                Else
                                    intFuNo = 0 : intPortNo = 0 : intPin = 0
                                    intFuNo = CCInt2(grdCHList(gCstChListColPosFuAddress, intRow).Value)
                                    intPortNo = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                    intPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                    If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn) = 0 Then
                                        mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn)
                                    End If

                                    .udtChCommon.shtFuno = intFuNo          ''FU No
                                    .udtChCommon.shtPortno = intPortNo      ''Fu PortNo
                                    .udtChCommon.shtPin = intPin            ''Fu Pin
                                    .udtChCommon.shtPinNo = 1               ''計測点個数：1
                                End If

                                ''Unit ---------------------------------------------------------------------
                                'Ver2.0.4.3 unitで大文字小文字区別
                                intValue = fnBackCmb(cmbUnit, grdCHList(gCstChListColPosUnit, intRow).Value)
                                'intValue = cmbUnit.FindStringExact(grdCHList(gCstChListColPosUnit, intRow).Value)
                                If intValue >= 0 Then
                                    cmbUnit.SelectedIndex = intValue
                                    .udtChCommon.shtUnit = cmbUnit.SelectedValue
                                    .udtChCommon.strUnit = ""
                                Else
                                    .udtChCommon.shtUnit = gCstCodeChManualInputUnit  ''特殊コード（手入力）
                                    .udtChCommon.strUnit = grdCHList(gCstChListColPosUnit, intRow).Value
                                End If

                                ''Status -------------------------------------------------------------------
                                Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusPulse)
                                intValue = cmbStatus.FindStringExact(grdCHList(gCstChListColPosStatusIn, intRow).Value)
                                If intValue >= 0 Then
                                    cmbStatus.SelectedIndex = intValue
                                    .udtChCommon.shtStatus = cmbStatus.SelectedValue
                                    .udtChCommon.strStatus = ""
                                Else
                                    .udtChCommon.shtStatus = gCstCodeChManualInputStatus  ''特殊コード（手入力）
                                    .udtChCommon.strStatus = grdCHList(gCstChListColPosStaNmH, intRow).Value
                                End If

                                ''m_repose_set -------------------------------------------------------------
                                'T.Ueki(パルスと積算は強制的に設定)
                                .udtChCommon.shtM_ReposeSet = 1

                                ''T.Ueki
                                'If .udtChCommon.shtExtGroup = 0 Then
                                '    .udtChCommon.shtM_ReposeSet = 0
                                'Else
                                '    .udtChCommon.shtM_ReposeSet = 1
                                'End If

                                ''Data Type ----------------------------------------------------------------
                                .udtChCommon.shtData = grdCHList(gCstChListColPosDataType, intRow).Value


                                '仮設定機能対応（パルス）
                                Call Temporary_setup(6, intRow, intRow, 2)

                                ''Data Typeから、パルスCH or 積算CH の判定をする
                                If .udtChCommon.shtData < gCstCodeChDataTypePulseRevoTotalHour Or _
                                    .udtChCommon.shtData = gCstCodeChDataTypePulseExtDev Then
                                    ''< パルスCH >

                                    ''Use ------------------------------------------------------------------
                                    '.PulseUse = IIf(Val(grdCHList(gCstChListColPosValueH, intRow).Value) > 0, 1, 0)
                                    '.PulseUse = IIf(Val(grdCHList(gCstChListColPosOutExtgH, intRow).Value) >= 0, 1, 0)
                                    .PulseUse = IIf(grdCHList(gCstChListColPosStatusAlarm, intRow).Value, 1, 0)

                                    ''Filter Coef ----------------------------------------------------------
                                    'Ver2.0.0.9 「2」を格納
                                    'Ver2.0.1.9 空白なら「2」を格納
                                    '.PulseDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                    If NZf(grdCHList(gCstChListColPosFilterCoef, intRow).Value) = "" Then
                                        .PulseDiFilter = 2
                                    Else
                                        .PulseDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                    End If


                                    ''Decimal Point --------------------------------------------------------
                                    'Ver2.0.2.0 DecPoint処理変更
                                    ''T.Ueki
                                    'If Val(grdCHList(gCstChListColPosDecimalPoint, intRow).Value) = 0 Then
                                    '    .PulseDecPoint = 0
                                    'Else
                                    '    .PulseDecPoint = Val(grdCHList(gCstChListColPosDecimalPoint, intRow).Value)
                                    'End If
                                    ''.PulseDecPoint = Val(grdCHList(gCstChListColPosDecimalPoint, intRow).Value)

                                    intDecimalP = mGetDecimalPosition(intRow)
                                    .PulseDecPoint = intDecimalP
                                    intDecimalP = .PulseDecPoint



                                    ''Value H --------------------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosValueH, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        lngValue = Int(Val(grdCHList(gCstChListColPosValueH, intRow).Value) * (10 ^ intDecimalP) + 0.5)  ''Value H
                                        If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                            lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        End If
                                        .PulseValue = lngValue
                                    Else
                                        .PulseValue = 0
                                    End If

                                    ''Strig ---------------------------------------------------------------
                                    .PulseString = Val(grdCHList(gCstChListColPosString, intRow).Value)

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする ---
                                    bALflg = False
                                    If .PulseUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                    .PulseLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .PulseAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)
                                Else
                                    ''< 積算CH >

                                    ''Use ------------------------------------------------------------------
                                    .RevoUse = IIf(Val(grdCHList(gCstChListColPosValueH, intRow).Value) > 0, 1, 0)

                                    ''Filter Coef ----------------------------------------------------------
                                    'Ver2.0.0.9 「2」を格納
                                    'Ver2.0.1.9 空白なら「2」を格納
                                    '.RevoDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                    If NZf(grdCHList(gCstChListColPosFilterCoef, intRow).Value) = "" Then
                                        .RevoDiFilter = 2
                                    Else
                                        .RevoDiFilter = Val(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                    End If


                                    ''Decimal Point --------------------------------------------------------
                                    '.RevoDecPoint = Val(grdCHList(gCstChListColPosDecimalPoint, intRow).Value)
                                    'intDecimalP = .RevoDecPoint
                                    '少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                                    intDecimalP = mGetDecimalPosition(intRow)
                                    .RevoDecPoint = intDecimalP

                                    ''Value H --------------------------------------------------------------
                                    If IsNumeric(grdCHList(gCstChListColPosValueH, intRow).Value) Then
                                        ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                        '' ver1.4.3 2012.03.23 RHの時分データ分割対応
                                        'lngValue = Int(Val(grdCHList(gCstChListColPosValueH, intRow).Value) * (10 ^ intDecimalP) + 0.5)  ''Value H
                                        'If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                        '    lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                        'End If
                                        '.RevoValue = lngValue
                                        If intDecimalP = 2 Then     '' 時分
                                            lngValue = (Int(Val(grdCHList(gCstChListColPosValueH, intRow).Value))) << 8     '' 時(8ビットシフト)
                                            p1 = grdCHList(gCstChListColPosValueH, intRow).Value.IndexOf(".")               '' 小数点位置取得
                                            lngValue = lngValue + (Int(Val(grdCHList(gCstChListColPosValueH, intRow).Value.Substring(p1 + 1, 2))))  ''時 + 分(小数点以下値)
                                            .RevoValue = lngValue
                                        Else
                                            lngValue = Int(Val(grdCHList(gCstChListColPosValueH, intRow).Value))
                                            .RevoValue = lngValue
                                        End If
                                    Else
                                        .RevoValue = 0
                                    End If

                                    ''Strig -----------------------------------------------------------------
                                    .RevoString = Val(grdCHList(gCstChListColPosString, intRow).Value)

                                    ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする ---
                                    bALflg = False
                                    If .RevoUse = 1 Then
                                        If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                            bALflg = True
                                        End If
                                    End If
                                    'Ver2.0.2.0 ALフラグのON,OFF
                                    .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                    ''積算トリガCH -----------------------------------------------------------
                                    '.RevoTrigerChid = Val(grdCHList(mcstTriggerCH, intRow).Value)
                                    .RevoTrigerChid = mGetTriggerCH(CCInt(grdCHList(gCstChListColPosChNo, intRow).Value))

                                    .RevoLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value      '' 2015.11.12 Ver1.7.8  ﾛｲﾄﾞ対応

                                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                                    .RevoAlmMimic = IIf(Not IsNumeric(grdCHList(gCstChListColPosAlmMimic, intRow).Value), 0, grdCHList(gCstChListColPosAlmMimic, intRow).Value)
                                End If

                                ''↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
                                ''↓↓↓ 外部機器通信の場合 処理追加 K.Tanigawa 2012/01/06
                                ''外部機器の場合のFU Address -------------------------------
                                ''Data Typeにより判断
                                '' Ver1.11.8.3 2016.11.08 運転積算 通信CH追加
                                '' Ver1.12.0.1 2017.01.13  運転積算種類追加
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypePulseExtDev Or _
                                    grdCHList(gCstChListColPosDataType, intRow).Value >= gCstCodeChDataTypePulseRevoExtDev Then
                                    ' K.Tanigawa 2012/01/06 MODBUS の場合 
                                    .udtChCommon.shtFuno = 0
                                    .udtChCommon.shtPinNo = 1                   ''計測点個数：1固定
                                End If
                                ''↑↑↑ 外部危機通信の場合 処理追加 K.Tanigawa 2012/01/06
                                ''↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑

                                '********************************************************
                                'PIDチャンネル
                                '********************************************************
                            Case gCstCodeChTypePID

                                ''EXT Group ----------------------------------------------------
                                .PidHiHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrHH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrHH, intRow).Value)         ''EXT.G HH
                                .PidHiExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrH, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrH, intRow).Value)             ''EXT.G H
                                .PidLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrL, intRow).Value)             ''EXT.G L
                                .PidLoLoExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrLL, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrLL, intRow).Value)         ''EXT.G LL
                                .PidSensorFailExtGroup = IIf(Not IsNumeric(grdCHList(gCstChListColPosExtGrSF, intRow).Value), gCstCodeChAnalogExtGroupNothing, grdCHList(gCstChListColPosExtGrSF, intRow).Value)   ''EXT.G SF

                                ''Delay --------------------------------------------------------
                                .PidHiHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayHH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayHH, intRow).Value)        ''Delay HH
                                .PidHiDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayH, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayH, intRow).Value)            ''Delay H
                                .PidLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayL, intRow).Value)            ''Delay L
                                .PidLoLoDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelayLL, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelayLL, intRow).Value)        ''Delay LL
                                .PidSensorFailDelay = IIf(Not IsNumeric(grdCHList(gCstChListColPosDelaySF, intRow).Value), gCstCodeChAnalogDelayTimerNothing, grdCHList(gCstChListColPosDelaySF, intRow).Value)  ''Delay SF

                                ''G Repose 1 ---------------------------------------------------
                                .PidHiHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1HH, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1HH, intRow).Value) ''G.Rep1 HH
                                .PidHiGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1H, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1H, intRow).Value)     ''G.Rep1 H
                                .PidLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1L, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1L, intRow).Value)     ''G.Rep1 L
                                .PidLoLoGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1LL, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1LL, intRow).Value) ''G.Rep1 LL
                                .PidSensorFailGroupRepose1 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep1SF, intRow).Value), gCstCodeChAnalogGroupRepose1Nothing, grdCHList(gCstChListColPosGrep1SF, intRow).Value)

                                ''G Repose 2 ---------------------------------------------------
                                .PidHiHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2HH, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2HH, intRow).Value) ''G.Rep2 HH
                                .PidHiGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2H, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2H, intRow).Value)     ''G.Rep2 H
                                .PidLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2L, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2L, intRow).Value)     ''G.Rep2 L
                                .PidLoLoGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2LL, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2LL, intRow).Value) ''G.Rep2 LL
                                .PidSensorFailGroupRepose2 = IIf(Not IsNumeric(grdCHList(gCstChListColPosGrep2SF, intRow).Value), gCstCodeChAnalogGroupRepose2Nothing, grdCHList(gCstChListColPosGrep2SF, intRow).Value)

                                ''Data Type ----------------------------------------------------
                                .udtChCommon.shtData = CCShort(grdCHList(gCstChListColPosDataType, intRow).Value)


                                ''FU Address ---------------------------------------------------
                                Select Case grdCHList(gCstChListColPosDataType, intRow).Value
                                    Case Else

                                        intFuNo = 0 : intPortNo = 0 : intPin = 0
                                        intFuNo = CCInt2(grdCHList(gCstChListColPosFuAddress, intRow).Value)
                                        intPortNo = CCInt2(grdCHList(gCstChListColPosPortAddress, intRow).Value)
                                        intPin = CCInt2(grdCHList(gCstChListColPosPinAddress, intRow).Value)

                                        If mChangeCableMark(blnCopyRow, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn) = 0 Then
                                            mChangeFuAddress(intChNo, intFuNo, intPortNo, intPin, intFuNoIn, intPortNoIn, intPinIn)
                                        End If

                                        .udtChCommon.shtFuno = intFuNo
                                        .udtChCommon.shtPortno = intPortNo
                                        .udtChCommon.shtPin = intPin

                                End Select

                                '計測点個数については[1]固定
                                .udtChCommon.shtPinNo = 1

                                'EccFuncは0固定
                                .udtChCommon.shtEccFunc = 0


                                ''Status --------------------------------------------------------
                                'CHのステータスとセット値関係処理
                                Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                                intValue = cmbStatus.FindStringExact(grdCHList(gCstChListColPosStatusIn, intRow).Value)
                                'ｽﾃｰﾀｽとｱﾗｰﾑに矛盾があればマニュアル化
                                If intValue >= 0 Then
                                    If fnAnalogStatusAlarmRel(grdCHList(gCstChListColPosStatusIn, intRow).Value, intRow) < 0 Then
                                        intValue = -1
                                    End If
                                End If
                                If intValue >= 0 Then
                                    cmbStatus.SelectedIndex = intValue
                                    .udtChCommon.shtStatus = cmbStatus.SelectedValue
                                    .udtChCommon.strStatus = ""
                                Else
                                    .udtChCommon.shtStatus = gCstCodeChManualInputStatus  ''特殊コード（手入力）

                                    .PidHiHiStatusInput = grdCHList(gCstChListColPosStaNmHH, intRow).Value
                                    .PidHiStatusInput = grdCHList(gCstChListColPosStaNmH, intRow).Value
                                    .PidLoStatusInput = grdCHList(gCstChListColPosStaNmL, intRow).Value
                                    .PidLoLoStatusInput = grdCHList(gCstChListColPosStaNmLL, intRow).Value
                                End If

                                'Range --------------------------------------------------------
                                If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypePID_3_Pt100_2 Or _
                                   grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypePID_4_Pt100_3 Then
                                    'Pt100 2線式,3線式

                                    'Decimal Position ------------------------------------------
                                    .PidDecimalPosition = mGetDecimalPosition(intRow)
                                    intDecimalP = .PidDecimalPosition

                                    'RangeType は DataType が2,3線式の場合のみ設定
                                    .PidRangeType = CCShort(grdCHList(gCstChListColPosRangeType, intRow).Value)

                                    .PidRangeLow = NZfZero(grdCHList(gCstChListColPosRangeLo, intRow).Value) * (10 ^ intDecimalP) + 0.5   'Range Low
                                    .PidRangeHigh = NZfZero(grdCHList(gCstChListColPosRangeHi, intRow).Value) * (10 ^ intDecimalP) + 0.5  'Range Hi
                                Else
                                    '1-5V,4-20mA,K
                                    ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                                    intDecimalP = mGetDecimalPosition(intRow)

                                    'Decimal Position ------------------------------------------
                                    .PidDecimalPosition = intDecimalP

                                    'Range -----------------------------------------------------
                                    .PidRangeType = 0    'RangeType

                                    'DataTypeが K, 1-5 V, 4-20 mAの場合は手入力したレンジを設定
                                    strValue = grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString  'Range Lo
                                    If strValue <> "" Then
                                        ''小数以下桁合わせ
                                        lngLowValue = Int(grdCHList(gCstChListColPosRangeLo, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngLowValue.ToString.Length > 9 Then     '桁あふれ回避の為に9桁まで
                                            lngLowValue = CCLong(lngLowValue.ToString.Substring(lngLowValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngLowValue = 0
                                    End If
                                    .PidRangeLow = lngLowValue   'Range Low

                                    strValue = grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString
                                    If strValue <> "" Then
                                        '小数以下桁合わせ
                                        lngHiValue = Int(grdCHList(gCstChListColPosRangeHi, intRow).Value * (10 ^ intDecimalP) + 0.5)
                                        If lngHiValue.ToString.Length > 9 Then      '桁あふれ回避の為に9桁まで
                                            lngHiValue = CCLong(lngHiValue.ToString.Substring(lngHiValue.ToString.Length - 9))
                                        End If
                                    Else
                                        lngHiValue = 0
                                    End If
                                    .PidRangeHigh = lngHiValue   'Range Hi

                                End If


                                ''Use SF -------------------------------------------------------
                                Dim intSFbit As Integer = grdCHList(gCstChListColPosValueSF, intRow).Value
                                If intSFbit = 0 Then    '' Not Use
                                    .PidSensorFailUse = 0
                                    .PidDisplay3 = gBitSet(.PidDisplay3, 1, False)    ''Under
                                    .PidDisplay3 = gBitSet(.PidDisplay3, 2, False)    ''Over
                                    '一覧からのみ入力の場合
                                    If NZf(grdCHList(gCstChListColPosExtGrSF, intRow).Value) <> "" Then
                                        .PidSensorFailUse = 1
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 1, True)     ''Under
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 2, True)     ''Over
                                    End If
                                Else
                                    .PidSensorFailUse = 1
                                    If intSFbit = 3 Then    ''Overのみ
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 1, False)    ''Under
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 2, True)     ''Over
                                    ElseIf intSFbit = 2 Then    ''Underのみ
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 1, True)     ''Under
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 2, False)    ''Over
                                    Else
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 1, True)     ''Under
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 2, True)     ''Over
                                    End If

                                    'ｾﾝｻｰﾌｪｲﾙのExが入っていなければﾌﾗｸﾞを落とす
                                    If NZf(grdCHList(gCstChListColPosExtGrSF, intRow).Value) = "" Then
                                        .PidSensorFailUse = 0
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 1, False)     ''Under
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 2, False)     ''Over
                                    End If
                                End If


                                ''Value, Use ---------------------------------------------------
                                '小数点桁合わせ
                                .PidHiHiValue = BeamSsmallNumber(gCstChListColPosValueHH, intRow, intDecimalP)(1)
                                .PidHiHiUse = BeamSsmallNumber(gCstChListColPosValueHH, intRow, intDecimalP)(2)

                                .PidHiValue = BeamSsmallNumber(gCstChListColPosValueH, intRow, intDecimalP)(1)
                                .PidHiUse = BeamSsmallNumber(gCstChListColPosValueH, intRow, intDecimalP)(2)

                                .PidLoValue = BeamSsmallNumber(gCstChListColPosValueL, intRow, intDecimalP)(1)
                                .PidLoUse = BeamSsmallNumber(gCstChListColPosValueL, intRow, intDecimalP)(2)

                                .PidLoLoValue = BeamSsmallNumber(gCstChListColPosValueLL, intRow, intDecimalP)(1)
                                .PidLoLoUse = BeamSsmallNumber(gCstChListColPosValueLL, intRow, intDecimalP)(2)

                                ''m_repose_set -------------------------------------------------
                                If .PidHiHiUse = 1 Then .PidHiHiManualReposeSet = 1
                                If .PidHiUse = 1 Then .PidHiManualReposeSet = 1
                                If .PidLoUse = 1 Then .PidLoManualReposeSet = 1
                                If .PidLoLoUse = 1 Then .PidLoLoManualReposeSet = 1
                                If .PidSensorFailUse = 1 Then .PidSensorFailManualReposeSet = 1

                                .udtChCommon.shtM_ReposeSet = inMRsetBF

                                ''Lo Normal -----------------------------------------------------
                                If IsNumeric(grdCHList(gCstChListColPosNormalLo, intRow).Value) Then
                                    ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                    lngValue = Int(Val(grdCHList(gCstChListColPosNormalLo, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                    If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                        lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                    End If
                                    .PidNormalLow = lngValue
                                Else
                                    .PidNormalLow = gCstCodeChAlalogNormalRangeNothingLo
                                End If

                                ''Hi Normal　----------------------------------------------------
                                If IsNumeric(grdCHList(gCstChListColPosNormalHi, intRow).Value) Then
                                    ''小数以下桁合わせ　ver.1.4.0 2011.09.30
                                    lngValue = Int(Val(grdCHList(gCstChListColPosNormalHi, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                    If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                        lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                    End If
                                    .PidNormalHigh = lngValue
                                Else
                                    .PidNormalHigh = gCstCodeChAlalogNormalRangeNothingHi
                                End If

                                ''Off Set -------------------------------------------------------
                                intValue = Val(grdCHList(gCstChListColPosOffset, intRow).Value)
                                .PidOffsetValue = intValue

                                ''Unit ----------------------------------------------------------
                                '' 単位の大文字・小文字を区別するための関数追加
                                If ChkUnitType(grdCHList(gCstChListColPosUnit, intRow).Value) = False Then
                                    intValue = -1
                                Else
                                    'unitで大文字小文字区別
                                    intValue = fnBackCmb(cmbUnit, grdCHList(gCstChListColPosUnit, intRow).Value)
                                End If
                                If intValue >= 0 Then
                                    cmbUnit.SelectedIndex = intValue
                                    .udtChCommon.shtUnit = cmbUnit.SelectedValue
                                    .udtChCommon.strUnit = ""
                                Else
                                    .udtChCommon.shtUnit = gCstCodeChManualInputUnit  ''特殊コード（手入力）
                                    .udtChCommon.strUnit = grdCHList(gCstChListColPosUnit, intRow).Value
                                End If

                                ''Display1 <-- Strig --------------------------------------------
                                .PidString = Val(grdCHList(gCstChListColPosString, intRow).Value)

                                ''display3(bit0) <-- CenterGraph --------------------------------
                                .PidDisplay3 = gBitSet(.PidDisplay3, 0, IIf(grdCHList(gCstChListColPosCenterGraph, intRow).Value, True, False))

                                'Power Factor---------------------------------------------------- T.Ueki 2016/11/28
                                Select Case grdCHList(gCstChListPowerFactorRow, intRow).Value
                                    Case 1
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, True)
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 0, True)
                                    Case 2
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 8, True)
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 0, True)
                                    Case 3
                                        'Ver2.0.7.9 AF対応
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 9, True)
                                        .PidDisplay3 = gBitSet(.PidDisplay3, 0, True)
                                    Case Else
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 5, False)
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 8, False)

                                        'Ver2.0.7.9 AF対応
                                        .udtChCommon.shtFlag1 = gBitSet(.udtChCommon.shtFlag1, 9, False)
                                End Select

                                ''flag2(Bit1) <-- アラームが有りでflag2のAC(Bit3)がOFFの場合のみONにする --------------------
                                '使用しているいないは、EX,DLY,GR1,GR2から判断する
                                Dim blHHuse As Boolean = False
                                Dim blHuse As Boolean = False
                                Dim blLuse As Boolean = False
                                Dim blLLuse As Boolean = False

                                Dim strEx As String = ""
                                Dim strDly As String = ""
                                Dim strGR1 As String = ""
                                Dim strGR2 As String = ""

                                With mChDataGroup(intRow)
                                    '>>HH
                                    strEx = IIf(.PidHiHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiHiExtGroup))
                                    strDly = IIf(.PidHiHiDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiHiDelay))
                                    strGR1 = IIf(.PidHiHiGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiHiGroupRepose1))
                                    strGR2 = IIf(.PidHiHiGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiHiGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blHHuse = True
                                    End If
                                    '>>H
                                    strEx = IIf(.PidHiExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiExtGroup))
                                    strDly = IIf(.PidHiDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiDelay))
                                    strGR1 = IIf(.PidHiGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiGroupRepose1))
                                    strGR2 = IIf(.PidHiGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidHiGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blHuse = True
                                    End If
                                    '>>L
                                    strEx = IIf(.PidLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoExtGroup))
                                    strDly = IIf(.PidLoDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoDelay))
                                    strGR1 = IIf(.PidLoGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoGroupRepose1))
                                    strGR2 = IIf(.PidLoGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blLuse = True
                                    End If
                                    '>>LL
                                    strEx = IIf(.PidLoLoExtGroup = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoLoExtGroup))
                                    strDly = IIf(.PidLoLoDelay = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoLoDelay))
                                    strGR1 = IIf(.PidLoLoGroupRepose1 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoLoGroupRepose1))
                                    strGR2 = IIf(.PidLoLoGroupRepose2 = gCstCodeChAnalogExtGroupNothing, "", NZf(.PidLoLoGroupRepose2))
                                    If strEx = "" And strDly = "" And strGR1 = "" And strGR2 = "" Then
                                    Else
                                        blLLuse = True
                                    End If
                                End With

                                bALflg = False
                                If blHHuse = True Or blHuse = True Or blLuse = True Or blLLuse = True Or .PidSensorFailUse = 1 Then
                                    If gBitCheck(.udtChCommon.shtFlag2, 3) = False Then ''AC
                                        bALflg = True
                                    End If
                                End If
                                'ALフラグのON,OFF
                                .udtChCommon.shtFlag2 = gBitSet(.udtChCommon.shtFlag2, 1, bALflg)

                                'ﾛｲﾄﾞ対応
                                .PidLRMode = grdCHList(gCstChListColPosLRRow, intRow).Value


                                ''PIDでは未使用 --------------------------------------------
                                .udtChCommon.shtExtGroup = gCstCodeChCommonExtGroupNothing          ''延長警報グループ
                                .udtChCommon.shtDelay = gCstCodeChCommonDelayTimerNothing           ''ディレイタイマ値
                                .udtChCommon.shtGRepose1 = gCstCodeChCommonGroupRepose1Nothing      ''グループリポーズ１
                                .udtChCommon.shtGRepose2 = gCstCodeChCommonGroupRepose2Nothing      ''グループリポーズ２
                                .udtChCommon.shtM_Repose = 0                                        ''マニュアルリポーズ：無効

                                'PID
                                intFuNo = 0 : intPortNo = 0 : intPin = 0
                                intFuNo = CCInt2(grdCHList(gCstChListColPosDoStart, intRow).Value)
                                intPortNo = CCInt2(grdCHList(gCstChListColPosPortDoStart, intRow).Value)
                                intPin = CCInt2(grdCHList(gCstChListColPosPinDoStart, intRow).Value)
                                .PidOutFuNo = intFuNo
                                .PidOutPortNo = intPortNo
                                .PidOutPin = intPin
                                .PidOutPinNo = CCInt2(grdCHList(gCstChListColPosBitCount, intRow).Value)

                                .PidOutMode = CCInt2(grdCHList(gCstChListColPosEccFunc, intRow).Value)
                                .PidCasMode = CCInt2(grdCHList(gCstChListColPosFilterCoef, intRow).Value)
                                .PidSpTracking = CCInt2(grdCHList(gCstChListColPosComposite, intRow).Value)


                                'PID DEF
                                '.PidDefSpHigh = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus1, intRow).Value).Replace(".", ""))
                                If IsNumeric(grdCHList(gCstChListColPosDoStatus1, intRow).Value) Then
                                    ''小数以下桁合わせ
                                    lngValue = Int(Val(grdCHList(gCstChListColPosDoStatus1, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                    If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                        lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                    End If
                                    .PidDefSpHigh = lngValue
                                Else
                                    .PidDefSpHigh = 0
                                End If
                                '.PidDefSpLow = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus2, intRow).Value).Replace(".", ""))
                                If IsNumeric(grdCHList(gCstChListColPosDoStatus2, intRow).Value) Then
                                    ''小数以下桁合わせ
                                    lngValue = Int(Val(grdCHList(gCstChListColPosDoStatus2, intRow).Value) * (10 ^ intDecimalP) + 0.5)
                                    If lngValue.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                                        lngValue = CCLong(lngValue.ToString.Substring(lngValue.ToString.Length - 9))
                                    End If
                                    .PidDefSpLow = lngValue
                                Else
                                    .PidDefSpLow = 0
                                End If

                                .PidDefMvHigh = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus3, intRow).Value).Replace(".", ""))
                                .PidDefMvLow = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus4, intRow).Value).Replace(".", ""))
                                .PidDefPB = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus5, intRow).Value).Replace(".", ""))
                                .PidDefTI = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus6, intRow).Value).Replace(".", ""))
                                .PidDefTD = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus7, intRow).Value).Replace(".", ""))
                                .PidDefGAP = CInt(NZfZero(grdCHList(gCstChListColPosDoStatus8, intRow).Value).Replace(".", ""))
                                'PID EXT
                                '1
                                .PidExtPara1 = CInt(NZfZero(grdCHList(gCstChListColPosOutExtgH, intRow).Value).Replace(".", ""))
                                .PidExtParaHigh1 = CInt(NZfZero(grdCHList(gCstChListColPosOutDelayH, intRow).Value).Replace(".", ""))
                                .PidExtParaLow1 = CInt(NZfZero(grdCHList(gCstChListColPosOutGrep1H, intRow).Value).Replace(".", ""))
                                .PidExtParaName1 = NZf(grdCHList(gCstChListColPosOutGrep2H, intRow).Value)
                                .PidExtParaUnit1 = NZf(grdCHList(gCstChListColPosAlarmTimeup, intRow).Value)
                                '2
                                .PidExtPara2 = CInt(NZfZero(grdCHList(gCstChListColPosOutSp1, intRow).Value).Replace(".", ""))
                                .PidExtParaHigh2 = CInt(NZfZero(grdCHList(gCstChListColPosOutSp2, intRow).Value).Replace(".", ""))
                                .PidExtParaLow2 = CInt(NZfZero(grdCHList(gCstChListColPosOutHys1, intRow).Value).Replace(".", ""))
                                .PidExtParaName2 = NZf(grdCHList(gCstChListColPosOutHys2, intRow).Value)
                                .PidExtParaUnit2 = NZf(grdCHList(gCstChListColPosOutSt, intRow).Value)
                                '3
                                .PidExtPara3 = CInt(NZfZero(grdCHList(gCstChListColPosOutVar, intRow).Value).Replace(".", ""))
                                .PidExtParaHigh3 = CInt(NZfZero(grdCHList(gCstChListColPosOutStatusH, intRow).Value).Replace(".", ""))
                                .PidExtParaLow3 = CInt(NZfZero(grdCHList(gCstChListColPosCompositeIndex, intRow).Value).Replace(".", ""))
                                .PidExtParaName3 = NZf(grdCHList(gCstChListColPosTriggerCH, intRow).Value)
                                .PidExtParaUnit3 = NZf(grdCHList(gCstChListColPosPinAiTerm, intRow).Value)
                                '4
                                .PidExtPara4 = CInt(NZfZero(grdCHList(gCstChListColPosStaNmSF, intRow).Value).Replace(".", ""))
                                .PidExtParaHigh4 = CInt(NZfZero(grdCHList(gCstChListColPosPortBitCount, intRow).Value).Replace(".", ""))
                                .PidExtParaLow4 = CInt(NZfZero(grdCHList(gCstChListColPosPinBitCount, intRow).Value).Replace(".", ""))
                                .PidExtParaName4 = NZf(grdCHList(gCstChListColPosAiTerm, intRow).Value)
                                .PidExtParaUnit4 = NZf(grdCHList(gCstChListColPosPortAiTerm, intRow).Value)


                                '仮設定機能対応（アナログ:PID）
                                Call Temporary_setup(1, intRow, intRow, 2)


                        End Select

                        Call SetTagNo(mChDataGroup(intRow), grdCHList(gCstChListColPosTagRow, intRow).Value)    '' 2015.12.11 Ver1.8.8.1 　保存場所変更

                        icnt += 1

                    End If

                End With

            Next intRow

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： チャンネル情報クリア
    ' 引数      ： (intRow)  対象となるCHの行番号
    '         　： (intType) CH Type
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub mClearCH(ByVal intRow As Integer, ByVal intType As Integer)

        Try

            Dim tblDataType As New DataTable("DataType")
            Dim col As System.Windows.Forms.DataGridViewComboBoxCell

            Dim color1 As Color
            ''偶数行の背景色を変える
            If intRow Mod 2 <> 0 Then
                If intRow >= 0 And intRow <= 19 Then
                    color1 = gColorGridRowBack
                ElseIf intRow >= 20 And intRow <= 39 Then
                    color1 = Color.LavenderBlush
                ElseIf intRow >= 40 And intRow <= 59 Then
                    color1 = Color.Lavender
                ElseIf intRow >= 60 And intRow <= 79 Then
                    color1 = Color.Beige
                ElseIf intRow >= 80 And intRow <= 99 Then
                    color1 = Color.Honeydew
                End If
            Else
                color1 = Color.White
            End If

            With grdCHList.Rows(intRow)

                ''背景色　クリア ------------------------------------------
                For i = gCstChListColPosSysNo To grdCHList.ColumnCount - 1
                    .Cells(i).Style.BackColor = gColorGridRowBackReadOnly
                    .Cells(i).ReadOnly = True
                Next

                If intType = gCstCodeChTypeNothing Then

                    For j As Integer = gCstChListColPosChType To gCstChListColPosDecimalPoint

                        Select Case j

                            'コンボボックスタイプ
                            Case gCstChListColPosSysNo, gCstChListColPosRangeType, gCstChListColPosDataType, gCstChListColPosDelayTime, gCstChListColPosEccFunc, _
                                gCstChListColPosShareType, gCstChListColPosControlType, gCstChListColPosValueSF, gCstChListColPosOutDelayTime, gCstChListColPosStatusOut

                                col = CType(.Cells(j), DataGridViewComboBoxCell)
                                col.Value = Nothing

                                'コンボボックスタイプ(デバイスステータス)
                            Case gCstChListColPosDeviceStatus

                                mFlagEventCancel = True
                                col = CType(.Cells(j), DataGridViewComboBoxCell)
                                col.Value = Nothing
                                mFlagEventCancel = False

                                'チェックボックスタイプ(チェックを外す)
                            Case gCstChListColPosCenterGraph, gCstChListColPosStatusAlarm
                                .Cells(j).Value = 0

                                'その他(消すのみ)
                            Case Else
                                .Cells(j).Value = Nothing

                        End Select
                    Next

                Else    ''他CHに変更時(共通項目の設定は残す)

                    ''コンボボックス　クリア ------------------------------
                    tblDataType.Columns.Add("Type", GetType(String))
                    tblDataType.Clear()

                    For z As Integer = gCstChListColPosChType To gCstChListColPosDecimalPoint

                        Select Case z

                            '共通項目は消さない
                            Case gCstChListColPosChType, gCstChListColPosSysNo, gCstChListColPosChNo, gCstChListColPosTagRow, gCstChListColPosItemName, gCstChListColPosValueH, gCstChListColPosExtGrH, _
                                gCstChListColPosDelayH, gCstChListColPosGrep1H, gCstChListColPosGrep2H, gCstChListColPosSSig, gCstChListColPosFuAddress, gCstChListColPosPortAddress, _
                                gCstChListColPosPinAddress, gCstChListColPosRemarks, gCstChListColPosLRRow, gCstChListColPosFlagDmy, gCstChListColPosFlagSC, gCstChListColPosDelayTime, _
                                gCstChListColPosFlagEP, gCstChListColPosFlagAC, gCstChListColPosFlagPLC, gCstChListColPosFlagSIO, gCstChListColPosFlagGWS, gCstChListColPosShareChid, gCstChListColPosIndex, _
                                gCstChListColPosFlagWK, gCstChListColPosFlagSP

                                '何も処理しない

                                'コンボボックスタイプ
                            Case gCstChListColPosRangeType, gCstChListColPosEccFunc, gCstChListColPosControlType, gCstChListColPosValueSF, gCstChListColPosOutDelayTime, gCstChListColPosDataType, gCstChListColPosStatusOut

                                col = CType(.Cells(z), DataGridViewComboBoxCell)
                                col.Value = Nothing

                                If z <> gCstChListColPosValueSF Then
                                    col.DataSource = tblDataType
                                End If

                                'コンボボックスタイプ(デバイスステータス)
                            Case gCstChListColPosDeviceStatus

                                mFlagEventCancel = True
                                col = CType(.Cells(z), DataGridViewComboBoxCell)
                                col.Value = Nothing
                                col.DataSource = tblDataType
                                mFlagEventCancel = False

                                'チェックボックスタイプ(チェックを外す)
                            Case gCstChListColPosCenterGraph, gCstChListColPosStatusAlarm
                                .Cells(z).Value = 0


                            Case gCstChListColPosShareType

                                ''Share Type コンボ, Share CH 初期値
                                col = CType(.Cells("cmbShareType"), DataGridViewComboBoxCell)

                                If gudt.SetSystem.udtSysFcu.shtShareChUse = 1 Then    ''共有CH有無
                                    ''FCU2台構成
                                    col.ReadOnly = False : .Cells(gCstChListColPosShareType).Style.BackColor = color1
                                    .Cells(gCstChListColPosShareChid).ReadOnly = False
                                    .Cells(gCstChListColPosShareChid).Style.BackColor = color1
                                    If col.Value = Nothing Then col.Value = "0" '' Ver1.11.8.6 2016.11.10 初期値 1 → 0

                                Else
                                    col.Value = Nothing : col.ReadOnly = True : .Cells(gCstChListColPosShareType).Style.BackColor = gColorGridRowBackReadOnly
                                    .Cells(gCstChListColPosShareChid).Value = Nothing
                                    .Cells(gCstChListColPosShareChid).ReadOnly = True
                                    .Cells(gCstChListColPosShareChid).Style.BackColor = gColorGridRowBackReadOnly
                                End If

                                'その他(消すのみ)
                            Case Else
                                .Cells(z).Value = Nothing

                        End Select
                    Next

                End If

            End With

            ''システムチャンネル用(16ステータス分)ワーク領域クリア
            mSystemChDeviceStatus(intRow) = ""
            For i As Integer = 0 To 15
                mSystemChStatusUse(intRow, i) = False
                mSystemChStatusCode(intRow, i) = ""
                mSystemChStatusName(intRow, i) = ""
            Next

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： チャンネル情報を更新する
    ' 引数      ： (intRow) 対象となるCHの行番号
    ' 戻値      ： なし
    ' 機能説明  ： 詳細画面から戻った時に一覧の内容を更新する 
    '--------------------------------------------------------------------
    Private Sub mSetChannelInfo(ByVal intRow As Integer)

        Try

            Dim intDecimalP As Integer

            With grdCHList.Rows(intRow)

                '**********************************************************************************
                'アナログ
                '**********************************************************************************
                If .Cells(gCstChListColPosChType).Value = gCstCodeChTypeAnalog Then

                    .Cells(gCstChListColPosSysNo).Value = mAnalogData.SysNo                 '1
                    .Cells(gCstChListColPosChNo).Value = mAnalogData.ChNo                   '2
                    .Cells(gCstChListColPosTagRow).Value = mAnalogData.TagNo                '3
                    .Cells(gCstChListColPosItemName).Value = mAnalogData.ItemName           '4
                    .Cells(gCstChListColPosStatusIn).Value = mAnalogData.Status             '5

                    .Cells(gCstChListColPosUnit).Value = mAnalogData.Unit                   '8
                    .Cells(gCstChListColPosValueH).Value = mAnalogData.ValueH               '9
                    .Cells(gCstChListColPosExtGrH).Value = mAnalogData.ExtGH                '10
                    .Cells(gCstChListColPosDelayH).Value = mAnalogData.DelayH               '11
                    .Cells(gCstChListColPosGrep1H).Value = mAnalogData.GRep1H               '12
                    .Cells(gCstChListColPosGrep2H).Value = mAnalogData.GRep2H               '13
                    .Cells(gCstChListColPosValueL).Value = mAnalogData.ValueL               '14
                    .Cells(gCstChListColPosExtGrL).Value = mAnalogData.ExtGL                '15
                    .Cells(gCstChListColPosDelayL).Value = mAnalogData.DelayL               '16
                    .Cells(gCstChListColPosGrep1L).Value = mAnalogData.GRep1L               '17
                    .Cells(gCstChListColPosGrep2L).Value = mAnalogData.GRep2L               '18

                    .Cells(gCstChListColPosValueHH).Value = mAnalogData.ValueHH             '23
                    .Cells(gCstChListColPosExtGrHH).Value = mAnalogData.ExtGHH              '24
                    .Cells(gCstChListColPosDelayHH).Value = mAnalogData.DelayHH             '25
                    .Cells(gCstChListColPosGrep1HH).Value = mAnalogData.GRep1HH             '26
                    .Cells(gCstChListColPosGrep2HH).Value = mAnalogData.GRep2HH             '27

                    .Cells(gCstChListColPosValueLL).Value = mAnalogData.ValueLL             '28
                    .Cells(gCstChListColPosExtGrLL).Value = mAnalogData.ExtGLL              '29
                    .Cells(gCstChListColPosDelayLL).Value = mAnalogData.DelayLL             '30
                    .Cells(gCstChListColPosGrep1LL).Value = mAnalogData.GRep1LL             '31
                    .Cells(gCstChListColPosGrep2LL).Value = mAnalogData.GRep2LL             '32
                    .Cells(gCstChListColPosDataType).Value = mAnalogData.DataType           '33

                    .Cells(gCstChListColPosFuAddress).Value = mAnalogData.FuNo              '35
                    .Cells(gCstChListColPosPortAddress).Value = mAnalogData.FUPortNo        '36
                    .Cells(gCstChListColPosPinAddress).Value = mAnalogData.FUPin            '37
                    .Cells(gCstChListColPosFlagRL).Value = mAnalogData.FlagRL               '38
                    .Cells(gCstChListColPosExtGrSF).Value = mAnalogData.ExtGSF              '39
                    .Cells(gCstChListColPosDelaySF).Value = mAnalogData.DelaySF             '40
                    .Cells(gCstChListColPosRemarks).Value = mAnalogData.Remarks             '41
                    .Cells(gCstChListColPosLRRow).Value = mAnalogData.AlmLevel              '42
                    .Cells(gCstChListColPosNormalLo).Value = mAnalogData.NormalLO           '43
                    .Cells(gCstChListColPosNormalHi).Value = mAnalogData.NormalHI           '44
                    .Cells(gCstChListColPosFlagDmy).Value = mAnalogData.FlagDmy             '45
                    .Cells(gCstChListColPosFlagSC).Value = mAnalogData.FlagSC               '46
                    .Cells(gCstChListColPosDelayTime).Value = mAnalogData.FlagMin           '47
                    'mFlagEventCancel = True : .Cells(gCstChListColPosDelayTime).Value = mAnalogData.FlagMin : mFlagEventCancel = False
                    .Cells(gCstChListColPosFlagEP).Value = mAnalogData.FlagEP               '48
                    .Cells(gCstChListColPosFlagAC).Value = mAnalogData.FlagAC               '49
                    .Cells(gCstChListColPosFlagPLC).Value = mAnalogData.FlagPLC             '50
                    .Cells(gCstChListPowerFactorRow).Value = mAnalogData.FlagPowerFactor    '51
                    .Cells(gCstChListColPosString).Value = mAnalogData.strString            '52
                    .Cells(gCstChListColPosCenterGraph).Value = mAnalogData.FlagCenterGraph '53

                    .Cells(gCstChListColPosFlagSIO).Value = mAnalogData.FlagSIO             '55
                    .Cells(gCstChListColPosFlagGWS).Value = mAnalogData.FlagGWS             '56
                    .Cells(gCstChListColPosShareType).Value = mAnalogData.ShareType         '57
                    .Cells(gCstChListColPosShareChid).Value = mAnalogData.ShareChNo         '58
                    .Cells(gCstChListColPosStaNmHH).Value = mAnalogData.StatusHH            '59
                    .Cells(gCstChListColPosStaNmH).Value = mAnalogData.StatusH              '60
                    .Cells(gCstChListColPosStaNmL).Value = mAnalogData.StatusL              '61
                    .Cells(gCstChListColPosStaNmLL).Value = mAnalogData.StatusLL            '62
                    .Cells(gCstChListColPosOffset).Value = mAnalogData.OffSet               '63

                    .Cells(gCstChListColPosValueSF).Value = mAnalogData.ValueSF             '95(非表示)
                    .Cells(gCstChListColPosGrep1SF).Value = mAnalogData.GRep1SF             '96(非表示)
                    .Cells(gCstChListColPosGrep2SF).Value = mAnalogData.GRep2SF             '97(非表示)
                    .Cells(gCstChListColPosFlagWK).Value = mAnalogData.FlagWK               '101(非表示)
                    .Cells(gCstChListColPosFlagSP).Value = mAnalogData.FlagSP               '102(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    .Cells(gCstChListColPosAlmMimic).Value = mAnalogData.AlmMimic           '116

                    'Ver2.0.7.C ｵﾌｾｯﾄ調整ﾊﾟｽﾜｰﾄﾞ有無
                    .Cells(gCstChListColPosCompositeIndex).Value = mAnalogData.intAdjPSW

                    'Ver2.0.8.5 mmHgレンジ下限小数点対応
                    .Cells(gCstChListColPosAoTerm).Value = mAnalogData.intMmHgFlg
                    .Cells(gCstChListColPosPortAoTerm).Value = mAnalogData.intMmHgDec


                    'Select Case mAnalogData.DataType
                    '    '外部通信の場合、PortNoをFUアドレスのPin箇所に入れる
                    '    Case gCstCodeChDataTypeAnalogJacom, gCstCodeChDataTypeAnalogModbus, gCstCodeChDataTypeAnalogLatitude, gCstCodeChDataTypeAnalogLongitude
                    '        If mAnalogData.PortNo = Nothing Then
                    '            .Cells(gCstChListColPosPinAddress).Value = ""
                    '        Else
                    '            .Cells(gCstChListColPosPinAddress).Value = mAnalogData.PortNo
                    '        End If
                    'End Select

                    ' ''RangeTypeはDataTypeが2,3線式の場合のみ設定
                    'If mAnalogData.DataType >= gCstCodeChDataTypeAnalog2Pt And mAnalogData.DataType <= gCstCodeChDataTypeAnalog3Jpt Then
                    '    .Cells(gCstChListColPosRangeType).Value = ""    ''Changeイベントを発生させるためにあえてクリア
                    '    .Cells(gCstChListColPosRangeType).Value = mAnalogData.RangeType
                    '    .Cells(gCstChListColPosDecimalPoint).Value = mAnalogData.DecimalPosition

                    '    intDecimalP = Val(mAnalogData.DecimalPosition)  ''少数点以下桁数
                    'Else
                    'Range Type コンボ　クリア
                    Dim tblDataType As New DataTable("DataType")
                    Dim col As System.Windows.Forms.DataGridViewComboBoxCell
                    col = CType(.Cells(gCstChListColPosRangeType), DataGridViewComboBoxCell)  ''Range Type
                    tblDataType.Columns.Add("Type", GetType(String))
                    tblDataType.Clear()
                    col.Value = Nothing
                    col.DataSource = tblDataType

                    ''DataTypeが K, 1-5 V, 4-20 mA, Exhaust Gus, 外部機器 の場合は手入力したレンジを設定
                    .Cells(gCstChListColPosRangeLo).Value = mAnalogData.RangeFrom
                    .Cells(gCstChListColPosRangeHi).Value = mAnalogData.RangeTo

                    'Ver2.0.1.2 RangeTypeは、2,3線式の場合RangeLo,Hiから、割り出してあてがう
                    If mAnalogData.DataType = gCstCodeChDataTypeAnalog2Pt Or _
                        mAnalogData.DataType = gCstCodeChDataTypeAnalog2Jpt Or _
                        mAnalogData.DataType = gCstCodeChDataTypeAnalog3Pt Or _
                        mAnalogData.DataType = gCstCodeChDataTypeAnalog3Jpt Then

                        If mAnalogData.DataType = gCstCodeChDataTypeAnalog2Pt Or _
                            mAnalogData.DataType = gCstCodeChDataTypeAnalog3Pt Then
                            Call gSetComboBox(cmbRangeType, gEnmComboType.ctChListChannelListRangeType1)
                        Else
                            Call gSetComboBox(cmbRangeType, gEnmComboType.ctChListChannelListRangeType2)
                        End If

                        Dim intValue As Integer = 0
                        Dim strRangeType As String = ""
                        '小数点は落とす
                        Dim strLoRange As String = ""
                        Dim strHiRange As String = ""
                        If IsNumeric(.Cells(gCstChListColPosRangeLo).Value) = True Then
                            strLoRange = CInt(.Cells(gCstChListColPosRangeLo).Value)
                        End If
                        If IsNumeric(.Cells(gCstChListColPosRangeHi).Value) = True Then
                            strHiRange = CInt(.Cells(gCstChListColPosRangeHi).Value)
                        End If
                        'strRangeType = .Cells(gCstChListColPosRangeLo).Value & " - " & .Cells(gCstChListColPosRangeHi).Value
                        strRangeType = strLoRange & " - " & strHiRange
                        intValue = cmbRangeType.FindStringExact(strRangeType)
                        If intValue >= 0 Then
                            cmbRangeType.SelectedIndex = intValue
                            .Cells(gCstChListColPosRangeType).Value = cmbRangeType.SelectedValue
                        Else
                            .Cells(gCstChListColPosRangeType).Value = 0
                        End If
                    End If

                    'Ver2.0.1.2 UTC TIMEはWチャンネルである
                    If mAnalogData.DataType = gCstCodeChDataTtpeAnalogUTCyear Or _
                        mAnalogData.DataType = gCstCodeChDataTtpeAnalogUTCmonth Or _
                        mAnalogData.DataType = gCstCodeChDataTtpeAnalogUTCday Or _
                        mAnalogData.DataType = gCstCodeChDataTtpeAnalogUTCmin Or _
                        mAnalogData.DataType = gCstCodeChDataTtpeAnalogUTCsec Then

                        'WK
                        If .Cells(gCstChListColPosFlagWK).Value = "1" Then
                            .Cells(gCstChListColPosSSig).Value = gCstChListSSigWork
                        End If

                    End If
                    


                    ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                    intDecimalP = mGetDecimalPosition(intRow)
                    'End If

                    '小数点桁合わせ
                    If grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosRangeLo, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosRangeLo, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosRangeHi, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosRangeHi, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueH, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueH, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueH, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueL, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueL, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueL, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueHH, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueHH, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueHH, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueLL, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueLL, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueLL, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosNormalLo, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosNormalLo, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosNormalLo, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosNormalHi, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosNormalHi, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosNormalHi, intDecimalP)
                    End If

                    '仮設定機能対応（アナログ）
                    Call Temporary_setup(1, intRow, intRow, 3)

                    '**********************************************************************************
                    'デジタル
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeDigital Then

                    .Cells(gCstChListColPosSysNo).Value = mDigitalData.SysNo                    '1
                    .Cells(gCstChListColPosChNo).Value = mDigitalData.ChNo                      '2
                    .Cells(gCstChListColPosTagRow).Value = mDigitalData.TagNo                   '3
                    .Cells(gCstChListColPosItemName).Value = mDigitalData.ItemName              '4
                    .Cells(gCstChListColPosStatusIn).Value = mDigitalData.Status                '5

                    .Cells(gCstChListColPosExtGrH).Value = mDigitalData.ExtGH                   '10
                    .Cells(gCstChListColPosDelayH).Value = mDigitalData.DelayH                  '11
                    .Cells(gCstChListColPosGrep1H).Value = mDigitalData.GRep1H                  '12
                    .Cells(gCstChListColPosGrep2H).Value = mDigitalData.GRep2H                  '13

                    .Cells(gCstChListColPosDataType).Value = mDigitalData.DataType              '33

                    .Cells(gCstChListColPosFlagRL).Value = mDigitalData.FlagRL                  '38

                    .Cells(gCstChListColPosRemarks).Value = mDigitalData.Remarks                '41
                    .Cells(gCstChListColPosLRRow).Value = mDigitalData.AlmLevel                 '42

                    .Cells(gCstChListColPosFlagDmy).Value = mDigitalData.FlagDmy                '45
                    .Cells(gCstChListColPosFlagSC).Value = mDigitalData.FlagSC                  '46
                    .Cells(gCstChListColPosDelayTime).Value = mDigitalData.FlagMin              '47
                    'mFlagEventCancel = True : .Cells(gCstChListColPosDelayTime).Value = mDigitalData.FlagMin : mFlagEventCancel = False

                    .Cells(gCstChListColPosFlagEP).Value = mDigitalData.FlagEP                  '48
                    .Cells(gCstChListColPosFlagAC).Value = mDigitalData.FlagAC                  '49
                    .Cells(gCstChListColPosFlagPLC).Value = mDigitalData.FlagPLC                '50

                    .Cells(gCstChListColPosFlagSIO).Value = mDigitalData.FlagSIO                '55
                    .Cells(gCstChListColPosFlagGWS).Value = mDigitalData.FlagGWS                '56
                    .Cells(gCstChListColPosShareType).Value = mDigitalData.ShareType            '57
                    .Cells(gCstChListColPosShareChid).Value = mDigitalData.ShareChNo            '58

                    .Cells(gCstChListColPosStatusAlarm).Value = mDigitalData.FlagStatusAlarm    '99(非表示)
                    .Cells(gCstChListColPosFlagWK).Value = mDigitalData.FlagWK                  '101(非表示)
                    .Cells(gCstChListColPosFlagSP).Value = mDigitalData.FlagSP                  '102(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    .Cells(gCstChListColPosAlmMimic).Value = mDigitalData.AlmMimic              '116

                    '+++++++++++++++
                    'SYSTEM CHタイプ
                    '+++++++++++++++
                    If mDigitalData.DataType = gCstCodeChDataTypeDigitalDeviceStatus Then

                        .Cells(gCstChListColPosDeviceStatus).Value = mDigitalData.DeviceStatus
                        mSystemChDeviceStatus(intRow) = mDigitalData.DeviceStatus

                        For i As Integer = 0 To 15
                            mSystemChStatusUse(intRow, i) = mDigitalData.DeviceStatusUse(i)
                            mSystemChStatusCode(intRow, i) = mDigitalData.DeviceStatusCode(i)
                            mSystemChStatusName(intRow, i) = mDigitalData.DeviceStatusName(i)
                        Next i

                        '+++++++++++++++++
                        'Digital CHタイプ
                        '+++++++++++++++++
                    Else
                        .Cells(gCstChListColPosFuAddress).Value = mDigitalData.FuNo                 '35
                        .Cells(gCstChListColPosPortAddress).Value = mDigitalData.FUPortNo           '36
                        .Cells(gCstChListColPosPinAddress).Value = mDigitalData.FUPin               '37

                        Select Case mDigitalData.DataType
                            '外部通信の場合、PortNoをFUアドレスのPin箇所に入れる
                            Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO, gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                                If mDigitalData.PortNo = Nothing Then
                                    .Cells(gCstChListColPosPinAddress).Value = ""
                                Else
                                    .Cells(gCstChListColPosPinAddress).Value = mDigitalData.PortNo  '37
                                End If
                            Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO
                                If mDigitalData.PortNo = Nothing Then
                                    .Cells(gCstChListColPosPortNo).Value = ""
                                Else
                                    .Cells(gCstChListColPosPortNo).Value = mDigitalData.PortNo  '37
                                End If
                        End Select

                        If mDigitalData.DataType = gCstCodeChDataTypeDigitalExt Then  ''延長警報盤
                            .Cells(gCstChListColPosEccFunc).Value = mDigitalData.EccFunc.ToString
                        Else
                            '延長警報盤 コンボ　クリア
                            Dim tblDataType As New DataTable("DataType")
                            Dim col As System.Windows.Forms.DataGridViewComboBoxCell
                            col = CType(.Cells(gCstChListColPosEccFunc), DataGridViewComboBoxCell)  '54
                            tblDataType.Columns.Add("Type", GetType(String))
                            tblDataType.Clear()
                            col.Value = Nothing
                            col.DataSource = tblDataType
                        End If
                        .Cells(gCstChListColPosFilterCoef).Value = mDigitalData.FilterCoef          '64
                    End If

                    '仮設定機能対応（デジタル）
                    Call Temporary_setup(2, intRow, intRow, 3)

                    '**********************************************************************************
                    'モーター
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeMotor Then

                    .Cells(gCstChListColPosSysNo).Value = mMotorData.SysNo                          '1
                    .Cells(gCstChListColPosChNo).Value = mMotorData.ChNo                            '2
                    .Cells(gCstChListColPosTagRow).Value = mMotorData.TagNo                         '3
                    .Cells(gCstChListColPosItemName).Value = mMotorData.ItemName                    '4

                    .Cells(gCstChListColPosExtGrH).Value = mMotorData.ExtGH                         '10
                    .Cells(gCstChListColPosDelayH).Value = mMotorData.DelayH                        '11
                    .Cells(gCstChListColPosGrep1H).Value = mMotorData.GRep1H                        '12
                    .Cells(gCstChListColPosGrep2H).Value = mMotorData.GRep2H                        '13

                    .Cells(gCstChListColPosOutExtgH).Value = mMotorData.ExtgDoAlarm                 '19
                    .Cells(gCstChListColPosOutDelayH).Value = mMotorData.DelayDoAlarm               '20
                    .Cells(gCstChListColPosOutGrep1H).Value = mMotorData.GRep1DoAlarm               '21
                    .Cells(gCstChListColPosOutGrep2H).Value = mMotorData.GRep2DoAlarm               '22

                    .Cells(gCstChListColPosDataType).Value = mMotorData.DataType                    '33

                    .Cells(gCstChListColPosFlagRL).Value = mMotorData.FlagRL                        '38

                    .Cells(gCstChListColPosRemarks).Value = mMotorData.Remarks                      '41
                    .Cells(gCstChListColPosLRRow).Value = mMotorData.AlmLevel                       '42

                    .Cells(gCstChListColPosFlagDmy).Value = mMotorData.FlagDmy                      '45
                    .Cells(gCstChListColPosFlagSC).Value = mMotorData.FlagSC                        '46

                    .Cells(gCstChListColPosFlagEP).Value = mMotorData.FlagEP                        '48
                    .Cells(gCstChListColPosFlagAC).Value = mMotorData.FlagAC                        '49
                    .Cells(gCstChListColPosFlagPLC).Value = mMotorData.FlagPLC                      '50

                    .Cells(gCstChListColPosFlagSIO).Value = mMotorData.FlagSIO                      '55
                    .Cells(gCstChListColPosFlagGWS).Value = mMotorData.FlagGWS                      '56
                    .Cells(gCstChListColPosShareType).Value = mMotorData.ShareType                  '57
                    .Cells(gCstChListColPosShareChid).Value = mMotorData.ShareChNo                  '58

                    .Cells(gCstChListColPosFilterCoef).Value = mMotorData.FilterCoef                '64
                    .Cells(gCstChListColPosAlarmTimeup).Value = mMotorData.AlarmTimeup              '66
                    .Cells(gCstChListColPosDoStart).Value = mMotorData.DOStart                      '67
                    .Cells(gCstChListColPosPortDoStart).Value = mMotorData.DOPortStart              '68
                    .Cells(gCstChListColPosPinDoStart).Value = mMotorData.DOPinStart                '69

                    .Cells(gCstChListColPosControlType).Value = mMotorData.ControlType              '71
                    .Cells(gCstChListColPosPulseWidth).Value = mMotorData.PulseWidth                '72
                    .Cells(gCstChListColPosStatusOut).Value = mMotorData.StatusOut                  '73
                    .Cells(gCstChListColPosDoStatus1).Value = mMotorData.StatusDO(0)                '74
                    .Cells(gCstChListColPosDoStatus2).Value = mMotorData.StatusDO(1)                '75
                    .Cells(gCstChListColPosDoStatus3).Value = mMotorData.StatusDO(2)                '76
                    .Cells(gCstChListColPosDoStatus4).Value = mMotorData.StatusDO(3)                '77
                    .Cells(gCstChListColPosDoStatus5).Value = mMotorData.StatusDO(4)                '78
                    .Cells(gCstChListColPosDoStatus6).Value = mMotorData.StatusDO(5)                '79
                    .Cells(gCstChListColPosDoStatus7).Value = mMotorData.StatusDO(6)                '80
                    .Cells(gCstChListColPosDoStatus8).Value = mMotorData.StatusDO(7)                '81

                    .Cells(gCstChListColPosOutStatusH).Value = mMotorData.StatusDoAlarm             '88

                    .Cells(gCstChListColPosOutDelayTime).Value = mMotorData.FlagMin                 '98
                    'mFlagEventCancel = True : .Cells(gCstChListColPosOutDelayTime).Value = mMotorData.FlagMin : mFlagEventCancel = False
                    .Cells(gCstChListColPosStatusAlarm).Value = mMotorData.FlagStatusAlarm          '99(非表示)
                    .Cells(gCstChListColPosFlagWK).Value = mMotorData.FlagWK                        '101(非表示)
                    .Cells(gCstChListColPosFlagSP).Value = mMotorData.FlagSP                        '102(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    .Cells(gCstChListColPosAlmMimic).Value = mMotorData.AlmMimic                    '116

                    .Cells(gCstChListColPosFlagMotorColor).Value = mMotorData.FlagMotorCol          '117(非表示)  ver2.0.8.C 2018.11.14


                    If mMotorData.DataType = gCstCodeChDataTypeMotorDeviceJacom Then
                        If mMotorData.PortNo = Nothing Then
                            .Cells(gCstChListColPosPinAddress).Value = ""                           '37
                        Else
                            .Cells(gCstChListColPosPinAddress).Value = mMotorData.PortNo            '37
                        End If
                    ElseIf mMotorData.DataType = gCstCodeChDataTypeMotorDeviceJacom55 Then
                        If mMotorData.PortNo = Nothing Then
                            .Cells(gCstChListColPosPinAddress).Value = ""                           '37
                        Else
                            .Cells(gCstChListColPosPinAddress).Value = mMotorData.PortNo            '37
                        End If
                    Else
                        .Cells(gCstChListColPosFuAddress).Value = mMotorData.DIStart                '35
                        .Cells(gCstChListColPosPortAddress).Value = mMotorData.DIPortStart          '36
                        .Cells(gCstChListColPosPinAddress).Value = mMotorData.DIPinStart            '37
                    End If

                    '仮設定機能対応（モーター）
                    Call Temporary_setup(3, intRow, intRow, 3)

                    '**********************************************************************************
                    'バルブ
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeValve Then

                    .Cells(gCstChListColPosSysNo).Value = mValveData.SysNo                          '1
                    .Cells(gCstChListColPosChNo).Value = mValveData.ChNo                            '2
                    .Cells(gCstChListColPosTagRow).Value = mValveData.TagNo                         '3
                    .Cells(gCstChListColPosItemName).Value = mValveData.ItemName                    '4
                    .Cells(gCstChListColPosStatusIn).Value = mValveData.StatusIn                    '5

                    .Cells(gCstChListColPosOutExtgH).Value = mValveData.Extg_O                      '19
                    .Cells(gCstChListColPosOutDelayH).Value = mValveData.Delay_O                    '20
                    .Cells(gCstChListColPosOutGrep1H).Value = mValveData.GRep1_O                    '21
                    .Cells(gCstChListColPosOutGrep2H).Value = mValveData.GRep2_O                    '22

                    .Cells(gCstChListColPosDataType).Value = mValveData.DataType                    '33

                    Select Case mValveData.DataType
                        Case gCstCodeChDataTypeValveDI_DO
                            .Cells(gCstChListColPosExtGrH).Value = mValveData.ExtGH_I               '10
                            .Cells(gCstChListColPosDelayH).Value = mValveData.DelayH_I              '11
                            .Cells(gCstChListColPosGrep1H).Value = mValveData.GRep1H_I              '12
                            .Cells(gCstChListColPosGrep2H).Value = mValveData.GRep2H_I              '13

                            .Cells(gCstChListColPosFuAddress).Value = mValveData.DIStart            '35
                            .Cells(gCstChListColPosPortAddress).Value = mValveData.DIPortStart      '36
                            .Cells(gCstChListColPosPinAddress).Value = mValveData.DIPinStart        '37

                            .Cells(gCstChListColPosComposite).Value = mValveData.CompositeIndex     '65

                        Case gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, _
                             gCstCodeChDataTypeValvePT_DO2, gCstCodeChDataTypeValveAI_AO1, _
                             gCstCodeChDataTypeValveAI_AO2, gCstCodeChDataTypeValvePT_AO2

                            .Cells(gCstChListColPosRangeLo).Value = mValveData.RangeFrom            '6
                            .Cells(gCstChListColPosRangeHi).Value = mValveData.RangeTo              '7
                            .Cells(gCstChListColPosUnit).Value = mValveData.Unit                    '8
                            .Cells(gCstChListColPosValueH).Value = mValveData.ValueH                '9
                            .Cells(gCstChListColPosExtGrH).Value = mValveData.ExtGH                 '10
                            .Cells(gCstChListColPosDelayH).Value = mValveData.DelayH                '11
                            .Cells(gCstChListColPosGrep1H).Value = mValveData.GRep1H                '12
                            .Cells(gCstChListColPosGrep2H).Value = mValveData.GRep2H                '13
                            .Cells(gCstChListColPosValueL).Value = mValveData.ValueL                '14
                            .Cells(gCstChListColPosExtGrL).Value = mValveData.ExtGL                 '15
                            .Cells(gCstChListColPosDelayL).Value = mValveData.DelayL                '16
                            .Cells(gCstChListColPosGrep1L).Value = mValveData.GRep1L                '17
                            .Cells(gCstChListColPosGrep2L).Value = mValveData.GRep2L                '18

                            .Cells(gCstChListColPosValueHH).Value = mValveData.ValueHH              '23
                            .Cells(gCstChListColPosExtGrHH).Value = mValveData.ExtGHH               '24
                            .Cells(gCstChListColPosDelayHH).Value = mValveData.DelayHH              '25
                            .Cells(gCstChListColPosGrep1HH).Value = mValveData.GRep1HH              '26
                            .Cells(gCstChListColPosGrep2HH).Value = mValveData.GRep2HH              '27
                            .Cells(gCstChListColPosValueLL).Value = mValveData.ValueLL              '28
                            .Cells(gCstChListColPosExtGrLL).Value = mValveData.ExtGLL               '29
                            .Cells(gCstChListColPosDelayLL).Value = mValveData.DelayLL              '30
                            .Cells(gCstChListColPosGrep1LL).Value = mValveData.GRep1LL              '31
                            .Cells(gCstChListColPosGrep2LL).Value = mValveData.GRep2LL              '32

                            .Cells(gCstChListColPosFuAddress).Value = mValveData.AITerm             '35
                            .Cells(gCstChListColPosPortAddress).Value = mValveData.AIPortTerm       '36
                            .Cells(gCstChListColPosPinAddress).Value = mValveData.AIPinTerm         '37

                            .Cells(gCstChListColPosExtGrSF).Value = mValveData.ExtGSF               '39
                            .Cells(gCstChListColPosDelaySF).Value = mValveData.DelaySF              '40

                            .Cells(gCstChListColPosNormalLo).Value = mValveData.NormalLO            '43
                            .Cells(gCstChListColPosNormalHi).Value = mValveData.NormalHI            '44

                            .Cells(gCstChListColPosString).Value = mValveData.strString             '52
                            .Cells(gCstChListColPosCenterGraph).Value = mValveData.FlagCenterGraph  '53

                            .Cells(gCstChListColPosStaNmHH).Value = mValveData.StatusHH             '59
                            .Cells(gCstChListColPosStaNmH).Value = mValveData.StatusH               '60
                            .Cells(gCstChListColPosStaNmL).Value = mValveData.StatusL               '61
                            .Cells(gCstChListColPosStaNmLL).Value = mValveData.StatusLL             '62
                            .Cells(gCstChListColPosOffset).Value = mValveData.OffSet                '63

                            .Cells(gCstChListColPosValueSF).Value = mValveData.ValueSF              '95(非表示)

                            ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                            intDecimalP = mGetDecimalPosition(intRow)

                            '小数点桁合わせ
                            If grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosRangeLo, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosRangeLo, intDecimalP)
                            End If

                            If grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosRangeHi, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosRangeHi, intDecimalP)
                            End If

                            If grdCHList(gCstChListColPosValueH, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosValueH, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueH, intDecimalP)
                            End If

                            If grdCHList(gCstChListColPosValueL, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosValueL, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueL, intDecimalP)
                            End If

                            If grdCHList(gCstChListColPosValueHH, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosValueHH, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueHH, intDecimalP)
                            End If

                            If grdCHList(gCstChListColPosValueLL, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosValueLL, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueLL, intDecimalP)
                            End If

                            If grdCHList(gCstChListColPosNormalLo, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosNormalLo, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosNormalLo, intDecimalP)
                            End If

                            If grdCHList(gCstChListColPosNormalHi, intRow).Value.ToString <> "" Then
                                grdCHList(gCstChListColPosNormalHi, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosNormalHi, intDecimalP)
                            End If

                        Case gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveJacom55
                            .Cells(gCstChListColPosPinAddress).Value = mValveData.PortNo            '37

                        Case gCstCodeChDataTypeValveAO_4_20

                            .Cells(gCstChListColPosRangeLo).Value = mValveData.RangeFrom            '6
                            .Cells(gCstChListColPosRangeHi).Value = mValveData.RangeTo              '7
                            .Cells(gCstChListColPosUnit).Value = mValveData.Unit                    '8
                            .Cells(gCstChListColPosOffset).Value = mValveData.OffSet                '63

                    End Select

                    .Cells(gCstChListColPosFlagRL).Value = mValveData.FlagRL                        '38

                    .Cells(gCstChListColPosRemarks).Value = mValveData.Remarks                      '41
                    .Cells(gCstChListColPosLRRow).Value = mValveData.AlmLevel                       '42

                    .Cells(gCstChListColPosFlagDmy).Value = mValveData.FlagDmy                      '45
                    .Cells(gCstChListColPosFlagSC).Value = mValveData.FlagSC                        '46

                    .Cells(gCstChListColPosFlagEP).Value = mValveData.FlagEP                        '48
                    .Cells(gCstChListColPosFlagAC).Value = mValveData.FlagAC                        '49
                    .Cells(gCstChListColPosFlagPLC).Value = mValveData.FlagPLC                      '50

                    .Cells(gCstChListColPosFlagSIO).Value = mValveData.FlagSIO                      '55
                    .Cells(gCstChListColPosFlagGWS).Value = mValveData.FlagGWS                      '56
                    .Cells(gCstChListColPosShareType).Value = mValveData.ShareType                  '57
                    .Cells(gCstChListColPosShareChid).Value = mValveData.ShareChNo                  '58

                    .Cells(gCstChListColPosAlarmTimeup).Value = mValveData.AlarmTimeup              '66

                    Select Case mValveData.DataType
                        Case gCstCodeChDataTypeValveDI_DO, gCstCodeChDataTypeValveAI_DO1, _
                             gCstCodeChDataTypeValveAI_DO2, _
                              gCstCodeChDataTypeValvePT_DO2, gCstCodeChDataTypeValveDO
                            .Cells(gCstChListColPosDoStart).Value = mValveData.DOStart              '67
                            .Cells(gCstChListColPosPortDoStart).Value = mValveData.DOPortStart      '68
                            .Cells(gCstChListColPosPinDoStart).Value = mValveData.DOPinStart        '69

                        Case gCstCodeChDataTypeValveAI_AO1, gCstCodeChDataTypeValveAI_AO2, _
                             gCstCodeChDataTypeValvePT_AO2, gCstCodeChDataTypeValveAO_4_20
                            .Cells(gCstChListColPosDoStart).Value = mValveData.AOTerm               '67
                            .Cells(gCstChListColPosPortDoStart).Value = mValveData.AOPortTerm       '68
                            .Cells(gCstChListColPosPinDoStart).Value = mValveData.AOPinTerm         '69

                        Case Else
                            .Cells(gCstChListColPosEccFunc).Value = NZf(mValveData.EccFunc)     '54
                            .Cells(gCstChListColPosDoStart).Value = mValveData.DOStart              '67
                            .Cells(gCstChListColPosPortDoStart).Value = mValveData.DOPortStart      '68
                            .Cells(gCstChListColPosPinDoStart).Value = mValveData.DOPinStart        '69
                    End Select

                    .Cells(gCstChListColPosBitCount).Value = mValveData.BitCount                    '70
                    .Cells(gCstChListColPosControlType).Value = mValveData.ControlType              '71
                    .Cells(gCstChListColPosPulseWidth).Value = mValveData.PulseWidth                '72
                    .Cells(gCstChListColPosStatusOut).Value = mValveData.StatusOut                  '73
                    .Cells(gCstChListColPosDoStatus1).Value = mValveData.StatusDO(0)                '74
                    .Cells(gCstChListColPosDoStatus2).Value = mValveData.StatusDO(1)                '75
                    .Cells(gCstChListColPosDoStatus3).Value = mValveData.StatusDO(2)                '76
                    .Cells(gCstChListColPosDoStatus4).Value = mValveData.StatusDO(3)                '77
                    .Cells(gCstChListColPosDoStatus5).Value = mValveData.StatusDO(4)                '78
                    .Cells(gCstChListColPosDoStatus6).Value = mValveData.StatusDO(5)                '79
                    .Cells(gCstChListColPosDoStatus7).Value = mValveData.StatusDO(6)                '80
                    .Cells(gCstChListColPosDoStatus8).Value = mValveData.StatusDO(7)                '81
                    .Cells(gCstChListColPosOutSp1).Value = mValveData.Sp1_O                         '82
                    .Cells(gCstChListColPosOutSp2).Value = mValveData.Sp2_O                         '83
                    .Cells(gCstChListColPosOutHys1).Value = mValveData.Hys1_O                       '84
                    .Cells(gCstChListColPosOutHys2).Value = mValveData.Hys2_O                       '85
                    .Cells(gCstChListColPosOutSt).Value = mValveData.St_O                           '86
                    .Cells(gCstChListColPosOutVar).Value = mValveData.Var_O                         '87
                    .Cells(gCstChListColPosOutStatusH).Value = mValveData.Status_O                  '88

                    .Cells(gCstChListColPosStatusAlarm).Value = mValveData.FlagStatusAlarm          '99(非表示)
                    .Cells(gCstChListColPosFlagWK).Value = mValveData.FlagWK                        '101(非表示)   
                    .Cells(gCstChListColPosFlagSP).Value = mValveData.FlagSP                        '102(非表示) 

                    If mValveData.DataType = gCstCodeChDataTypeValveDI_DO Or _
                       mValveData.DataType = gCstCodeChDataTypeValveAI_AO1 Or _
                       mValveData.DataType = gCstCodeChDataTypeValveAI_AO2 Or _
                       mValveData.DataType = gCstCodeChDataTypeValvePT_AO2 Or _
                       mValveData.DataType = gCstCodeChDataTypeValveAI_DO1 Or _
                       mValveData.DataType = gCstCodeChDataTypeValveAI_DO2 Or _
                       mValveData.DataType = gCstCodeChDataTypeValvePT_DO2 Then

                        mFlagEventCancel = True
                        .Cells(gCstChListColPosDelayTime).Value = mValveData.FlagMin                '47
                        mFlagEventCancel = False
                    Else
                        mFlagEventCancel = True
                        .Cells(gCstChListColPosOutDelayTime).Value = mValveData.FlagMin             '98(非表示)
                        mFlagEventCancel = False
                    End If

                    If mValveData.DataType <> gCstCodeChDataTypeValveExt Then        ''延長警報盤

                        '延長警報盤 コンボ　クリア
                        Dim tblDataType As New DataTable("DataType")
                        Dim col As System.Windows.Forms.DataGridViewComboBoxCell
                        col = CType(.Cells(gCstChListColPosEccFunc), DataGridViewComboBoxCell)      '54
                        tblDataType.Columns.Add("Type", GetType(String))
                        tblDataType.Clear()
                        col.Value = Nothing
                        col.DataSource = tblDataType
                    End If

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    .Cells(gCstChListColPosAlmMimic).Value = mValveData.AlmMimic                     '116

                    '仮設定機能対応（バルブ）
                    Call Temporary_setup(4, intRow, intRow, 3)

                    '**********************************************************************************
                    'デジタルコンポジット
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeComposite Then

                    .Cells(gCstChListColPosSysNo).Value = mCompositeData.SysNo                      '1
                    .Cells(gCstChListColPosChNo).Value = mCompositeData.ChNo                        '2
                    .Cells(gCstChListColPosTagRow).Value = mCompositeData.TagNo                     '3
                    .Cells(gCstChListColPosItemName).Value = mCompositeData.ItemName                '4
                    .Cells(gCstChListColPosStatusIn).Value = mCompositeData.Status                  '5

                    .Cells(gCstChListColPosExtGrH).Value = mCompositeData.ExtGH                     '10
                    .Cells(gCstChListColPosDelayH).Value = mCompositeData.DelayH                    '11
                    .Cells(gCstChListColPosGrep1H).Value = mCompositeData.GRep1H                    '12
                    .Cells(gCstChListColPosGrep2H).Value = mCompositeData.GRep2H                    '13

                    .Cells(gCstChListColPosDataType).Value = mCompositeData.DataType                '33
                    .Cells(gCstChListColPosFuAddress).Value = mCompositeData.StartNo                '35
                    .Cells(gCstChListColPosPortAddress).Value = mCompositeData.StartPortNo          '36
                    .Cells(gCstChListColPosPinAddress).Value = mCompositeData.StartPinNo            '37
                    .Cells(gCstChListColPosFlagRL).Value = mCompositeData.FlagRL                    '38

                    .Cells(gCstChListColPosRemarks).Value = mCompositeData.Remarks                  '41
                    .Cells(gCstChListColPosLRRow).Value = mCompositeData.AlmLevel                   '42

                    .Cells(gCstChListColPosFlagDmy).Value = mCompositeData.FlagDmy                  '45
                    .Cells(gCstChListColPosFlagSC).Value = mCompositeData.FlagSC                    '46
                    .Cells(gCstChListColPosDelayTime).Value = mCompositeData.FlagMin                '47
                    'mFlagEventCancel = True : .Cells(gCstChListColPosDelayTime).Value = mCompositeData.FlagMin : mFlagEventCancel = False
                    .Cells(gCstChListColPosFlagEP).Value = mCompositeData.FlagEP                    '48
                    .Cells(gCstChListColPosFlagAC).Value = mCompositeData.FlagAC                    '49
                    .Cells(gCstChListColPosFlagPLC).Value = mCompositeData.FlagPLC                  '50

                    .Cells(gCstChListColPosFlagSIO).Value = mCompositeData.FlagSIO                  '55
                    .Cells(gCstChListColPosFlagGWS).Value = mCompositeData.FlagGWS                  '56
                    .Cells(gCstChListColPosShareType).Value = mCompositeData.ShareType              '57
                    .Cells(gCstChListColPosShareChid).Value = mCompositeData.ShareChNo              '58

                    .Cells(gCstChListColPosComposite).Value = mCompositeData.CompositeIndex         '65

                    .Cells(gCstChListColPosBitCount).Value = mCompositeData.BitCount                '70

                    .Cells(gCstChListColPosFlagWK).Value = mCompositeData.FlagWK                    '101(非表示)
                    .Cells(gCstChListColPosFlagSP).Value = mCompositeData.FlagSP                    '102(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    .Cells(gCstChListColPosAlmMimic).Value = mCompositeData.AlmMimic                '116

                    'Ver2.0.7.J FU ADress保存できないBugFix
                    .Cells(gCstChListColPosDiStart).Value = mCompositeData.StartNo                  '105
                    .Cells(gCstChListColPosPortDiStart).Value = mCompositeData.StartPortNo          '106
                    .Cells(gCstChListColPosPinDiStart).Value = mCompositeData.StartPinNo            '107


                    '仮設定機能対応（コンポジット）
                    Call Temporary_setup(5, intRow, intRow, 3)

                    '**********************************************************************************
                    'パルス
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypePulse Then

                    .Cells(gCstChListColPosSysNo).Value = mPulseData.SysNo                          '1
                    .Cells(gCstChListColPosChNo).Value = mPulseData.ChNo                            '2
                    .Cells(gCstChListColPosTagRow).Value = mPulseData.TagNo                         '3
                    .Cells(gCstChListColPosItemName).Value = mPulseData.ItemName                    '4
                    .Cells(gCstChListColPosStatusIn).Value = mPulseData.Status                      '5
                    .Cells(gCstChListColPosRangeLo).Value = mPulseData.RangeLo                      '6
                    .Cells(gCstChListColPosRangeHi).Value = mPulseData.RangeHi                      '7
                    .Cells(gCstChListColPosUnit).Value = mPulseData.Unit                            '8
                    .Cells(gCstChListColPosValueH).Value = mPulseData.ValueH                        '9
                    .Cells(gCstChListColPosExtGrH).Value = mPulseData.ExtGH                         '10
                    .Cells(gCstChListColPosDelayH).Value = mPulseData.DelayH                        '11
                    .Cells(gCstChListColPosGrep1H).Value = mPulseData.GRep1H                        '12
                    .Cells(gCstChListColPosGrep2H).Value = mPulseData.GRep2H                        '13

                    .Cells(gCstChListColPosDataType).Value = mPulseData.DataType                    '33
                    .Cells(gCstChListColPosFuAddress).Value = mPulseData.FuNo                       '35
                    .Cells(gCstChListColPosPortAddress).Value = mPulseData.FUPortNo                 '36
                    .Cells(gCstChListColPosPinAddress).Value = mPulseData.FUPin                     '37
                    .Cells(gCstChListColPosFlagRL).Value = mPulseData.FlagRL                        '38

                    .Cells(gCstChListColPosRemarks).Value = mPulseData.Remarks                      '41
                    .Cells(gCstChListColPosLRRow).Value = mPulseData.AlmLevel                       '42
                    .Cells(gCstChListColPosFlagDmy).Value = mPulseData.FlagDmy                      '45
                    .Cells(gCstChListColPosFlagSC).Value = mPulseData.FlagSC                        '46
                    .Cells(gCstChListColPosDelayTime).Value = mPulseData.FlagMin                    '47
                    'mFlagEventCancel = True : .Cells(gCstChListColPosDelayTime).Value = mPulseData.FlagMin : mFlagEventCancel = False
                    .Cells(gCstChListColPosFlagEP).Value = mPulseData.FlagEP                        '48
                    .Cells(gCstChListColPosFlagAC).Value = mPulseData.FlagAC                        '49
                    .Cells(gCstChListColPosFlagPLC).Value = mPulseData.FlagPLC                      '50

                    .Cells(gCstChListColPosString).Value = mPulseData.strString                     '52

                    .Cells(gCstChListColPosFlagSIO).Value = mPulseData.FlagSIO                      '55
                    .Cells(gCstChListColPosFlagGWS).Value = mPulseData.FlagGWS                      '56
                    .Cells(gCstChListColPosShareType).Value = mPulseData.ShareType                  '57
                    .Cells(gCstChListColPosShareChid).Value = mPulseData.ShareChNo                  '58

                    .Cells(gCstChListColPosFilterCoef).Value = mPulseData.FilterCoef                '64

                    .Cells(gCstChListColPosFlagWK).Value = mPulseData.FlagWK                        '101(非表示)
                    .Cells(gCstChListColPosFlagSP).Value = mPulseData.FlagSP                        '102(非表示)
                    .Cells(gCstChListColPosDecimalPoint).Value = mPulseData.strDecimalPoint         '115(非表示)

                    If mPulseData.Status = "" Then
                        .Cells(gCstChListColPosStaNmH).Value = mPulseData.StatusH                   '60
                    End If

                    If mPulseData.FlagStatusAlarm = "" Then                                         '99
                        .Cells(gCstChListColPosStatusAlarm).Value = False
                    Else
                        .Cells(gCstChListColPosStatusAlarm).Value = True
                    End If

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    .Cells(gCstChListColPosAlmMimic).Value = mPulseData.AlmMimic                    '116


                    '仮設定機能対応（パルス）
                    Call Temporary_setup(6, intRow, intRow, 3)


                    '**********************************************************************************
                    'PID
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypePID Then
                    .Cells(gCstChListColPosSysNo).Value = mPidData.SysNo                 '1
                    .Cells(gCstChListColPosChNo).Value = mPidData.ChNo                   '2
                    .Cells(gCstChListColPosTagRow).Value = mPidData.TagNo                '3
                    .Cells(gCstChListColPosItemName).Value = mPidData.ItemName           '4
                    .Cells(gCstChListColPosStatusIn).Value = mPidData.Status             '5

                    .Cells(gCstChListColPosUnit).Value = mPidData.Unit                   '8
                    .Cells(gCstChListColPosValueH).Value = mPidData.ValueH               '9
                    .Cells(gCstChListColPosExtGrH).Value = mPidData.ExtGH                '10
                    .Cells(gCstChListColPosDelayH).Value = mPidData.DelayH               '11
                    .Cells(gCstChListColPosGrep1H).Value = mPidData.GRep1H               '12
                    .Cells(gCstChListColPosGrep2H).Value = mPidData.GRep2H               '13
                    .Cells(gCstChListColPosValueL).Value = mPidData.ValueL               '14
                    .Cells(gCstChListColPosExtGrL).Value = mPidData.ExtGL                '15
                    .Cells(gCstChListColPosDelayL).Value = mPidData.DelayL               '16
                    .Cells(gCstChListColPosGrep1L).Value = mPidData.GRep1L               '17
                    .Cells(gCstChListColPosGrep2L).Value = mPidData.GRep2L               '18

                    .Cells(gCstChListColPosValueHH).Value = mPidData.ValueHH             '23
                    .Cells(gCstChListColPosExtGrHH).Value = mPidData.ExtGHH              '24
                    .Cells(gCstChListColPosDelayHH).Value = mPidData.DelayHH             '25
                    .Cells(gCstChListColPosGrep1HH).Value = mPidData.GRep1HH             '26
                    .Cells(gCstChListColPosGrep2HH).Value = mPidData.GRep2HH             '27

                    .Cells(gCstChListColPosValueLL).Value = mPidData.ValueLL             '28
                    .Cells(gCstChListColPosExtGrLL).Value = mPidData.ExtGLL              '29
                    .Cells(gCstChListColPosDelayLL).Value = mPidData.DelayLL             '30
                    .Cells(gCstChListColPosGrep1LL).Value = mPidData.GRep1LL             '31
                    .Cells(gCstChListColPosGrep2LL).Value = mPidData.GRep2LL             '32
                    .Cells(gCstChListColPosDataType).Value = mPidData.DataType           '33

                    .Cells(gCstChListColPosFuAddress).Value = mPidData.FuNo              '35
                    .Cells(gCstChListColPosPortAddress).Value = mPidData.FUPortNo        '36
                    .Cells(gCstChListColPosPinAddress).Value = mPidData.FUPin            '37
                    .Cells(gCstChListColPosFlagRL).Value = mPidData.FlagRL               '38
                    .Cells(gCstChListColPosExtGrSF).Value = mPidData.ExtGSF              '39
                    .Cells(gCstChListColPosDelaySF).Value = mPidData.DelaySF             '40
                    .Cells(gCstChListColPosRemarks).Value = mPidData.Remarks             '41
                    .Cells(gCstChListColPosLRRow).Value = mPidData.AlmLevel              '42
                    .Cells(gCstChListColPosNormalLo).Value = mPidData.NormalLO           '43
                    .Cells(gCstChListColPosNormalHi).Value = mPidData.NormalHI           '44
                    .Cells(gCstChListColPosFlagDmy).Value = mPidData.FlagDmy             '45
                    .Cells(gCstChListColPosFlagSC).Value = mPidData.FlagSC               '46
                    .Cells(gCstChListColPosDelayTime).Value = mPidData.FlagMin           '47
                    .Cells(gCstChListColPosFlagEP).Value = mPidData.FlagEP               '48
                    .Cells(gCstChListColPosFlagAC).Value = mPidData.FlagAC               '49
                    .Cells(gCstChListColPosFlagPLC).Value = mPidData.FlagPLC             '50
                    .Cells(gCstChListPowerFactorRow).Value = mPidData.FlagPowerFactor    '51
                    .Cells(gCstChListColPosString).Value = mPidData.strString            '52
                    .Cells(gCstChListColPosCenterGraph).Value = mPidData.FlagCenterGraph '53

                    .Cells(gCstChListColPosFlagSIO).Value = mPidData.FlagSIO             '55
                    .Cells(gCstChListColPosFlagGWS).Value = mPidData.FlagGWS             '56
                    .Cells(gCstChListColPosShareType).Value = mPidData.ShareType         '57
                    .Cells(gCstChListColPosShareChid).Value = mPidData.ShareChNo         '58
                    .Cells(gCstChListColPosStaNmHH).Value = mPidData.StatusHH            '59
                    .Cells(gCstChListColPosStaNmH).Value = mPidData.StatusH              '60
                    .Cells(gCstChListColPosStaNmL).Value = mPidData.StatusL              '61
                    .Cells(gCstChListColPosStaNmLL).Value = mPidData.StatusLL            '62
                    .Cells(gCstChListColPosOffset).Value = mPidData.OffSet               '63

                    .Cells(gCstChListColPosValueSF).Value = mPidData.ValueSF             '95(非表示)
                    .Cells(gCstChListColPosGrep1SF).Value = mPidData.GRep1SF             '96(非表示)
                    .Cells(gCstChListColPosGrep2SF).Value = mPidData.GRep2SF             '97(非表示)
                    .Cells(gCstChListColPosFlagWK).Value = mPidData.FlagWK               '101(非表示)
                    .Cells(gCstChListColPosFlagSP).Value = mPidData.FlagSP               '102(非表示)

                    


                    'PID
                    .Cells(gCstChListColPosDoStart).Value = mPidData.OutFuNo
                    .Cells(gCstChListColPosPortDoStart).Value = mPidData.OutFUPortNo
                    .Cells(gCstChListColPosPinDoStart).Value = mPidData.OutFUPin
                    .Cells(gCstChListColPosBitCount).Value = mPidData.OutPinNo

                    .Cells(gCstChListColPosEccFunc).Value = mPidData.OutMode
                    .Cells(gCstChListColPosFilterCoef).Value = mPidData.CasMode
                    .Cells(gCstChListColPosComposite).Value = mPidData.SpTracking


                    'PID DEF
                    .Cells(gCstChListColPosDoStatus1).Value = mPidData.DefSpHi
                    .Cells(gCstChListColPosDoStatus2).Value = mPidData.DefSpLo
                    .Cells(gCstChListColPosDoStatus3).Value = mPidData.DefMvHi
                    .Cells(gCstChListColPosDoStatus4).Value = mPidData.DefMvLo
                    .Cells(gCstChListColPosDoStatus5).Value = mPidData.DefPB
                    .Cells(gCstChListColPosDoStatus6).Value = mPidData.DefTI
                    .Cells(gCstChListColPosDoStatus7).Value = mPidData.DefTD
                    .Cells(gCstChListColPosDoStatus8).Value = mPidData.DefGAP
                    'PID EXT
                    '1
                    .Cells(gCstChListColPosOutExtgH).Value = mPidData.ExtPara1
                    .Cells(gCstChListColPosOutDelayH).Value = mPidData.ExtParaHi1
                    .Cells(gCstChListColPosOutGrep1H).Value = mPidData.ExtParaLo1
                    .Cells(gCstChListColPosOutGrep2H).Value = mPidData.ExtParaName1
                    .Cells(gCstChListColPosAlarmTimeup).Value = mPidData.ExtParaUnit1
                    '2
                    .Cells(gCstChListColPosOutSp1).Value = mPidData.ExtPara2
                    .Cells(gCstChListColPosOutSp2).Value = mPidData.ExtParaHi2
                    .Cells(gCstChListColPosOutHys1).Value = mPidData.ExtParaLo2
                    .Cells(gCstChListColPosOutHys2).Value = mPidData.ExtParaName2
                    .Cells(gCstChListColPosOutSt).Value = mPidData.ExtParaUnit2
                    '3
                    .Cells(gCstChListColPosOutVar).Value = mPidData.ExtPara3
                    .Cells(gCstChListColPosOutStatusH).Value = mPidData.ExtParaHi3
                    .Cells(gCstChListColPosCompositeIndex).Value = mPidData.ExtParaLo3
                    .Cells(gCstChListColPosTriggerCH).Value = mPidData.ExtParaName3
                    .Cells(gCstChListColPosPinAiTerm).Value = mPidData.ExtParaUnit3
                    '4
                    .Cells(gCstChListColPosStaNmSF).Value = mPidData.ExtPara4
                    .Cells(gCstChListColPosPortBitCount).Value = mPidData.ExtParaHi4
                    .Cells(gCstChListColPosPinBitCount).Value = mPidData.ExtParaLo4
                    .Cells(gCstChListColPosAiTerm).Value = mPidData.ExtParaName4
                    .Cells(gCstChListColPosPortAiTerm).Value = mPidData.ExtParaUnit4


                    'Range
                    'Range Type コンボ　クリア
                    Dim tblDataType As New DataTable("DataType")
                    Dim col As System.Windows.Forms.DataGridViewComboBoxCell
                    col = CType(.Cells(gCstChListColPosRangeType), DataGridViewComboBoxCell)  'Range Type
                    tblDataType.Columns.Add("Type", GetType(String))
                    tblDataType.Clear()
                    col.Value = Nothing
                    col.DataSource = tblDataType

                    'DataTypeが K, 1-5 V, 4-20 mAの場合は手入力したレンジを設定
                    .Cells(gCstChListColPosRangeLo).Value = mPidData.RangeFrom
                    .Cells(gCstChListColPosRangeHi).Value = mPidData.RangeTo

                    'RangeTypeは、2,3線式の場合RangeLo,Hiから、割り出してあてがう
                    If mPidData.DataType = gCstCodeChDataTypePID_3_Pt100_2 Or _
                        mPidData.DataType = gCstCodeChDataTypePID_4_Pt100_3 Then

                        Call gSetComboBox(cmbRangeType, gEnmComboType.ctChListChannelListRangeType1)

                        Dim intValue As Integer = 0
                        Dim strRangeType As String = ""
                        '小数点は落とす
                        Dim strLoRange As String = ""
                        Dim strHiRange As String = ""
                        If IsNumeric(.Cells(gCstChListColPosRangeLo).Value) = True Then
                            strLoRange = CInt(.Cells(gCstChListColPosRangeLo).Value)
                        End If
                        If IsNumeric(.Cells(gCstChListColPosRangeHi).Value) = True Then
                            strHiRange = CInt(.Cells(gCstChListColPosRangeHi).Value)
                        End If

                        strRangeType = strLoRange & " - " & strHiRange
                        intValue = cmbRangeType.FindStringExact(strRangeType)
                        If intValue >= 0 Then
                            cmbRangeType.SelectedIndex = intValue
                            .Cells(gCstChListColPosRangeType).Value = cmbRangeType.SelectedValue
                        Else
                            .Cells(gCstChListColPosRangeType).Value = 0
                        End If
                    End If

                    ''少数点以下桁数(RangeLo, RangeHiの中で最も小数点以下桁数の大きいものをGETする)
                    intDecimalP = mGetDecimalPosition(intRow)


                    '小数点桁合わせ
                    If grdCHList(gCstChListColPosRangeLo, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosRangeLo, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosRangeLo, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosRangeHi, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosRangeHi, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosRangeHi, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueH, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueH, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueH, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueL, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueL, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueL, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueHH, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueHH, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueHH, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosValueLL, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosValueLL, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosValueLL, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosNormalLo, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosNormalLo, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosNormalLo, intDecimalP)
                    End If

                    If grdCHList(gCstChListColPosNormalHi, intRow).Value.ToString <> "" Then
                        grdCHList(gCstChListColPosNormalHi, intRow).Value = mChkDesimalPos(intRow, gCstChListColPosNormalHi, intDecimalP)
                    End If

                    '仮設定機能対応（アナログ）
                    Call Temporary_setup(1, intRow, intRow, 3)

                End If

            End With

            'Ver2.0.1.8 SigCHG　DataTypeが変わればSig編集
            Call subSigSet(intRow)

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能説明  ： チャンネル情報を内部メモリに格納する
    ' 引数      ： (intRow) 対象となるCHの行番号
    '         　： (intRowFirst) 設定済みCHのある最初の列番号
    '         　： (intRowEnd) 　設定済みCHのある最後の列番号
    ' 戻値      ： なし
    ' 機能説明  ： 詳細画面へ展開する前に、一覧の対象行の内容を内部メモリに退避する
    '--------------------------------------------------------------------
    Private Sub mGetChannelInfo(ByVal intRow As Integer, _
                                Optional ByVal intRowFirst As Integer = 0, _
                                Optional ByVal intRowEnd As Integer = 0)

        Try

            With grdCHList.Rows(intRow)

                If .Cells(gCstChListColPosChType).Value = gCstCodeChTypeAnalog Then

                    '**********************************************************************************
                    'アナログ
                    '**********************************************************************************

                    '行番号,列番号
                    mAnalogData.RowNo = intRow
                    mAnalogData.RowNoFirst = intRowFirst
                    mAnalogData.RowNoEnd = intRowEnd

                    mAnalogData.SysNo = .Cells(gCstChListColPosSysNo).Value                         '1
                    mAnalogData.ChNo = .Cells(gCstChListColPosChNo).Value                           '2
                    mAnalogData.TagNo = .Cells(gCstChListColPosTagRow).Value                        '3
                    mAnalogData.ItemName = .Cells(gCstChListColPosItemName).Value                   '4
                    mAnalogData.Status = .Cells(gCstChListColPosStatusIn).Value                     '5
                    mAnalogData.RangeFrom = .Cells(gCstChListColPosRangeLo).Value                   '6
                    mAnalogData.RangeTo = .Cells(gCstChListColPosRangeHi).Value                     '7
                    mAnalogData.Unit = .Cells(gCstChListColPosUnit).Value                           '8
                    mAnalogData.ValueH = .Cells(gCstChListColPosValueH).Value                       '9
                    mAnalogData.ExtGH = .Cells(gCstChListColPosExtGrH).Value                        '10
                    mAnalogData.DelayH = .Cells(gCstChListColPosDelayH).Value                       '11
                    mAnalogData.GRep1H = .Cells(gCstChListColPosGrep1H).Value                       '12
                    mAnalogData.GRep2H = .Cells(gCstChListColPosGrep2H).Value                       '13
                    mAnalogData.ValueL = .Cells(gCstChListColPosValueL).Value                       '14
                    mAnalogData.ExtGL = .Cells(gCstChListColPosExtGrL).Value                        '15
                    mAnalogData.DelayL = .Cells(gCstChListColPosDelayL).Value                       '16
                    mAnalogData.GRep1L = .Cells(gCstChListColPosGrep1L).Value                       '17
                    mAnalogData.GRep2L = .Cells(gCstChListColPosGrep2L).Value                       '18

                    mAnalogData.ValueHH = .Cells(gCstChListColPosValueHH).Value                     '23
                    mAnalogData.ExtGHH = .Cells(gCstChListColPosExtGrHH).Value                      '24
                    mAnalogData.DelayHH = .Cells(gCstChListColPosDelayHH).Value                     '25
                    mAnalogData.GRep1HH = .Cells(gCstChListColPosGrep1HH).Value                     '26
                    mAnalogData.GRep2HH = .Cells(gCstChListColPosGrep2HH).Value                     '27
                    mAnalogData.ValueLL = .Cells(gCstChListColPosValueLL).Value                     '28
                    mAnalogData.ExtGLL = .Cells(gCstChListColPosExtGrLL).Value                      '29
                    mAnalogData.DelayLL = .Cells(gCstChListColPosDelayLL).Value                     '30
                    mAnalogData.GRep1LL = .Cells(gCstChListColPosGrep1LL).Value                     '31
                    mAnalogData.GRep2LL = .Cells(gCstChListColPosGrep2LL).Value                     '32
                    mAnalogData.DataType = .Cells(gCstChListColPosDataType).Value                   '33

                    mAnalogData.FuNo = .Cells(gCstChListColPosFuAddress).Value                      '35
                    mAnalogData.FUPortNo = .Cells(gCstChListColPosPortAddress).Value                '36
                    mAnalogData.FUPin = .Cells(gCstChListColPosPinAddress).Value                    '37
                    mAnalogData.PortNo = .Cells(gCstChListColPosPinAddress).Value                   '37
                    mAnalogData.FlagRL = .Cells(gCstChListColPosFlagRL).Value                       '38
                    mAnalogData.ExtGSF = .Cells(gCstChListColPosExtGrSF).Value                      '39
                    mAnalogData.DelaySF = .Cells(gCstChListColPosDelaySF).Value                     '40
                    mAnalogData.Remarks = .Cells(gCstChListColPosRemarks).Value                     '41
                    mAnalogData.AlmLevel = .Cells(gCstChListColPosLRRow).Value                      '42
                    mAnalogData.NormalLO = .Cells(gCstChListColPosNormalLo).Value                   '43
                    mAnalogData.NormalHI = .Cells(gCstChListColPosNormalHi).Value                   '44
                    mAnalogData.FlagDmy = .Cells(gCstChListColPosFlagDmy).Value                     '45
                    mAnalogData.FlagSC = .Cells(gCstChListColPosFlagSC).Value                       '46
                    mAnalogData.FlagMin = .Cells(gCstChListColPosDelayTime).Value                   '47
                    mAnalogData.FlagEP = .Cells(gCstChListColPosFlagEP).Value                       '48
                    mAnalogData.FlagAC = .Cells(gCstChListColPosFlagAC).Value                       '49
                    mAnalogData.FlagPLC = .Cells(gCstChListColPosFlagPLC).Value                     '50
                    mAnalogData.FlagPowerFactor = .Cells(gCstChListPowerFactorRow).Value            '51
                    mAnalogData.strString = .Cells(gCstChListColPosString).Value                    '52
                    mAnalogData.FlagCenterGraph = .Cells(gCstChListColPosCenterGraph).Value         '53

                    mAnalogData.FlagSIO = .Cells(gCstChListColPosFlagSIO).Value                     '55
                    mAnalogData.FlagGWS = .Cells(gCstChListColPosFlagGWS).Value                     '56
                    mAnalogData.ShareType = .Cells(gCstChListColPosShareType).Value                 '57
                    mAnalogData.ShareChNo = .Cells(gCstChListColPosShareChid).Value                 '58
                    mAnalogData.StatusHH = .Cells(gCstChListColPosStaNmHH).Value                    '59
                    mAnalogData.StatusH = .Cells(gCstChListColPosStaNmH).Value                      '60
                    mAnalogData.StatusL = .Cells(gCstChListColPosStaNmL).Value                      '61
                    mAnalogData.StatusLL = .Cells(gCstChListColPosStaNmLL).Value                    '62
                    mAnalogData.OffSet = .Cells(gCstChListColPosOffset).Value                       '63

                    mAnalogData.RangeType = .Cells(gCstChListColPosRangeType).Value                 '94(非表示)
                    mAnalogData.ValueSF = .Cells(gCstChListColPosValueSF).Value                     '95(非表示)
                    mAnalogData.FlagWK = .Cells(gCstChListColPosFlagWK).Value                       '101(非表示)
                    mAnalogData.FlagSP = .Cells(gCstChListColPosFlagSP).Value                       '102(非表示)
                    mAnalogData.DecimalPosition = .Cells(gCstChListColPosDecimalPoint).Value        '115(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    mAnalogData.AlmMimic = .Cells(gCstChListColPosAlmMimic).Value                   '116

                    'Ver2.0.7.C ｵﾌｾｯﾄ調整ﾊﾟｽﾜｰﾄﾞ有無
                    mAnalogData.intAdjPSW = .Cells(gCstChListColPosCompositeIndex).Value

                    'Ver2.0.8.5 mmHgレンジ下限小数点対応
                    mAnalogData.intMmHgFlg = .Cells(gCstChListColPosAoTerm).Value
                    mAnalogData.intMmHgDec = .Cells(gCstChListColPosPortAoTerm).Value


                    '仮設定機能対応（アナログ）
                    Call Temporary_setup(1, intRow, intRow, 4)

                    '**********************************************************************************
                    'デジタル
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeDigital Then

                    '行番号,列番号
                    mDigitalData.RowNo = intRow
                    mDigitalData.RowNoFirst = intRowFirst
                    mDigitalData.RowNoEnd = intRowEnd

                    mDigitalData.SysNo = .Cells(gCstChListColPosSysNo).Value                        '1
                    mDigitalData.ChNo = .Cells(gCstChListColPosChNo).Value                          '2
                    mDigitalData.TagNo = .Cells(gCstChListColPosTagRow).Value                       '3
                    mDigitalData.ItemName = .Cells(gCstChListColPosItemName).Value                  '4
                    mDigitalData.Status = .Cells(gCstChListColPosStatusIn).Value                    '5

                    mDigitalData.ExtGH = .Cells(gCstChListColPosExtGrH).Value                       '10
                    mDigitalData.DelayH = .Cells(gCstChListColPosDelayH).Value                      '11
                    mDigitalData.GRep1H = .Cells(gCstChListColPosGrep1H).Value                      '12
                    mDigitalData.GRep2H = .Cells(gCstChListColPosGrep2H).Value                      '13

                    mDigitalData.DataType = .Cells(gCstChListColPosDataType).Value                  '33

                    mDigitalData.FuNo = .Cells(gCstChListColPosFuAddress).Value                     '35
                    mDigitalData.FUPortNo = .Cells(gCstChListColPosPortAddress).Value               '36
                    mDigitalData.FUPin = .Cells(gCstChListColPosPinAddress).Value                   '37
                    mDigitalData.PortNo = .Cells(gCstChListColPosPinAddress).Value                  '37
                    mDigitalData.FlagRL = .Cells(gCstChListColPosFlagRL).Value                      '38

                    mDigitalData.Remarks = .Cells(gCstChListColPosRemarks).Value                    '41
                    mDigitalData.AlmLevel = .Cells(gCstChListColPosLRRow).Value                     '42

                    mDigitalData.FlagDmy = .Cells(gCstChListColPosFlagDmy).Value                    '45
                    mDigitalData.FlagSC = .Cells(gCstChListColPosFlagSC).Value                      '46
                    mDigitalData.FlagMin = .Cells(gCstChListColPosDelayTime).Value                  '47
                    mDigitalData.FlagEP = .Cells(gCstChListColPosFlagEP).Value                      '48
                    mDigitalData.FlagAC = .Cells(gCstChListColPosFlagAC).Value                      '49
                    mDigitalData.FlagPLC = .Cells(gCstChListColPosFlagPLC).Value                    '50

                    mDigitalData.EccFunc = .Cells(gCstChListColPosEccFunc).Value                    '54
                    mDigitalData.FlagSIO = .Cells(gCstChListColPosFlagSIO).Value                    '55
                    mDigitalData.FlagGWS = .Cells(gCstChListColPosFlagGWS).Value                    '56
                    mDigitalData.ShareType = .Cells(gCstChListColPosShareType).Value                '57
                    mDigitalData.ShareChNo = .Cells(gCstChListColPosShareChid).Value                '58

                    mDigitalData.FilterCoef = .Cells(gCstChListColPosFilterCoef).Value              '64

                    mDigitalData.DeviceStatus = .Cells(gCstChListColPosDeviceStatus).Value          '93(非表示)
                    mDigitalData.FlagStatusAlarm = .Cells(gCstChListColPosStatusAlarm).Value        '99(非表示)
                    mDigitalData.FlagWK = .Cells(gCstChListColPosFlagWK).Value                      '101(非表示)
                    mDigitalData.FlagSP = .Cells(gCstChListColPosFlagSP).Value                      '102(非表示)

                    For i As Integer = 0 To 15
                        mDigitalData.DeviceStatusUse(i) = mSystemChStatusUse(intRow, i)
                        mDigitalData.DeviceStatusCode(i) = mSystemChStatusCode(intRow, i)
                        mDigitalData.DeviceStatusName(i) = mSystemChStatusName(intRow, i)
                    Next i

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    mDigitalData.AlmMimic = .Cells(gCstChListColPosAlmMimic).Value                   '116

                    '仮設定機能対応（デジタル）
                    Call Temporary_setup(2, intRow, intRow, 4)

                    '**********************************************************************************
                    'モーター
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeMotor Then

                    '行番号,列番号
                    mMotorData.RowNo = intRow
                    mMotorData.RowNoFirst = intRowFirst
                    mMotorData.RowNoEnd = intRowEnd

                    mMotorData.SysNo = .Cells(gCstChListColPosSysNo).Value                          '1
                    mMotorData.ChNo = .Cells(gCstChListColPosChNo).Value                            '2
                    mMotorData.TagNo = .Cells(gCstChListColPosTagRow).Value                         '3
                    mMotorData.ItemName = .Cells(gCstChListColPosItemName).Value                    '4

                    mMotorData.ExtGH = .Cells(gCstChListColPosExtGrH).Value                         '10
                    mMotorData.GRep1H = .Cells(gCstChListColPosGrep1H).Value                        '12
                    mMotorData.GRep2H = .Cells(gCstChListColPosGrep2H).Value                        '13

                    mMotorData.ExtgDoAlarm = .Cells(gCstChListColPosOutExtgH).Value                 '19
                    mMotorData.DelayDoAlarm = .Cells(gCstChListColPosOutDelayH).Value               '20
                    mMotorData.GRep1DoAlarm = .Cells(gCstChListColPosOutGrep1H).Value               '21
                    mMotorData.GRep2DoAlarm = .Cells(gCstChListColPosOutGrep2H).Value               '22

                    mMotorData.DataType = .Cells(gCstChListColPosDataType).Value                    '33

                    mMotorData.DIStart = .Cells(gCstChListColPosFuAddress).Value                    '35
                    mMotorData.DIPortStart = .Cells(gCstChListColPosPortAddress).Value              '36
                    mMotorData.DIPinStart = .Cells(gCstChListColPosPinAddress).Value                '37
                    mMotorData.PortNo = .Cells(gCstChListColPosPinAddress).Value                    '37
                    mMotorData.FlagRL = .Cells(gCstChListColPosFlagRL).Value                        '38

                    mMotorData.Remarks = .Cells(gCstChListColPosRemarks).Value                      '41
                    mMotorData.AlmLevel = .Cells(gCstChListColPosLRRow).Value                       '42

                    mMotorData.FlagDmy = .Cells(gCstChListColPosFlagDmy).Value                      '45
                    mMotorData.FlagSC = .Cells(gCstChListColPosFlagSC).Value                        '46

                    mMotorData.FlagEP = .Cells(gCstChListColPosFlagEP).Value                        '48
                    mMotorData.FlagAC = .Cells(gCstChListColPosFlagAC).Value                        '49
                    mMotorData.FlagPLC = .Cells(gCstChListColPosFlagPLC).Value                      '50

                    mMotorData.FlagSIO = .Cells(gCstChListColPosFlagSIO).Value                      '55
                    mMotorData.FlagGWS = .Cells(gCstChListColPosFlagGWS).Value                      '56
                    mMotorData.ShareType = .Cells(gCstChListColPosShareType).Value                  '57
                    mMotorData.ShareChNo = .Cells(gCstChListColPosShareChid).Value                  '58

                    mMotorData.FilterCoef = .Cells(gCstChListColPosFilterCoef).Value                '64
                    mMotorData.AlarmTimeup = .Cells(gCstChListColPosAlarmTimeup).Value              '66
                    mMotorData.DOStart = .Cells(gCstChListColPosDoStart).Value                      '67
                    mMotorData.DOPortStart = .Cells(gCstChListColPosPortDoStart).Value              '68
                    mMotorData.DOPinStart = .Cells(gCstChListColPosPinDoStart).Value                '69

                    mMotorData.ControlType = .Cells(gCstChListColPosControlType).Value              '71
                    mMotorData.PulseWidth = .Cells(gCstChListColPosPulseWidth).Value                '72
                    mMotorData.StatusOut = .Cells(gCstChListColPosStatusOut).Value                  '73
                    mMotorData.StatusDO(0) = .Cells(gCstChListColPosDoStatus1).Value                '74
                    mMotorData.StatusDO(1) = .Cells(gCstChListColPosDoStatus2).Value                '75
                    mMotorData.StatusDO(2) = .Cells(gCstChListColPosDoStatus3).Value                '76
                    mMotorData.StatusDO(3) = .Cells(gCstChListColPosDoStatus4).Value                '77
                    mMotorData.StatusDO(4) = .Cells(gCstChListColPosDoStatus5).Value                '78
                    mMotorData.StatusDO(5) = .Cells(gCstChListColPosDoStatus6).Value                '79
                    mMotorData.StatusDO(6) = .Cells(gCstChListColPosDoStatus7).Value                '80
                    mMotorData.StatusDO(7) = .Cells(gCstChListColPosDoStatus8).Value                '81
                    mMotorData.StatusDoAlarm = .Cells(gCstChListColPosOutStatusH).Value             '88
                    
                    mMotorData.FlagMin = .Cells(gCstChListColPosOutDelayTime).Value                 '98(非表示)
                    mMotorData.FlagStatusAlarm = .Cells(gCstChListColPosStatusAlarm).Value          '99(非表示)
                    mMotorData.FlagWK = .Cells(gCstChListColPosFlagWK).Value                        '101(非表示)
                    mMotorData.FlagSP = .Cells(gCstChListColPosFlagSP).Value                        '102(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    mMotorData.AlmMimic = .Cells(gCstChListColPosAlmMimic).Value                    '116

                    mMotorData.FlagMotorCol = .Cells(gCstChListColPosFlagMotorColor).Value          '117(非表示) ver2.0.8.C 2018.11.14

                    '仮設定機能対応（モーター）
                    Call Temporary_setup(3, intRow, intRow, 4)

                    '**********************************************************************************
                    'バルブ
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeValve Then

                    '行番号,列番号
                    mValveData.RowNo = intRow
                    mValveData.RowNoFirst = intRowFirst
                    mValveData.RowNoEnd = intRowEnd

                    mValveData.SysNo = .Cells(gCstChListColPosSysNo).Value                              '1
                    mValveData.ChNo = .Cells(gCstChListColPosChNo).Value                                '2
                    mValveData.TagNo = .Cells(gCstChListColPosTagRow).Value                             '3
                    mValveData.ItemName = .Cells(gCstChListColPosItemName).Value                        '4
                    mValveData.StatusIn = .Cells(gCstChListColPosStatusIn).Value                        '5

                    mValveData.Extg_O = .Cells(gCstChListColPosOutExtgH).Value                          '19
                    mValveData.Delay_O = .Cells(gCstChListColPosOutDelayH).Value                        '20
                    mValveData.GRep1_O = .Cells(gCstChListColPosOutGrep1H).Value                        '21
                    mValveData.GRep2_O = .Cells(gCstChListColPosOutGrep2H).Value                        '22

                    Select Case .Cells(gCstChListColPosDataType).Value

                        Case gCstCodeChDataTypeValveDI_DO
                            mValveData.ExtGH_I = .Cells(gCstChListColPosExtGrH).Value                   '10
                            mValveData.DelayH_I = .Cells(gCstChListColPosDelayH).Value                  '11
                            mValveData.GRep1H_I = .Cells(gCstChListColPosGrep1H).Value                  '12
                            mValveData.GRep2H_I = .Cells(gCstChListColPosGrep2H).Value                  '13

                            mValveData.DIStart = .Cells(gCstChListColPosFuAddress).Value                '35
                            mValveData.DIPortStart = .Cells(gCstChListColPosPortAddress).Value          '36
                            mValveData.DIPinStart = .Cells(gCstChListColPosPinAddress).Value            '37

                            mValveData.FlagMin = .Cells(gCstChListColPosDelayTime).Value                '47

                            mValveData.CompositeIndex = Val(.Cells(gCstChListColPosComposite).Value)    '65

                        Case gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, gCstCodeChDataTypeValvePT_DO2, _
                             gCstCodeChDataTypeValveAI_AO1, gCstCodeChDataTypeValveAI_AO2, gCstCodeChDataTypeValvePT_AO2

                            mValveData.RangeFrom = .Cells(gCstChListColPosRangeLo).Value                '6
                            mValveData.RangeTo = .Cells(gCstChListColPosRangeHi).Value                  '7
                            mValveData.Unit = .Cells(gCstChListColPosUnit).Value                        '8
                            mValveData.ValueH = .Cells(gCstChListColPosValueH).Value                    '9
                            mValveData.ExtGH = .Cells(gCstChListColPosExtGrH).Value                     '10
                            mValveData.DelayH = .Cells(gCstChListColPosDelayH).Value                    '11
                            mValveData.GRep1H = .Cells(gCstChListColPosGrep1H).Value                    '12
                            mValveData.GRep2H = .Cells(gCstChListColPosGrep2H).Value                    '13
                            mValveData.ValueL = .Cells(gCstChListColPosValueL).Value                    '14
                            mValveData.ExtGL = .Cells(gCstChListColPosExtGrL).Value                     '15
                            mValveData.DelayL = .Cells(gCstChListColPosDelayL).Value                    '16
                            mValveData.GRep1L = .Cells(gCstChListColPosGrep1L).Value                    '17
                            mValveData.GRep2L = .Cells(gCstChListColPosGrep2L).Value                    '18

                            mValveData.ValueHH = .Cells(gCstChListColPosValueHH).Value                  '23
                            mValveData.ExtGHH = .Cells(gCstChListColPosExtGrHH).Value                   '24
                            mValveData.DelayHH = .Cells(gCstChListColPosDelayHH).Value                  '25
                            mValveData.GRep1HH = .Cells(gCstChListColPosGrep1HH).Value                  '26
                            mValveData.GRep2HH = .Cells(gCstChListColPosGrep2HH).Value                  '27
                            mValveData.ValueLL = .Cells(gCstChListColPosValueLL).Value                  '28
                            mValveData.ExtGLL = .Cells(gCstChListColPosExtGrLL).Value                   '29
                            mValveData.DelayLL = .Cells(gCstChListColPosDelayLL).Value                  '30
                            mValveData.GRep1LL = .Cells(gCstChListColPosGrep1LL).Value                  '31
                            mValveData.GRep2LL = .Cells(gCstChListColPosGrep2LL).Value                  '32

                            mValveData.AITerm = .Cells(gCstChListColPosFuAddress).Value                 '35
                            mValveData.AIPortTerm = .Cells(gCstChListColPosPortAddress).Value           '36
                            mValveData.AIPinTerm = .Cells(gCstChListColPosPinAddress).Value             '37

                            mValveData.ExtGSF = .Cells(gCstChListColPosExtGrSF).Value                   '39
                            mValveData.DelaySF = .Cells(gCstChListColPosDelaySF).Value                  '40

                            mValveData.NormalLO = .Cells(gCstChListColPosNormalLo).Value                '43
                            mValveData.NormalHI = .Cells(gCstChListColPosNormalHi).Value                '44

                            mValveData.FlagMin = .Cells(gCstChListColPosDelayTime).Value                '47

                            mValveData.strString = .Cells(gCstChListColPosString).Value                 '52
                            mValveData.FlagCenterGraph = .Cells(gCstChListColPosCenterGraph).Value      '53

                            mValveData.StatusHH = .Cells(gCstChListColPosStaNmHH).Value                 '59
                            mValveData.StatusH = .Cells(gCstChListColPosStaNmH).Value                   '60
                            mValveData.StatusL = .Cells(gCstChListColPosStaNmL).Value                   '61
                            mValveData.StatusLL = .Cells(gCstChListColPosStaNmLL).Value                 '62
                            mValveData.OffSet = .Cells(gCstChListColPosOffset).Value                    '63

                            mValveData.Sp1_O = .Cells(gCstChListColPosOutSp1).Value                     '82
                            mValveData.Sp2_O = .Cells(gCstChListColPosOutSp2).Value                     '83
                            mValveData.Hys1_O = .Cells(gCstChListColPosOutHys1).Value                   '84
                            mValveData.Hys2_O = .Cells(gCstChListColPosOutHys2).Value                   '85
                            mValveData.St_O = .Cells(gCstChListColPosOutSt).Value                       '86
                            mValveData.Var_O = .Cells(gCstChListColPosOutVar).Value                     '87

                            mValveData.ValueSF = .Cells(gCstChListColPosValueSF).Value                  '95
                            
                        Case gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveJacom55
                            mValveData.PortNo = .Cells(gCstChListColPosPinAddress).Value                '37
                    End Select

                    mValveData.DataType = .Cells(gCstChListColPosDataType).Value                        '33

                    mValveData.FlagRL = .Cells(gCstChListColPosFlagRL).Value                            '38

                    mValveData.Remarks = .Cells(gCstChListColPosRemarks).Value                          '41
                    mValveData.AlmLevel = .Cells(gCstChListColPosLRRow).Value                           '42

                    mValveData.FlagDmy = .Cells(gCstChListColPosFlagDmy).Value                          '45
                    mValveData.FlagSC = .Cells(gCstChListColPosFlagSC).Value                            '46

                    mValveData.FlagEP = .Cells(gCstChListColPosFlagEP).Value                            '48
                    mValveData.FlagAC = .Cells(gCstChListColPosFlagAC).Value                            '49
                    mValveData.FlagPLC = .Cells(gCstChListColPosFlagPLC).Value                          '50

                    mValveData.EccFunc = .Cells(gCstChListColPosEccFunc).Value                          '54
                    mValveData.FlagSIO = .Cells(gCstChListColPosFlagSIO).Value                          '55
                    mValveData.FlagGWS = .Cells(gCstChListColPosFlagGWS).Value                          '56
                    mValveData.ShareType = .Cells(gCstChListColPosShareType).Value                      '57
                    mValveData.ShareChNo = .Cells(gCstChListColPosShareChid).Value                      '58

                    mValveData.AlarmTimeup = .Cells(gCstChListColPosAlarmTimeup).Value                  '66

                    Select Case .Cells(gCstChListColPosDataType).Value
                        Case gCstCodeChDataTypeValveDI_DO, _
                            gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, gCstCodeChDataTypeValvePT_DO2, _
                            gCstCodeChDataTypeValveDO, gCstCodeChDataTypeValveExt

                            mValveData.DOStart = .Cells(gCstChListColPosDoStart).Value                  '67
                            mValveData.DOPortStart = .Cells(gCstChListColPosPortDoStart).Value          '68
                            mValveData.DOPinStart = .Cells(gCstChListColPosPinDoStart).Value            '69

                        Case gCstCodeChDataTypeValveAI_AO1, gCstCodeChDataTypeValveAI_AO2, gCstCodeChDataTypeValvePT_AO2, _
                            gCstCodeChDataTypeValveAO_4_20

                            mValveData.AOTerm = .Cells(gCstChListColPosDoStart).Value                   '67
                            mValveData.AOPortTerm = .Cells(gCstChListColPosPortDoStart).Value           '68
                            mValveData.AOPinTerm = .Cells(gCstChListColPosPinDoStart).Value             '69                      
                    End Select

                    mValveData.BitCount = .Cells(gCstChListColPosBitCount).Value                        '70
                    mValveData.ControlType = .Cells(gCstChListColPosControlType).Value                  '71
                    mValveData.PulseWidth = .Cells(gCstChListColPosPulseWidth).Value                    '72
                    mValveData.StatusOut = .Cells(gCstChListColPosStatusOut).Value                      '73
                    mValveData.StatusDO(0) = .Cells(gCstChListColPosDoStatus1).Value                    '74
                    mValveData.StatusDO(1) = .Cells(gCstChListColPosDoStatus2).Value                    '75
                    mValveData.StatusDO(2) = .Cells(gCstChListColPosDoStatus3).Value                    '76
                    mValveData.StatusDO(3) = .Cells(gCstChListColPosDoStatus4).Value                    '77
                    mValveData.StatusDO(4) = .Cells(gCstChListColPosDoStatus5).Value                    '78
                    mValveData.StatusDO(5) = .Cells(gCstChListColPosDoStatus6).Value                    '79
                    mValveData.StatusDO(6) = .Cells(gCstChListColPosDoStatus7).Value                    '80
                    mValveData.StatusDO(7) = .Cells(gCstChListColPosDoStatus8).Value                    '81
                    
                    mValveData.Status_O = .Cells(gCstChListColPosOutStatusH).Value                      '88

                    Select Case mValveData.DataType

                        Case gCstCodeChDataTypeValveDO, gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveJacom55, gCstCodeChDataTypeValveExt
                            mValveData.FlagMin = .Cells(gCstChListColPosOutDelayTime).Value             '98(非表示)

                        Case gCstCodeChDataTypeValveAO_4_20
                            mValveData.RangeFrom = .Cells(gCstChListColPosRangeLo).Value                '6
                            mValveData.RangeTo = .Cells(gCstChListColPosRangeHi).Value                  '7
                            mValveData.Unit = .Cells(gCstChListColPosUnit).Value                        '8
                            mValveData.OffSet = .Cells(gCstChListColPosOffset).Value                    '63

                            mValveData.Sp1_O = .Cells(gCstChListColPosOutSp1).Value                     '82
                            mValveData.Sp2_O = .Cells(gCstChListColPosOutSp2).Value                     '83
                            mValveData.Hys1_O = .Cells(gCstChListColPosOutHys1).Value                   '84
                            mValveData.Hys2_O = .Cells(gCstChListColPosOutHys2).Value                   '85
                            mValveData.St_O = .Cells(gCstChListColPosOutSt).Value                       '86
                            mValveData.Var_O = .Cells(gCstChListColPosOutVar).Value                     '87

                            mValveData.FlagMin = .Cells(gCstChListColPosOutDelayTime).Value             '98(非表示)
                    End Select

                    mValveData.FlagStatusAlarm = .Cells(gCstChListColPosStatusAlarm).Value              '99(非表示)
                    mValveData.FlagWK = .Cells(gCstChListColPosFlagWK).Value                            '101(非表示)
                    mValveData.FlagSP = .Cells(gCstChListColPosFlagSP).Value                            '102(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    mValveData.AlmMimic = .Cells(gCstChListColPosAlmMimic).Value                        '116

                    '仮設定機能対応（バルブ）
                    Call Temporary_setup(4, intRow, intRow, 4)

                    '**********************************************************************************
                    'デジタルコンポジット
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypeComposite Then

                    '行番号,列番号
                    mCompositeData.RowNo = intRow
                    mCompositeData.RowNoFirst = intRowFirst
                    mCompositeData.RowNoEnd = intRowEnd

                    mCompositeData.SysNo = .Cells(gCstChListColPosSysNo).Value                          '1
                    mCompositeData.ChNo = .Cells(gCstChListColPosChNo).Value                            '2
                    mCompositeData.TagNo = .Cells(gCstChListColPosTagRow).Value                         '3
                    mCompositeData.ItemName = .Cells(gCstChListColPosItemName).Value                    '4
                    mCompositeData.Status = .Cells(gCstChListColPosStatusIn).Value                      '5

                    mCompositeData.ExtGH = .Cells(gCstChListColPosExtGrH).Value                         '10
                    mCompositeData.DelayH = .Cells(gCstChListColPosDelayH).Value                        '11
                    mCompositeData.GRep1H = .Cells(gCstChListColPosGrep1H).Value                        '12
                    mCompositeData.GRep2H = .Cells(gCstChListColPosGrep2H).Value                        '13

                    mCompositeData.DataType = .Cells(gCstChListColPosDataType).Value                    '33

                    mCompositeData.StartNo = .Cells(gCstChListColPosFuAddress).Value                    '35
                    mCompositeData.StartPortNo = .Cells(gCstChListColPosPortAddress).Value              '36
                    mCompositeData.StartPinNo = .Cells(gCstChListColPosPinAddress).Value                '37
                    mCompositeData.FlagRL = .Cells(gCstChListColPosFlagRL).Value                        '38

                    'Ver2.0.7.J FU ADress保存できないBugFix
                    mCompositeData.StartNo = .Cells(gCstChListColPosDiStart).Value                      '105
                    mCompositeData.StartPortNo = .Cells(gCstChListColPosPortDiStart).Value              '106
                    mCompositeData.StartPinNo = .Cells(gCstChListColPosPinDiStart).Value                '107


                    mCompositeData.Remarks = .Cells(gCstChListColPosRemarks).Value                      '41
                    mCompositeData.AlmLevel = .Cells(gCstChListColPosLRRow).Value                       '42

                    mCompositeData.FlagDmy = .Cells(gCstChListColPosFlagDmy).Value                      '45
                    mCompositeData.FlagSC = .Cells(gCstChListColPosFlagSC).Value                        '46
                    mCompositeData.FlagMin = .Cells(gCstChListColPosDelayTime).Value                    '47
                    mCompositeData.FlagEP = .Cells(gCstChListColPosFlagEP).Value                        '48
                    mCompositeData.FlagAC = .Cells(gCstChListColPosFlagAC).Value                        '49
                    mCompositeData.FlagPLC = .Cells(gCstChListColPosFlagPLC).Value                      '50

                    mCompositeData.FlagSIO = .Cells(gCstChListColPosFlagSIO).Value                      '55
                    mCompositeData.FlagGWS = .Cells(gCstChListColPosFlagGWS).Value                      '56
                    mCompositeData.ShareType = .Cells(gCstChListColPosShareType).Value                  '57
                    mCompositeData.ShareChNo = .Cells(gCstChListColPosShareChid).Value                  '58

                    mCompositeData.CompositeIndex = Val(.Cells(gCstChListColPosComposite).Value)        '65

                    mCompositeData.BitCount = .Cells(gCstChListColPosBitCount).Value                    '70

                    mCompositeData.FlagWK = .Cells(gCstChListColPosFlagWK).Value                        '101(非表示)
                    mCompositeData.FlagSP = .Cells(gCstChListColPosFlagSP).Value                        '102(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    mCompositeData.AlmMimic = .Cells(gCstChListColPosAlmMimic).Value                    '116

                    '仮設定機能対応（デジタルコンポジット）
                    Call Temporary_setup(5, intRow, intRow, 4)

                    '**********************************************************************************
                    'パルス
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypePulse Then

                    '行番号,列番号
                    mPulseData.RowNo = intRow
                    mPulseData.RowNoFirst = intRowFirst
                    mPulseData.RowNoEnd = intRowEnd

                    mPulseData.SysNo = .Cells(gCstChListColPosSysNo).Value                              '1
                    mPulseData.ChNo = .Cells(gCstChListColPosChNo).Value                                '2
                    mPulseData.TagNo = .Cells(gCstChListColPosTagRow).Value                             '3
                    mPulseData.ItemName = .Cells(gCstChListColPosItemName).Value                        '4
                    mPulseData.Status = .Cells(gCstChListColPosStatusIn).Value                          '5
                    mPulseData.RangeLo = .Cells(gCstChListColPosRangeLo).Value                          '6
                    mPulseData.RangeHi = .Cells(gCstChListColPosRangeHi).Value                          '7
                    mPulseData.Unit = .Cells(gCstChListColPosUnit).Value                                '8
                    mPulseData.ValueH = .Cells(gCstChListColPosValueH).Value                            '9
                    mPulseData.ExtGH = .Cells(gCstChListColPosExtGrH).Value                             '10
                    mPulseData.DelayH = .Cells(gCstChListColPosDelayH).Value                            '11
                    mPulseData.GRep1H = .Cells(gCstChListColPosGrep1H).Value                            '12
                    mPulseData.GRep2H = .Cells(gCstChListColPosGrep2H).Value                            '13

                    mPulseData.DataType = .Cells(gCstChListColPosDataType).Value                        '33

                    mPulseData.FuNo = .Cells(gCstChListColPosFuAddress).Value                           '35
                    mPulseData.FUPortNo = .Cells(gCstChListColPosPortAddress).Value                     '36
                    mPulseData.FUPin = .Cells(gCstChListColPosPinAddress).Value                         '37
                    mPulseData.FlagRL = .Cells(gCstChListColPosFlagRL).Value                            '38

                    mPulseData.Remarks = .Cells(gCstChListColPosRemarks).Value                          '41
                    mPulseData.AlmLevel = .Cells(gCstChListColPosLRRow).Value                           '42


                    mPulseData.FlagDmy = .Cells(gCstChListColPosFlagDmy).Value                          '45
                    mPulseData.FlagSC = .Cells(gCstChListColPosFlagSC).Value                            '46
                    mPulseData.FlagMin = .Cells(gCstChListColPosDelayTime).Value                        '47
                    mPulseData.FlagEP = .Cells(gCstChListColPosFlagEP).Value                            '48
                    mPulseData.FlagAC = .Cells(gCstChListColPosFlagAC).Value                            '49
                    mPulseData.FlagPLC = .Cells(gCstChListColPosFlagPLC).Value                          '50

                    mPulseData.strString = .Cells(gCstChListColPosString).Value                         '52

                    mPulseData.FlagSIO = .Cells(gCstChListColPosFlagSIO).Value                          '55
                    mPulseData.FlagGWS = .Cells(gCstChListColPosFlagGWS).Value                          '56
                    mPulseData.ShareType = .Cells(gCstChListColPosShareType).Value                      '57
                    mPulseData.ShareChNo = .Cells(gCstChListColPosShareChid).Value                      '58

                    mPulseData.StatusH = .Cells(gCstChListColPosStaNmH).Value                           '60

                    mPulseData.FilterCoef = .Cells(gCstChListColPosFilterCoef).Value                    '64

                    mPulseData.FlagWK = .Cells(gCstChListColPosFlagWK).Value                            '101(非表示)
                    mPulseData.FlagSP = .Cells(gCstChListColPosFlagSP).Value                            '102(非表示)
                    mPulseData.strDecimalPoint = .Cells(gCstChListColPosDecimalPoint).Value             '115(非表示)

                    'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                    mPulseData.AlmMimic = .Cells(gCstChListColPosAlmMimic).Value                        '116

                    '仮設定機能対応（パルス）
                    Call Temporary_setup(6, intRow, intRow, 4)


                    '**********************************************************************************
                    'PID
                    '**********************************************************************************
                ElseIf .Cells(gCstChListColPosChType).Value = gCstCodeChTypePID Then
                    '行番号,列番号
                    mPidData.RowNo = intRow
                    mPidData.RowNoFirst = intRowFirst
                    mPidData.RowNoEnd = intRowEnd

                    mPidData.SysNo = .Cells(gCstChListColPosSysNo).Value                         '1
                    mPidData.ChNo = .Cells(gCstChListColPosChNo).Value                           '2
                    mPidData.TagNo = .Cells(gCstChListColPosTagRow).Value                        '3
                    mPidData.ItemName = .Cells(gCstChListColPosItemName).Value                   '4
                    mPidData.Status = .Cells(gCstChListColPosStatusIn).Value                     '5
                    mPidData.RangeFrom = .Cells(gCstChListColPosRangeLo).Value                   '6
                    mPidData.RangeTo = .Cells(gCstChListColPosRangeHi).Value                     '7
                    mPidData.Unit = .Cells(gCstChListColPosUnit).Value                           '8
                    mPidData.ValueH = .Cells(gCstChListColPosValueH).Value                       '9
                    mPidData.ExtGH = .Cells(gCstChListColPosExtGrH).Value                        '10
                    mPidData.DelayH = .Cells(gCstChListColPosDelayH).Value                       '11
                    mPidData.GRep1H = .Cells(gCstChListColPosGrep1H).Value                       '12
                    mPidData.GRep2H = .Cells(gCstChListColPosGrep2H).Value                       '13
                    mPidData.ValueL = .Cells(gCstChListColPosValueL).Value                       '14
                    mPidData.ExtGL = .Cells(gCstChListColPosExtGrL).Value                        '15
                    mPidData.DelayL = .Cells(gCstChListColPosDelayL).Value                       '16
                    mPidData.GRep1L = .Cells(gCstChListColPosGrep1L).Value                       '17
                    mPidData.GRep2L = .Cells(gCstChListColPosGrep2L).Value                       '18

                    mPidData.ValueHH = .Cells(gCstChListColPosValueHH).Value                     '23
                    mPidData.ExtGHH = .Cells(gCstChListColPosExtGrHH).Value                      '24
                    mPidData.DelayHH = .Cells(gCstChListColPosDelayHH).Value                     '25
                    mPidData.GRep1HH = .Cells(gCstChListColPosGrep1HH).Value                     '26
                    mPidData.GRep2HH = .Cells(gCstChListColPosGrep2HH).Value                     '27
                    mPidData.ValueLL = .Cells(gCstChListColPosValueLL).Value                     '28
                    mPidData.ExtGLL = .Cells(gCstChListColPosExtGrLL).Value                      '29
                    mPidData.DelayLL = .Cells(gCstChListColPosDelayLL).Value                     '30
                    mPidData.GRep1LL = .Cells(gCstChListColPosGrep1LL).Value                     '31
                    mPidData.GRep2LL = .Cells(gCstChListColPosGrep2LL).Value                     '32
                    mPidData.DataType = .Cells(gCstChListColPosDataType).Value                   '33

                    mPidData.FuNo = .Cells(gCstChListColPosFuAddress).Value                      '35
                    mPidData.FUPortNo = .Cells(gCstChListColPosPortAddress).Value                '36
                    mPidData.FUPin = .Cells(gCstChListColPosPinAddress).Value                    '37
                    mPidData.PortNo = .Cells(gCstChListColPosPinAddress).Value                   '37
                    mPidData.FlagRL = .Cells(gCstChListColPosFlagRL).Value                       '38
                    mPidData.ExtGSF = .Cells(gCstChListColPosExtGrSF).Value                      '39
                    mPidData.DelaySF = .Cells(gCstChListColPosDelaySF).Value                     '40
                    mPidData.Remarks = .Cells(gCstChListColPosRemarks).Value                     '41
                    mPidData.AlmLevel = .Cells(gCstChListColPosLRRow).Value                      '42
                    mPidData.NormalLO = .Cells(gCstChListColPosNormalLo).Value                   '43
                    mPidData.NormalHI = .Cells(gCstChListColPosNormalHi).Value                   '44
                    mPidData.FlagDmy = .Cells(gCstChListColPosFlagDmy).Value                     '45
                    mPidData.FlagSC = .Cells(gCstChListColPosFlagSC).Value                       '46
                    mPidData.FlagMin = .Cells(gCstChListColPosDelayTime).Value                   '47
                    mPidData.FlagEP = .Cells(gCstChListColPosFlagEP).Value                       '48
                    mPidData.FlagAC = .Cells(gCstChListColPosFlagAC).Value                       '49
                    mPidData.FlagPLC = .Cells(gCstChListColPosFlagPLC).Value                     '50
                    mPidData.FlagPowerFactor = .Cells(gCstChListPowerFactorRow).Value            '51
                    mPidData.strString = .Cells(gCstChListColPosString).Value                    '52
                    mPidData.FlagCenterGraph = .Cells(gCstChListColPosCenterGraph).Value         '53

                    mPidData.FlagSIO = .Cells(gCstChListColPosFlagSIO).Value                     '55
                    mPidData.FlagGWS = .Cells(gCstChListColPosFlagGWS).Value                     '56
                    mPidData.ShareType = .Cells(gCstChListColPosShareType).Value                 '57
                    mPidData.ShareChNo = .Cells(gCstChListColPosShareChid).Value                 '58
                    mPidData.StatusHH = .Cells(gCstChListColPosStaNmHH).Value                    '59
                    mPidData.StatusH = .Cells(gCstChListColPosStaNmH).Value                      '60
                    mPidData.StatusL = .Cells(gCstChListColPosStaNmL).Value                      '61
                    mPidData.StatusLL = .Cells(gCstChListColPosStaNmLL).Value                    '62
                    mPidData.OffSet = .Cells(gCstChListColPosOffset).Value                       '63

                    mPidData.RangeType = .Cells(gCstChListColPosRangeType).Value                 '94(非表示)
                    mPidData.ValueSF = .Cells(gCstChListColPosValueSF).Value                     '95(非表示)
                    mPidData.FlagWK = .Cells(gCstChListColPosFlagWK).Value                       '101(非表示)
                    mPidData.FlagSP = .Cells(gCstChListColPosFlagSP).Value                       '102(非表示)
                    mPidData.DecimalPosition = .Cells(gCstChListColPosDecimalPoint).Value        '115(非表示)

                    'PID
                    mPidData.OutFuNo = .Cells(gCstChListColPosDoStart).Value
                    mPidData.OutFUPortNo = .Cells(gCstChListColPosPortDoStart).Value
                    mPidData.OutFUPin = .Cells(gCstChListColPosPinDoStart).Value
                    mPidData.OutPinNo = .Cells(gCstChListColPosBitCount).Value

                    mPidData.OutMode = .Cells(gCstChListColPosEccFunc).Value
                    mPidData.CasMode = .Cells(gCstChListColPosFilterCoef).Value
                    mPidData.SpTracking = .Cells(gCstChListColPosComposite).Value


                    'PID DEF
                    mPidData.DefSpHi = .Cells(gCstChListColPosDoStatus1).Value
                    mPidData.DefSpLo = .Cells(gCstChListColPosDoStatus2).Value
                    mPidData.DefMvHi = .Cells(gCstChListColPosDoStatus3).Value
                    mPidData.DefMvLo = .Cells(gCstChListColPosDoStatus4).Value
                    mPidData.DefPB = .Cells(gCstChListColPosDoStatus5).Value
                    mPidData.DefTI = .Cells(gCstChListColPosDoStatus6).Value
                    mPidData.DefTD = .Cells(gCstChListColPosDoStatus7).Value
                    mPidData.DefGAP = .Cells(gCstChListColPosDoStatus8).Value
                    'PID EXT
                    '1
                    mPidData.ExtPara1 = .Cells(gCstChListColPosOutExtgH).Value
                    mPidData.ExtParaHi1 = .Cells(gCstChListColPosOutDelayH).Value
                    mPidData.ExtParaLo1 = .Cells(gCstChListColPosOutGrep1H).Value
                    mPidData.ExtParaName1 = .Cells(gCstChListColPosOutGrep2H).Value
                    mPidData.ExtParaUnit1 = .Cells(gCstChListColPosAlarmTimeup).Value
                    '2
                    mPidData.ExtPara2 = .Cells(gCstChListColPosOutSp1).Value
                    mPidData.ExtParaHi2 = .Cells(gCstChListColPosOutSp2).Value
                    mPidData.ExtParaLo2 = .Cells(gCstChListColPosOutHys1).Value
                    mPidData.ExtParaName2 = .Cells(gCstChListColPosOutHys2).Value
                    mPidData.ExtParaUnit2 = .Cells(gCstChListColPosOutSt).Value
                    '3
                    mPidData.ExtPara3 = .Cells(gCstChListColPosOutVar).Value
                    mPidData.ExtParaHi3 = .Cells(gCstChListColPosOutStatusH).Value
                    mPidData.ExtParaLo3 = .Cells(gCstChListColPosCompositeIndex).Value
                    mPidData.ExtParaName3 = .Cells(gCstChListColPosTriggerCH).Value
                    mPidData.ExtParaUnit3 = .Cells(gCstChListColPosPinAiTerm).Value
                    '4
                    mPidData.ExtPara4 = .Cells(gCstChListColPosStaNmSF).Value
                    mPidData.ExtParaHi4 = .Cells(gCstChListColPosPortBitCount).Value
                    mPidData.ExtParaLo4 = .Cells(gCstChListColPosPinBitCount).Value
                    mPidData.ExtParaName4 = .Cells(gCstChListColPosAiTerm).Value
                    mPidData.ExtParaUnit4 = .Cells(gCstChListColPosPortAiTerm).Value


                    '仮設定機能対応（アナログ:PID）
                    Call Temporary_setup(1, intRow, intRow, 4)

                End If

            End With

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : 設定値退避(チャンネル）
    ' 返り値    : なし
    ' 引き数    : ARG1 - (I ) システム設定構造体
    ' 機能説明  : チャンネル情報をグループに分けて格納する
    '--------------------------------------------------------------------
    Private Sub mSetChByGroup(ByVal udtSet() As gTypSetChRec)

        Try

            Dim iGroupNo As Integer, iNum(35) As Integer

            For i As Integer = 0 To UBound(udtSet)

                iGroupNo = udtSet(i).udtChCommon.shtGroupNo

                If iGroupNo > 0 Then

                    '▼▼▼ 20100705 ver.0.1.2 同一グループ内で100以上のデータが登録されている場合は無視する ▼▼▼▼▼
                    If iNum(iGroupNo - 1) < gCstOneGroupChannelMax Then

                        mudtChannelGroup.udtGroup(iGroupNo - 1).udtChannelData(iNum(iGroupNo - 1)) = udtSet(i)

                    End If
                    '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                    iNum(iGroupNo - 1) += 1

                End If

            Next

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : 入力チェック
    ' 返り値    : True:入力OK、False:入力NG
    ' 引き数    : なし
    ' 機能説明  : 保存処理の前に入力チェックを行う
    '--------------------------------------------------------------------
    Private Function mChkInput() As Boolean

        Try
            Dim strValue As String

            For i As Integer = 0 To grdCHList.RowCount - 1
                With grdCHList.Rows(i)

                    If .Cells(gCstChListColPosChType).Value <> gCstCodeChTypeNothing Then

                        ''CH No ------------------------------------------
                        If Not IsNumeric(.Cells(gCstChListColPosChNo).Value) Or .Cells(gCstChListColPosChNo).Value = "0000" Or .Cells(gCstChListColPosChNo).Value = "00000" Then
                            MsgBox("Please set CH No." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                            Return False
                        End If

                        If Integer.Parse(.Cells(gCstChListColPosChNo).Value) > 65535 Then
                            MsgBox("Please set CH No. '1'-'65535'." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                            Return False
                        End If

                        ''Remote CH No ------------------------------------
                        ''FCU番号に変更につき、条件文変更　ver.1.4.0 2011.09.29
                        'If mintFcuNo = 2 Then
                        If gudt.SetSystem.udtSysFcu.shtShareChUse = 1 Then    ''共有CH有無(Shareは、CHNo空白でも良い) ■Share対応
                            If Integer.Parse(.Cells(gCstChListColPosShareType).Value) = 1 Then
                                If Not IsNumeric(.Cells(gCstChListColPosShareChid).Value) Or .Cells(gCstChListColPosShareChid).Value = "0000" Or .Cells(gCstChListColPosShareChid).Value = "00000" Then
                                    MsgBox("Please set Remote CH No." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                    Return False
                                End If
                            End If

                            If Integer.Parse(.Cells(gCstChListColPosShareType).Value) = 1 Then
                                If Integer.Parse(.Cells(gCstChListColPosShareChid).Value) > 65535 Then
                                    MsgBox("Please set Remote CH No. '1'-'65535'." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                    Return False
                                End If
                            End If
                        End If

                        ''Item Name --------------------------------------
                        If .Cells(gCstChListColPosItemName).Value <> Nothing Then
                            If .Cells(gCstChListColPosItemName).Value.ToString.Trim.Length > 30 Then
                                MsgBox("Please set Byte 30 bytes to Item Name." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If
                        End If

                        ''Remarks ----------------------------------------
                        If .Cells(gCstChListColPosRemarks).Value <> Nothing Then
                            If .Cells(gCstChListColPosRemarks).Value.ToString.Trim.Length > 16 Then
                                MsgBox("Please set Byte 16 bytes to Remarks." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If
                        End If

                        ''Unit -------------------------------------------
                        If .Cells(gCstChListColPosUnit).Value <> Nothing Then
                            If .Cells(gCstChListColPosUnit).Value.ToString.Trim.Length > 8 Then
                                MsgBox("Please set Byte 8 bytes to Unit." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If
                        End If

                        'Ver2.0.1.2 マニュアルINPUTの場合、バイト数チェックは行わない
                        Call gSetComboBox(cmbStatus, gEnmComboType.ctChListChannelListStatusAnalog)
                        Dim intValue As Integer = 0
                        Dim bCHK As Boolean = False
                        intValue = cmbStatus.FindStringExact(.Cells(gCstChListColPosStatusIn).Value)
                        If intValue >= 0 Then
                            '既存
                            bCHK = False
                        Else
                            '手入力
                            bCHK = True
                        End If
                        If bCHK = False Then
                            ''Status In --------------------------------------
                            If .Cells(gCstChListColPosStatusIn).Value <> Nothing Then

                                strValue = .Cells(gCstChListColPosStatusIn).Value
                                If strValue.IndexOf("/") >= 0 Then
                                    If .Cells(gCstChListColPosStatusIn).Value.ToString.Trim.Length > 17 Then
                                        MsgBox("Please set Byte 16 bytes to Status Out. (********/********)" & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                        Return False
                                    End If
                                Else
                                    If .Cells(gCstChListColPosStatusIn).Value.ToString.Trim.Length > 8 Then
                                        MsgBox("Please set Byte 16 bytes to Status Out. (********/********)" & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                        Return False
                                    End If
                                End If

                            End If
                        End If

                        ''Status Out -------------------------------------
                        If .Cells(gCstChListColPosStatusOut).Value <> Nothing Then
                            If .Cells(gCstChListColPosStatusOut).Value.ToString.Trim.Length > 16 Then
                                MsgBox("Please set Byte 16 bytes to Status In." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If
                        End If

                        ''Off Set ----------------------------------------
                        If .Cells(gCstChListColPosOffset).Value <> Nothing Then
                            If .Cells(gCstChListColPosOffset).Value.ToString.Trim.Length > 9 Then
                                MsgBox("Please set Byte 9 bytes to Off Set." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If
                        End If

                        ''String ----------------------------------------
                        If .Cells(gCstChListColPosString).Value <> Nothing Then
                            If Integer.Parse(.Cells(gCstChListColPosString).Value) > 8 Then
                                MsgBox("Please set String '1'-'8'." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If
                        End If

                        ''Range ------------------------------------------
                        If NZf(.Cells(gCstChListColPosRangeLo).Value) = "" And NZf(.Cells(gCstChListColPosRangeHi).Value) = "" Then
                            ''OK
                        ElseIf NZf(.Cells(gCstChListColPosRangeLo).Value) <> "" And NZf(.Cells(gCstChListColPosRangeHi).Value) <> "" Then

                            If Not IsNumeric(.Cells(gCstChListColPosRangeLo).Value) Then
                                MsgBox("Lo Range is wrong.  Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                            If Not IsNumeric(.Cells(gCstChListColPosRangeHi).Value) Then
                                MsgBox("Hi Range is wrong.  Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                            ''大小チェック
                            If Val(.Cells(gCstChListColPosRangeLo).Value) > Val(.Cells(gCstChListColPosRangeHi).Value) Then
                                MsgBox("Lo Range/Hi Range is wrong." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                        Else
                            ''片方のみの設定
                            MsgBox("Lo Range/Hi Range is wrong." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                            Return False
                        End If

                        ''Normal HI LO  ----------------------------------
                        If .Cells(gCstChListColPosNormalLo).Value = Nothing And .Cells(gCstChListColPosNormalHi).Value = Nothing Then
                            ''OK
                        ElseIf .Cells(gCstChListColPosNormalLo).Value.ToString <> Nothing And .Cells(gCstChListColPosNormalHi).Value.ToString <> Nothing Then

                            If Not IsNumeric(.Cells(gCstChListColPosNormalLo).Value) Then
                                MsgBox("Lo Normal is wrong.  Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                            If Not IsNumeric(.Cells(gCstChListColPosNormalHi).Value) Then
                                MsgBox("Hi Normal is wrong.  Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                            ''大小チェック
                            If Val(.Cells(gCstChListColPosNormalLo).Value) > Val(.Cells(gCstChListColPosNormalHi).Value) Then
                                MsgBox("Lo Normal/HI Normal is wrong." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                        Else
                            ''片方のみの設定
                            MsgBox("Lo Normal/HI Normal is wrong." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                            Return False
                        End If

                        ''Composite --------------------------------------
                        If .Cells(gCstChListColPosComposite).Value <> Nothing And .Cells(gCstChListColPosChType).Value <> gCstCodeChTypePID Then

                            If Integer.Parse(.Cells(gCstChListColPosComposite).Value) > 64 Or Integer.Parse(.Cells(gCstChListColPosComposite).Value) = 0 Then
                                MsgBox("Please set Composite table index '1'-'64'." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                            'Ver1.12.1 一旦コメント
                            '' ''ダブりチェック
                            ''Dim intIndex As Integer = Integer.Parse(.Cells(gCstChListColPosComposite).Value)
                            ''Dim intNGflg As Integer = 0

                            '' ''グループ内をチェック
                            ''For j As Integer = 0 To grdCHList.RowCount - 1

                            ''    If i <> j Then
                            ''        If grdCHList(gCstChListColPosChType, j).Value = gCstCodeChTypeComposite Or _
                            ''           grdCHList(gCstChListColPosChType, j).Value = gCstCodeChTypeValve Then

                            ''            If Val(grdCHList(gCstChListColPosComposite, j).Value) = intIndex Then
                            ''                intNGflg = 1    ''ダブり
                            ''                Exit For
                            ''            End If
                            ''        End If
                            ''    End If
                            ''Next

                            ''If intNGflg = 1 Then
                            ''    MsgBox("This Composite table index is used in other channels." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                            ''    Return False
                            ''End If

                            '' ''自グループ以外をチェック

                            ''For j As Integer = LBound(gudt.SetChInfo.udtChannel) To UBound(gudt.SetChInfo.udtChannel)

                            ''    With gudt.SetChInfo.udtChannel(j)

                            ''        If .udtChCommon.shtGroupNo <> mSelectGroupIndex + 1 Then

                            ''            If .udtChCommon.shtChType = gCstCodeChTypeComposite Then

                            ''                If .CompositeTableIndex = intIndex Then
                            ''                    intNGflg = 1    ''ダブり
                            ''                    Exit For
                            ''                End If

                            ''            ElseIf .udtChCommon.shtChType = gCstCodeChTypeValve And _
                            ''                   .udtChCommon.shtData = gCstCodeChDataTypeValveDI_DO Then

                            ''                If .ValveCompositeTableIndex = intIndex Then
                            ''                    intNGflg = 1    ''ダブり
                            ''                    Exit For
                            ''                End If

                            ''            End If

                            ''        End If

                            ''    End With

                            ''Next

                            ''If intNGflg = 1 Then
                            ''    MsgBox("This Composite table index is used in other Groups." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                            ''    Return False
                            ''End If

                        End If

                        ''コンポジットCHの場合、コンポジットテーブルを選択済みか？ -----------------------------
                        If .Cells(gCstChListColPosChType).Value = gCstCodeChTypeComposite Then

                            If Val(.Cells(gCstChListColPosComposite).Value) = 0 Then
                                MsgBox("Please set Composite table index '1'-'64'." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If

                        End If

                        ''バルブCHでDiDoの場合、コンポジットテーブルを選択済みか？ ------------------------------
                        If .Cells(gCstChListColPosChType).Value = gCstCodeChTypeValve Then

                            If .Cells(gCstChListColPosDataType).Value = gCstCodeChDataTypeValveDI_DO Then

                                If Val(.Cells(gCstChListColPosComposite).Value) = 0 Then
                                    MsgBox("Please set Composite table index '1'-'64'." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                    Return False
                                End If

                            End If

                        End If


                        '' Ver1.8.8 2015.12.11 追加
                        ''TagNo. ----------------------------------------
                        If .Cells(gCstChListColPosRemarks).Value <> Nothing Then
                            If .Cells(gCstChListColPosTagRow).Value.ToString.Trim.Length > 16 Then
                                MsgBox("Please set Byte 16 bytes to TagNo." & vbCrLf & "Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                                Return False
                            End If
                        End If

                        'プルダウン変更によりチェック無し
                        ' ''ﾛｲﾄﾞ対応　ｱﾗｰﾑﾚﾍﾞﾙ ----------------------------------------
                        'If Not IsNumeric(.Cells(gCstChListColPosLRRow).Value) Then
                        '    MsgBox("Alarm Level is wrong.  Line:" & i + 1.ToString, MsgBoxStyle.Exclamation, "Input error")
                        '    Return False
                        'End If

                        '' Ver1.10.1 2016.02.29 力率対応    JACOM-22のCHで力率表示の場合はｾﾝﾀｰﾌﾗｸﾞをｾｯﾄ
                        If .Cells(gCstChListColPosChType).Value = gCstCodeChTypeAnalog Then
                            If .Cells(gCstChListColPosDataType).Value = gCstCodeChDataTypeAnalogJacom Or _
                               .Cells(gCstChListColPosDataType).Value = gCstCodeChDataTypeAnalogJacom55 Then
                                If .Cells(gCstChListPowerFactorRow).Value = "1" Then
                                    .Cells(gCstChListColPosCenterGraph).Value = True
                                End If
                            End If
                        End If

                    End If

                End With

            Next

            Return True

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : 少数点以下桁数を獲得する
    ' 返り値    : 少数点以下桁数
    ' 引き数    : ARG1 - (I ) 行位置
    ' 機能説明  : RangeLo, RangeHi の中で最も小数点以下桁数の大きい桁を返す
    '--------------------------------------------------------------------
    Private Function mGetDecimalPosition(ByVal intRow As Integer) As Integer

        Try

            Dim i As Integer
            Dim p1 As Integer, p2 As Integer = 0
            Dim strValue As String

            ''Value, RangeLo, RangeHi, LoNormal, HiNormal の中で最も小数点以下桁数の大きいものをGETする

            ''Value
            'For i = 0 To 3

            '    p1 = 0
            '    strValue = IIf(grdCHList(mcstValueHH + i, intRow).Value = Nothing, "", grdCHList(mcstValueHH + i, intRow).Value)
            '    If strValue <> "" Then
            '        p1 = strValue.IndexOf(".")
            '        If p1 > 0 Then p1 = strValue.Substring(p1 + 1).Length ''P1 <-- 小数点以下桁数
            '    End If

            '    If p1 > p2 Then p2 = p1

            'Next

            ''Range
            'Ver2.0.2.7 温度のﾚﾝｼﾞﾀｲﾌﾟも小数点対応
            'If grdCHList(gCstChListColPosRangeType, intRow).ReadOnly = True Then
            For i = 0 To 1

                p1 = 0
                strValue = IIf(grdCHList(gCstChListColPosRangeLo + i, intRow).Value = Nothing, "", grdCHList(gCstChListColPosRangeLo + i, intRow).Value)
                If strValue <> "" Then
                    p1 = strValue.IndexOf(".")
                    If p1 > 0 Then p1 = strValue.Substring(p1 + 1).Length ''P1 <-- 小数点以下桁数
                End If

                If p1 > p2 Then p2 = p1

            Next
            'End If

            ''Normal
            'For i = 0 To 1

            '    p1 = 0
            '    strValue = IIf(grdCHList(mcstNormalLo + i, intRow).Value = Nothing, "", grdCHList(mcstNormalLo + i, intRow).Value)
            '    If strValue <> "" Then
            '        p1 = strValue.IndexOf(".")
            '        If p1 > 0 Then p1 = strValue.Substring(p1 + 1).Length ''P1 <-- 小数点以下桁数
            '    End If

            '    If p1 > p2 Then p2 = p1

            'Next

            Return p2

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    Private Function mGetDecimalPosition2(ByVal intRow As Integer) As Integer

        Try

            Dim i As Integer
            Dim p1 As Integer, p2 As Integer = 0
            Dim strValue As String


            ''Range
            For i = 0 To 1

                p1 = 0
                strValue = IIf(grdCHList(gCstChListColPosRangeLo + i, intRow).Value = Nothing, "", grdCHList(gCstChListColPosRangeLo + i, intRow).Value)
                If strValue <> "" Then
                    p1 = strValue.IndexOf(".")
                    If p1 > 0 Then p1 = strValue.Substring(p1 + 1).Length ''P1 <-- 小数点以下桁数
                End If

                If p1 > p2 Then p2 = p1

            Next

            Return p2

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function


    '--------------------------------------------------------------------
    ' 機能      : コンポジット設定テーブルのインデックスを獲得する
    ' 返り値    : インデックス
    ' 引き数    : なし
    ' 機能説明  : 新規登録時に最大配列数＋１をGETする
    '--------------------------------------------------------------------
    Private Function mGetIndexCompositeTable() As Integer

        Try

            Dim idx As Integer = -1

            For i As Integer = LBound(gudt.SetChComposite.udtComposite) To UBound(gudt.SetChComposite.udtComposite)

                If gudt.SetChComposite.udtComposite(i).shtChid = 0 Then
                    idx = i
                    Exit For
                End If

            Next

            Return idx

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : 登録済チャンネル数を獲得する(自グループ以外）
    ' 返り値    : なし
    ' 引き数    : ARG1 - (I ) チャンネル設定構造体
    ' 機能説明  : 3000件を超えないために
    '--------------------------------------------------------------------
    Private Sub mGetChannelMax(ByVal udtSet() As gTypSetChRec)

        Try

            Dim intGroupNo As Integer, intChNo As Integer
            Dim intCnt As Integer = 0

            For i As Integer = 0 To UBound(udtSet)

                intChNo = udtSet(i).udtChCommon.shtChno
                intGroupNo = udtSet(i).udtChCommon.shtGroupNo

                If intChNo > 0 Then

                    ''自グループ以外
                    If intGroupNo <> mSelectGroupIndex + 1 Then

                        intCnt += 1

                    End If

                End If

            Next

            gMaxChannel = intCnt

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : FU Addressからチャンネル番号を獲得する
    ' 返り値    : 0=対象のチャンネルあり　-1=なし
    ' 引き数    : ARG1 - (I ) FU番号
    '           : ARG2 - (I ) FUポート番号
    '           : ARG3 - (I ) FU計測点番号
    '           : ARG4 - (I ) 自身のチャンネルNO
    '           : ARG5 - ( O) チャンネル番号
    ' 機能説明  : 自身のチャンネルは除外する
    '--------------------------------------------------------------------
    Private Function mGetChNoFromFuAddress(ByVal hintFuno As Integer, ByVal hintPortno As Integer, ByVal hintPin As Integer, _
                                           ByVal hintCH As Integer, ByRef hChNo As Integer) As Integer

        Try

            If gGet2Byte(hintFuno) = gCstCodeChNotSetFuNo Then Return -1

            For i As Integer = LBound(gudt.SetChInfo.udtChannel) To UBound(gudt.SetChInfo.udtChannel)

                With gudt.SetChInfo.udtChannel(i).udtChCommon

                    If .shtChType = gCstCodeChTypeAnalog _
                    Or .shtChType = gCstCodeChTypeDigital Then    ''アナログかデジタル

                        If .shtChno <> hintCH Then          ''自身のチャンネルは除く

                            ''FU Addresuが一致するか？
                            If .shtFuno = hintFuno And .shtPortno = hintPortno And .shtPin = hintPin Then

                                hChNo = .shtChno
                                Return 0
                            End If

                        End If

                    End If
                End With

            Next

            Return -1

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : FU Addressを変更した場合、端子台の表示名称設定構造体のCHも更新する
    ' 返り値    : 0=移動完了　1=FU Addressの変更なし
    ' 引き数    : ARG1 - (I ) CH No.
    '           : ARG2 - (I ) 新FU番号
    '           : ARG3 - (I ) 新FUポート番号
    '           : ARG4 - (I ) 新FU計測点番号
    '           : ARG5 - (I ) 旧FU番号
    '           : ARG6 - (I ) 旧FUポート番号
    '           : ARG7 - (I ) 旧FU計測点番号
    '           : ARG8 - (I ) 新FU計測点個数
    '           : ARG9 - (I ) 旧FU計測点個数
    '--------------------------------------------------------------------
    Private Function mChangeFuAddress(ByVal hintChNo As Integer, _
                                      ByVal hintFunoNew As Integer, ByVal hintPortnoNew As Integer, ByVal hintPinNew As Integer, _
                                      ByVal hintFuno As Integer, ByVal hintPortno As Integer, ByVal hintPin As Integer, _
                                      Optional ByVal hintPinNoNew As Integer = 1, Optional ByVal hintPinNo As Integer = 1) As Integer

        Dim intType As Integer
        Dim intLoopMax As Integer
        Dim intIdx As Integer
        Dim strChNo(7) As String

        'コピー貼り付け時、グループ番号を変更した場合　設定無しとする　2015/6/10 T.Ueki
        If hintFuno = 0 And hintPortno = 0 And hintPin = 0 Then
            hintFuno = gCstCodeChCommonFuNoNothing
            hintPortno = gCstCodeChCommonPortNoNothing
            hintPinNo = gCstCodeChCommonPinNothing
        End If

        'Ver2.0.2.0 ポート番号が０＝無しとする
        If hintPortno = 0 Then
            hintFuno = gCstCodeChCommonFuNoNothing
            hintPortno = gCstCodeChCommonPortNoNothing
            hintPinNo = gCstCodeChCommonPinNothing
        End If


        ''旧アドレスのスロット種別　GET
        ''ポート設定が無い場合は処理しない(コピー、ペースト時エラーとなる)     2013.12.16      
        If hintFuno <> gCstCodeChCommonFuNoNothing And hintPortno <> gCstCodeChCommonPortNoNothing Then

            intType = gudt.SetFu.udtFu(hintFuno).udtSlotInfo(hintPortno - 1).shtType

            ''スロット種別により必要端子数が異なる
            If intType = gCstCodeFuSlotTypeDO Or intType = gCstCodeFuSlotTypeDI Then
                intLoopMax = 1 : intIdx = 1

                ''Di/Do の場合計測点個数により端子数が異なる
                If hintPinNo > 1 Then
                    intLoopMax = hintPinNo
                End If

            ElseIf intType = gCstCodeFuSlotTypeAO Or intType = gCstCodeFuSlotTypeAI_2 Or _
                   intType = gCstCodeFuSlotTypeAI_1_5 Or intType = gCstCodeFuSlotTypeAI_K Then
                intLoopMax = 2 : intIdx = 2

            ElseIf intType = gCstCodeFuSlotTypeAI_3 Or intType = gCstCodeFuSlotTypeAI_4_20 Then
                intLoopMax = 3 : intIdx = 3
            End If

            For i As Integer = 0 To intLoopMax - 1

                ''旧アドレスのCH No クリア
                With gudt.SetChDisp.udtChDisp(hintFuno).udtSlotInfo(hintPortno - 1).udtPinInfo((hintPin - 1) * intIdx + i)

                    'Ver2.0.7.B 不具合対応
                    If ((hintPin - 1) * intIdx + i) <= 63 Then

                        If .shtChid = hintChNo Then .shtChid = 0

                    End If

                End With

            Next

        End If

        ''新アドレスのスロット種別　GET 'T.Ueki ポート番号が未設定の場合処理しない　2015/5/13
        If hintFunoNew <> gCstCodeChCommonFuNoNothing And hintPortnoNew <> gCstCodeChCommonPortNoNothing Then

            intType = gudt.SetFu.udtFu(hintFunoNew).udtSlotInfo(hintPortnoNew - 1).shtType

            If intType = 0 Then

                ''スロット種別が 0　→　まだ端子台に何も設定がされていない

            Else

                'T.Ueki ピン番号が未設定の場合処理しない　2015/5/13
                If hintPinNew <> gCstCodeChCommonPinNothing Then

                    ''スロット種別により必要端子数が異なる
                    If intType = gCstCodeFuSlotTypeDO Or intType = gCstCodeFuSlotTypeDI Then
                        intLoopMax = 1 : intIdx = 1

                        ''Di/Do の場合計測点個数により端子数が異なる
                        If hintPinNoNew > 1 Then
                            intLoopMax = hintPinNoNew
                        End If

                    ElseIf intType = gCstCodeFuSlotTypeAO Or intType = gCstCodeFuSlotTypeAI_2 Or _
                           intType = gCstCodeFuSlotTypeAI_1_5 Or intType = gCstCodeFuSlotTypeAI_K Then
                        intLoopMax = 2 : intIdx = 2

                    ElseIf intType = gCstCodeFuSlotTypeAI_3 Or intType = gCstCodeFuSlotTypeAI_4_20 Then
                        intLoopMax = 3 : intIdx = 3
                    End If

                    For i As Integer = 0 To intLoopMax - 1

                        ''新アドレスのCH No　SET
                        If hintFunoNew <> gCstCodeChCommonFuNoNothing Then
                            With gudt.SetChDisp.udtChDisp(hintFunoNew).udtSlotInfo(hintPortnoNew - 1).udtPinInfo((hintPinNew - 1) * intIdx + i)

                                .shtChid = hintChNo

                            End With
                        End If

                    Next
                End If
            End If

        End If
        'End If
    End Function

    '--------------------------------------------------------------------
    ' 機能      : FU Addresuを変更した場合に計測点情報を移動する
    ' 返り値    : 0=移動完了　1=FU Addressの変更なし
    ' 引き数    : ARG1 - (I ) 新FU番号
    '           : ARG2 - (I ) 新FUポート番号
    '           : ARG3 - (I ) 新FU計測点番号
    '           : ARG4 - (I ) 旧FU番号
    '           : ARG5 - (I ) 旧FUポート番号
    '           : ARG6 - (I ) 旧FU計測点番号
    '           : ARG7 - (I ) 新FU計測点個数
    '           : ARG8 - (I ) 旧FU計測点個数
    ' 機能説明  : FU Addressが変更された場合のみ処理する
    '--------------------------------------------------------------------
    Private Function mChangeCableMark(ByVal hblnCopy As Boolean, _
                                      ByVal hintFunoNew As Integer, ByVal hintPortnoNew As Integer, ByVal hintPinNew As Integer, _
                                      ByVal hintFuno As Integer, ByVal hintPortno As Integer, ByVal hintPin As Integer, _
                                      Optional ByVal hintPinNoNew As Integer = 1, Optional ByVal hintPinNo As Integer = 1) As Integer

        Try
            Dim iAns As Integer = -1
            Dim intType As Integer, intLoopMax As Integer, intIdx As Integer
            Dim strWireMark(7) As String, strWireMarkClass(7) As String
            Dim strDest(7) As String
            Dim strCoreNoIn(7) As String, strCoreNoCom(7) As String

            If (hintFunoNew = hintFuno) And (hintPortnoNew = hintPortno) And (hintPinNew = hintPin) Then

                ''FUアドレスの変更なし
                iAns = 1

            ElseIf hintFunoNew = gCstCodeChCommonFuNoNothing Then

                ''FUアドレスは未設定（新アドレスが未設定）
                iAns = 1
            ElseIf hintPortnoNew = 0 Or hintPortnoNew = gCstCodeChCommonPortNoNothing Then
                'Ver2.0.2.0
                Return 0
            ElseIf hintPortno = 0 Or hintPortno = gCstCodeChCommonPortNoNothing Then

                ''FUアドレスは新規設定（旧アドレスはない）
                ''CableMarkの移動は不要だがCH登録が必要なため   2013.08.07  K.Fujimoto
                'iAns = 1
                Return 0

            End If

            If iAns <> 1 Then

                ''旧アドレスのスロット種別　GET
                intType = gudt.SetFu.udtFu(hintFuno).udtSlotInfo(hintPortno - 1).shtType

                ''スロット種別により必要端子数が異なる
                If intType = gCstCodeFuSlotTypeDO Or intType = gCstCodeFuSlotTypeDI Then
                    intLoopMax = 1 : intIdx = 1

                    ''Di/Do の場合計測点個数により端子数が異なる
                    If hintPinNoNew > 1 Then
                        intLoopMax = hintPinNoNew
                    End If

                ElseIf intType = gCstCodeFuSlotTypeAO Or intType = gCstCodeFuSlotTypeAI_2 Or _
                       intType = gCstCodeFuSlotTypeAI_1_5 Or intType = gCstCodeFuSlotTypeAI_K Then
                    intLoopMax = 2 : intIdx = 2

                ElseIf intType = gCstCodeFuSlotTypeAI_3 Or intType = gCstCodeFuSlotTypeAI_4_20 Then
                    intLoopMax = 3 : intIdx = 3
                End If

                For i As Integer = 0 To intLoopMax - 1

                    ''旧アドレスの計測点情報　GET
                    With mChDispRec(hintFuno).udtSlotInfo(hintPortno - 1).udtPinInfo((hintPin - 1) * intIdx + i)

                        'T.Ueki 変更処理無し 2015/4/14
                        'strWireMark(i) = .strWireMark
                        'strWireMarkClass(i) = .strWireMarkClass
                        'strDest(i) = .strDest
                        'strCoreNoIn(i) = .strCoreNoIn
                        'strCoreNoCom(i) = .strCoreNoCom

                    End With

                    If hblnCopy = False Then

                        With gudt.SetChDisp.udtChDisp(hintFuno).udtSlotInfo(hintPortno - 1).udtPinInfo((hintPin - 1) * intIdx + i)

                            ''旧アドレスの計測点情報 クリア 'T.Ueki 変更処理無し 2015/4/14
                            '.strWireMark = ""
                            '.strWireMarkClass = ""
                            '.strDest = ""
                            '.strCoreNoIn = ""
                            '.strCoreNoCom = ""

                        End With

                    End If

                    ''新アドレスの計測点情報　SET
                    With gudt.SetChDisp.udtChDisp(hintFunoNew).udtSlotInfo(hintPortnoNew - 1).udtPinInfo((hintPinNew - 1) * intIdx + i)

                        'T.Ueki 変更処理無し 2015/4/14
                        '.strWireMark = strWireMark(i)
                        '.strWireMarkClass = strWireMarkClass(i)
                        '.strDest = strDest(i)
                        '.strCoreNoIn = strCoreNoIn(i)
                        '.strCoreNoCom = strCoreNoCom(i)

                    End With

                Next

                iAns = 0

            End If

            Return iAns

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : 計測点情報をクリアする
    ' 返り値    : なし
    ' 引き数    : ARG1 - (I ) FU番号
    '           : ARG2 - (I ) FUポート番号
    '           : ARG3 - (I ) FU計測点番号
    '           : ARG4 - (I ) FU計測点個数
    ' 機能説明  : CHを削除した時に端子台に設定済みのCableMark等をクリアする
    '--------------------------------------------------------------------
    Private Sub mClearCableMark(ByVal hintFuno As Integer, ByVal hintPortno As Integer, _
                                ByVal hintPin As Integer, ByVal hintPinNo As Integer)

        Try
            Dim intType As Integer, intLoopMax As Integer, intIdx As Integer

            ''スロット種別　GET
            intType = gudt.SetFu.udtFu(hintFuno).udtSlotInfo(hintPortno - 1).shtType

            ''スロット種別により必要端子数が異なる
            If intType = gCstCodeFuSlotTypeDO Or intType = gCstCodeFuSlotTypeDI Then
                intLoopMax = 1 : intIdx = 1

                ''Di/Do の場合計測点個数により端子数が異なる
                If hintPinNo > 1 Then
                    intLoopMax = hintPinNo
                End If

            ElseIf intType = gCstCodeFuSlotTypeAO Or intType = gCstCodeFuSlotTypeAI_2 Or _
                   intType = gCstCodeFuSlotTypeAI_1_5 Or intType = gCstCodeFuSlotTypeAI_K Then
                intLoopMax = 2 : intIdx = 2

            ElseIf intType = gCstCodeFuSlotTypeAI_3 Or intType = gCstCodeFuSlotTypeAI_4_20 Then
                intLoopMax = 3 : intIdx = 3
            End If

            For i As Integer = 0 To intLoopMax - 1

                With gudt.SetChDisp.udtChDisp(hintFuno).udtSlotInfo(hintPortno - 1).udtPinInfo((hintPin - 1) * intIdx + i)

                    ''計測点情報 クリア
                    '.strWireMark = ""
                    '.strWireMarkClass = ""
                    '.strDest = ""
                    '.strCoreNoIn = ""
                    '.strCoreNoCom = ""
                    .shtTerminalNo = 0
                    .shtChid = 0

                End With

            Next

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : トリガCHをサーチする
    ' 返り値    : トリガCH No.
    ' 引き数    : ARG1 - (I ) チャンネルNo.
    ' 機能説明  : 対象となるCHにトリガCHが設定されているかをチェック
    '             し、トリガCHをを返す
    '--------------------------------------------------------------------
    Private Function mGetTriggerCH(ByVal intChNo As Integer) As Integer

        Try
            Dim intTrgCh As Integer = 0

            For i As Integer = 0 To UBound(gudt.SetChRunHour.udtDetail)

                With gudt.SetChRunHour.udtDetail(i)

                    If .shtChid = intChNo Then

                        intTrgCh = .shtTrgChid
                        Exit For

                    End If

                End With

            Next

            mGetTriggerCH = intTrgCh

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能説明  ： グリッドを初期化する
    ' 引数      ： なし
    ' 戻値      ： なし
    '--------------------------------------------------------------------
    Private Sub mInitialDataGrid()

        Try

            Dim i As Integer

            Dim Column1 As New DataGridViewComboBoxColumn : Column1.Name = "cmbChType" : Column1.FlatStyle = FlatStyle.Popup
            Dim Column2 As New DataGridViewComboBoxColumn : Column2.Name = "cmbSysNo" : Column2.ReadOnly = True : Column2.FlatStyle = FlatStyle.Popup
            Dim Column3 As New DataGridViewTextBoxColumn : Column3.Name = "txtChNo" : Column3.ReadOnly = True
            Dim Column4 As New DataGridViewTextBoxColumn : Column4.Name = "txtTag" : Column4.ReadOnly = True
            Dim Column5 As New DataGridViewTextBoxColumn : Column5.Name = "txtItemName" : Column5.ReadOnly = True
            Dim Column6 As New DataGridViewTextBoxColumn : Column6.Name = "txtStatusIn" : Column6.ReadOnly = True
            Dim Column7 As New DataGridViewTextBoxColumn : Column7.Name = "txtRangeLo" : Column7.ReadOnly = True
            Dim Column8 As New DataGridViewTextBoxColumn : Column8.Name = "txtRangeHi" : Column8.ReadOnly = True
            Dim Column9 As New DataGridViewTextBoxColumn : Column9.Name = "txtUnit" : Column9.ReadOnly = True
            Dim Column10 As New DataGridViewTextBoxColumn : Column10.Name = "txtValueH" : Column10.ReadOnly = True
            Dim Column11 As New DataGridViewTextBoxColumn : Column11.Name = "txtExtGH" : Column11.ReadOnly = True
            Dim Column12 As New DataGridViewTextBoxColumn : Column12.Name = "txtDelayH" : Column12.ReadOnly = True
            Dim Column13 As New DataGridViewTextBoxColumn : Column13.Name = "txtGRep1H" : Column13.ReadOnly = True
            Dim Column14 As New DataGridViewTextBoxColumn : Column14.Name = "txtGRep2H" : Column14.ReadOnly = True
            Dim Column15 As New DataGridViewTextBoxColumn : Column15.Name = "txtValueL" : Column15.ReadOnly = True
            Dim Column16 As New DataGridViewTextBoxColumn : Column16.Name = "txtExtGL" : Column16.ReadOnly = True
            Dim Column17 As New DataGridViewTextBoxColumn : Column17.Name = "txtDelayL" : Column17.ReadOnly = True
            Dim Column18 As New DataGridViewTextBoxColumn : Column18.Name = "txtGRep1L" : Column18.ReadOnly = True
            Dim Column19 As New DataGridViewTextBoxColumn : Column19.Name = "txtGRep2L" : Column19.ReadOnly = True
            Dim Column20 As New DataGridViewTextBoxColumn : Column20.Name = "txtExtGH_O" : Column20.ReadOnly = True
            Dim Column21 As New DataGridViewTextBoxColumn : Column21.Name = "txtDelayH_O" : Column21.ReadOnly = True
            Dim Column22 As New DataGridViewTextBoxColumn : Column22.Name = "txtGRep1H_O" : Column22.ReadOnly = True
            Dim Column23 As New DataGridViewTextBoxColumn : Column23.Name = "txtGRep2H_O" : Column23.ReadOnly = True
            Dim Column24 As New DataGridViewTextBoxColumn : Column24.Name = "txtValueHH" : Column24.ReadOnly = True
            Dim Column25 As New DataGridViewTextBoxColumn : Column25.Name = "txtExtGHH" : Column25.ReadOnly = True
            Dim Column26 As New DataGridViewTextBoxColumn : Column26.Name = "txtDelayHH" : Column26.ReadOnly = True
            Dim Column27 As New DataGridViewTextBoxColumn : Column27.Name = "txtGRep1HH" : Column27.ReadOnly = True
            Dim Column28 As New DataGridViewTextBoxColumn : Column28.Name = "txtGRep2HH" : Column28.ReadOnly = True
            Dim Column29 As New DataGridViewTextBoxColumn : Column29.Name = "txtValueLL" : Column29.ReadOnly = True
            Dim Column30 As New DataGridViewTextBoxColumn : Column30.Name = "txtExtGLL" : Column30.ReadOnly = True
            Dim Column31 As New DataGridViewTextBoxColumn : Column31.Name = "txtDelayLL" : Column31.ReadOnly = True
            Dim Column32 As New DataGridViewTextBoxColumn : Column32.Name = "txtGRep1LL" : Column32.ReadOnly = True
            Dim Column33 As New DataGridViewTextBoxColumn : Column33.Name = "txtGRep2LL" : Column33.ReadOnly = True
            Dim Column34 As New DataGridViewComboBoxColumn : Column34.Name = "cmbDataType" : Column34.ReadOnly = True : Column34.FlatStyle = FlatStyle.Popup
            Dim Column35 As New DataGridViewTextBoxColumn : Column35.Name = "txtSsignal" : Column35.ReadOnly = True
            Dim Column36 As New DataGridViewTextBoxColumn : Column36.Name = "txtFUaddress" : Column36.ReadOnly = True
            Dim Column37 As New DataGridViewTextBoxColumn : Column37.Name = "txtPortaddress" : Column37.ReadOnly = True
            Dim Column38 As New DataGridViewTextBoxColumn : Column38.Name = "txtPinaddress" : Column38.ReadOnly = True
            Dim Column39 As New DataGridViewTextBoxColumn : Column39.Name = "txtRL" : Column39.ReadOnly = True
            Dim Column40 As New DataGridViewTextBoxColumn : Column40.Name = "txtExtGSF" : Column40.ReadOnly = True
            Dim Column41 As New DataGridViewTextBoxColumn : Column41.Name = "txtDelaySF" : Column41.ReadOnly = True
            Dim Column42 As New DataGridViewTextBoxColumn : Column42.Name = "txtRemarks" : Column42.ReadOnly = True
            Dim Column43 As New DataGridViewComboBoxColumn : Column43.Name = "cmbAlmLevel" : Column43.ReadOnly = True : Column43.FlatStyle = FlatStyle.Popup
            Dim Column44 As New DataGridViewTextBoxColumn : Column44.Name = "txtLoNormal" : Column44.ReadOnly = True
            Dim Column45 As New DataGridViewTextBoxColumn : Column45.Name = "txtHiNormal" : Column45.ReadOnly = True
            Dim Column46 As New DataGridViewTextBoxColumn : Column46.Name = "txtDmy" : Column46.ReadOnly = True : Column46.Visible = False 'Ver2.0.0.9 非表示化
            Dim Column47 As New DataGridViewTextBoxColumn : Column47.Name = "txtSC" : Column47.ReadOnly = True
            Dim Column48 As New DataGridViewComboBoxColumn : Column48.Name = "cmbTime" : Column48.ReadOnly = True : Column48.FlatStyle = FlatStyle.Popup
            Dim Column49 As New DataGridViewTextBoxColumn : Column49.Name = "txtEP" : Column49.ReadOnly = True
            Dim Column50 As New DataGridViewTextBoxColumn : Column50.Name = "txtAC" : Column50.ReadOnly = True
            Dim Column51 As New DataGridViewTextBoxColumn : Column51.Name = "txtPLC" : Column51.ReadOnly = True
            Dim Column52 As New DataGridViewTextBoxColumn : Column52.Name = "txtPowerFactor" : Column52.ReadOnly = True
            Dim Column53 As New DataGridViewTextBoxColumn : Column53.Name = "txtString" : Column53.ReadOnly = True : Column53.Visible = False 'Ver2.0.0.9 非表示化
            Dim Column54 As New DataGridViewCheckBoxColumn : Column54.Name = "chkCenterGraph" : Column54.ReadOnly = True
            Dim Column55 As New DataGridViewComboBoxColumn : Column55.Name = "cmbEccFunc" : Column55.ReadOnly = True : Column55.FlatStyle = FlatStyle.Popup
            Dim Column56 As New DataGridViewTextBoxColumn : Column56.Name = "txtSIO" : Column56.ReadOnly = True
            Dim Column57 As New DataGridViewTextBoxColumn : Column57.Name = "txtGWS" : Column57.ReadOnly = True
            Dim Column58 As New DataGridViewComboBoxColumn : Column58.Name = "cmbShareType" : Column58.ReadOnly = True : Column58.FlatStyle = FlatStyle.Popup
            Dim Column59 As New DataGridViewTextBoxColumn : Column59.Name = "txtShareChid" : Column59.ReadOnly = True
            Dim Column60 As New DataGridViewTextBoxColumn : Column60.Name = "txtStatusH" : Column60.ReadOnly = True
            Dim Column61 As New DataGridViewTextBoxColumn : Column61.Name = "txtStatusL" : Column61.ReadOnly = True
            Dim Column62 As New DataGridViewTextBoxColumn : Column62.Name = "txtStatusHH" : Column62.ReadOnly = True
            Dim Column63 As New DataGridViewTextBoxColumn : Column63.Name = "txtStatusLL" : Column63.ReadOnly = True
            Dim Column64 As New DataGridViewTextBoxColumn : Column64.Name = "txtOffSet" : Column64.ReadOnly = True : Column64.Visible = False 'Ver2.0.0.9 非表示化
            Dim Column65 As New DataGridViewTextBoxColumn : Column65.Name = "txtFilterCoef" : Column65.ReadOnly = True : Column65.Visible = False 'Ver2.0.0.9 非表示化
            Dim Column66 As New DataGridViewTextBoxColumn : Column66.Name = "txtComposite" : Column66.ReadOnly = True
            Dim Column67 As New DataGridViewTextBoxColumn : Column67.Name = "txtAlarmTimeup" : Column67.ReadOnly = True
            Dim Column68 As New DataGridViewTextBoxColumn : Column68.Name = "txtFUOutStart" : Column68.ReadOnly = True
            Dim Column69 As New DataGridViewTextBoxColumn : Column69.Name = "txtPortOutStart" : Column69.ReadOnly = True
            Dim Column70 As New DataGridViewTextBoxColumn : Column70.Name = "txtPinOutStart" : Column70.ReadOnly = True
            Dim Column71 As New DataGridViewTextBoxColumn : Column71.Name = "txtPinBitCount" : Column71.ReadOnly = True
            Dim Column72 As New DataGridViewComboBoxColumn : Column72.Name = "cmbControlType" : Column72.ReadOnly = True : Column72.FlatStyle = FlatStyle.Popup
            Dim Column73 As New DataGridViewTextBoxColumn : Column73.Name = "txtPulseWidth" : Column73.ReadOnly = True
            Dim Column74 As New DataGridViewComboBoxColumn : Column74.Name = "txtStatusOut" : Column74.ReadOnly = True : Column74.FlatStyle = FlatStyle.Popup
            Dim Column75 As New DataGridViewTextBoxColumn : Column75.Name = "txtDoStatus1" : Column75.ReadOnly = True
            Dim Column76 As New DataGridViewTextBoxColumn : Column76.Name = "txtDoStatus2" : Column76.ReadOnly = True
            Dim Column77 As New DataGridViewTextBoxColumn : Column77.Name = "txtDoStatus3" : Column77.ReadOnly = True
            Dim Column78 As New DataGridViewTextBoxColumn : Column78.Name = "txtDoStatus4" : Column78.ReadOnly = True
            Dim Column79 As New DataGridViewTextBoxColumn : Column79.Name = "txtDoStatus5" : Column79.ReadOnly = True
            Dim Column80 As New DataGridViewTextBoxColumn : Column80.Name = "txtDoStatus6" : Column80.ReadOnly = True
            Dim Column81 As New DataGridViewTextBoxColumn : Column81.Name = "txtDoStatus7" : Column81.ReadOnly = True
            Dim Column82 As New DataGridViewTextBoxColumn : Column82.Name = "txtDoStatus8" : Column82.ReadOnly = True
            Dim Column83 As New DataGridViewTextBoxColumn : Column83.Name = "txtSp1_O" : Column83.ReadOnly = True
            Dim Column84 As New DataGridViewTextBoxColumn : Column84.Name = "txtSp2_O" : Column84.ReadOnly = True
            Dim Column85 As New DataGridViewTextBoxColumn : Column85.Name = "txtHys1_O" : Column85.ReadOnly = True
            Dim Column86 As New DataGridViewTextBoxColumn : Column86.Name = "txtHys2_O" : Column86.ReadOnly = True
            Dim Column87 As New DataGridViewTextBoxColumn : Column87.Name = "txtSt_O" : Column87.ReadOnly = True
            Dim Column88 As New DataGridViewTextBoxColumn : Column88.Name = "txtVar_O" : Column88.ReadOnly = True
            Dim Column89 As New DataGridViewTextBoxColumn : Column89.Name = "txtStatusH_O" : Column89.ReadOnly = True

            ''↓非表示エリア
            Dim Column90 As New DataGridViewTextBoxColumn : Column90.Name = "txtCompositeIdx" : Column90.ReadOnly = True : Column90.Visible = False
            Dim Column91 As New DataGridViewTextBoxColumn : Column91.Name = "txtIndex" : Column91.ReadOnly = True : Column91.Visible = False
            Dim Column92 As New DataGridViewTextBoxColumn : Column92.Name = "txtTriggerCH" : Column92.ReadOnly = True : Column92.Visible = False
            Dim Column93 As New DataGridViewTextBoxColumn : Column93.Name = "txtCopyRow" : Column93.ReadOnly = True : Column93.Visible = False
            Dim Column94 As New DataGridViewComboBoxColumn : Column94.Name = "cmbDeviceStatus" : Column94.ReadOnly = True : Column94.FlatStyle = FlatStyle.Popup : Column94.Visible = False
            Dim Column95 As New DataGridViewComboBoxColumn : Column95.Name = "cmbRangeType" : Column95.ReadOnly = True : Column95.FlatStyle = FlatStyle.Popup : Column95.Visible = False
            Dim Column96 As New DataGridViewComboBoxColumn : Column96.Name = "cmbValueSF" : Column96.ReadOnly = True : Column96.FlatStyle = FlatStyle.Popup : Column96.Visible = False
            Dim Column97 As New DataGridViewTextBoxColumn : Column97.Name = "txtGRep1SF" : Column97.ReadOnly = True : Column97.Visible = False
            Dim Column98 As New DataGridViewTextBoxColumn : Column98.Name = "txtGRep2SF" : Column98.ReadOnly = True : Column98.Visible = False
            Dim Column99 As New DataGridViewComboBoxColumn : Column99.Name = "cmbTime_O" : Column99.ReadOnly = True : Column99.FlatStyle = FlatStyle.Popup : Column99.Visible = False
            Dim Column100 As New DataGridViewCheckBoxColumn : Column100.Name = "chkStatusAlarm" : Column100.ReadOnly = True : Column100.Visible = False
            Dim Column101 As New DataGridViewTextBoxColumn : Column101.Name = "txtStatusSF" : Column101.ReadOnly = True : Column101.Visible = False
            Dim Column102 As New DataGridViewTextBoxColumn : Column102.Name = "txtWK" : Column102.ReadOnly = True : Column102.Visible = False
            Dim Column103 As New DataGridViewTextBoxColumn : Column103.Name = "txtSP" : Column103.ReadOnly = True : Column103.Visible = False
            Dim Column104 As New DataGridViewTextBoxColumn : Column104.Name = "txtPortBitCount" : Column104.ReadOnly = True : Column104.Visible = False
            Dim Column105 As New DataGridViewTextBoxColumn : Column105.Name = "txtPinBitCount" : Column105.ReadOnly = True : Column105.Visible = False
            Dim Column106 As New DataGridViewTextBoxColumn : Column106.Name = "txtFUDiStart" : Column106.ReadOnly = True : Column106.Visible = False
            Dim Column107 As New DataGridViewTextBoxColumn : Column107.Name = "txtPortDiStart" : Column107.ReadOnly = True : Column107.Visible = False
            Dim Column108 As New DataGridViewTextBoxColumn : Column108.Name = "txtPinDiStart" : Column108.ReadOnly = True : Column108.Visible = False
            Dim Column109 As New DataGridViewTextBoxColumn : Column109.Name = "txtFUAiTerm" : Column109.ReadOnly = True : Column109.Visible = False
            Dim Column110 As New DataGridViewTextBoxColumn : Column110.Name = "txtPortAiTerm" : Column110.ReadOnly = True : Column110.Visible = False
            Dim Column111 As New DataGridViewTextBoxColumn : Column111.Name = "txtPinAiTerm" : Column111.ReadOnly = True : Column111.Visible = False
            Dim Column112 As New DataGridViewTextBoxColumn : Column112.Name = "txtFUAoTerm" : Column112.ReadOnly = True : Column112.Visible = False
            Dim Column113 As New DataGridViewTextBoxColumn : Column113.Name = "txtPortAoTerm" : Column113.ReadOnly = True : Column113.Visible = False
            Dim Column114 As New DataGridViewTextBoxColumn : Column114.Name = "txtPinAoTerm" : Column114.ReadOnly = True : Column114.Visible = False
            Dim Column115 As New DataGridViewTextBoxColumn : Column115.Name = "txtPortNo" : Column115.ReadOnly = True : Column115.Visible = False
            Dim Column116 As New DataGridViewTextBoxColumn : Column116.Name = "txtDecimalPosition" : Column116.ReadOnly = True : Column116.Visible = False
            '↑非表示エリア

            'Ver2.0.0.2 南日本M761対応 2017.02.27追加
            Dim Column117 As New DataGridViewTextBoxColumn : Column117.Name = "txtAlmMimic" : Column117.ReadOnly = True : Column117.Visible = False

            'Ver2.0.8.C 2018.11.14
            Dim Column118 As New DataGridViewTextBoxColumn : Column117.Name = "txtMotorCol" : Column118.ReadOnly = True : Column118.Visible = False

            '隠しエリアを表示する場合↓
            'Dim Column90 As New DataGridViewTextBoxColumn : Column90.Name = "txtCompositeIdx" : Column90.ReadOnly = True : Column90.Visible = True
            'Dim Column91 As New DataGridViewTextBoxColumn : Column91.Name = "txtIndex" : Column91.ReadOnly = True : Column91.Visible = True
            'Dim Column92 As New DataGridViewTextBoxColumn : Column92.Name = "txtTriggerCH" : Column92.ReadOnly = True : Column92.Visible = True
            'Dim Column93 As New DataGridViewTextBoxColumn : Column93.Name = "txtCopyRow" : Column93.ReadOnly = True : Column93.Visible = True
            'Dim Column94 As New DataGridViewComboBoxColumn : Column94.Name = "cmbDeviceStatus" : Column94.ReadOnly = True : Column94.FlatStyle = FlatStyle.Popup : Column94.Visible = True
            'Dim Column95 As New DataGridViewComboBoxColumn : Column95.Name = "cmbRangeType" : Column95.ReadOnly = True : Column95.FlatStyle = FlatStyle.Popup : Column95.Visible = True
            'Dim Column96 As New DataGridViewComboBoxColumn : Column96.Name = "cmbValueSF" : Column96.ReadOnly = True : Column96.FlatStyle = FlatStyle.Popup : Column96.Visible = True
            'Dim Column97 As New DataGridViewTextBoxColumn : Column97.Name = "txtGRep1SF" : Column97.ReadOnly = True : Column97.Visible = True
            'Dim Column98 As New DataGridViewTextBoxColumn : Column98.Name = "txtGRep2SF" : Column98.ReadOnly = True : Column98.Visible = True
            'Dim Column99 As New DataGridViewComboBoxColumn : Column99.Name = "cmbTime_O" : Column99.ReadOnly = True : Column99.FlatStyle = FlatStyle.Popup : Column99.Visible = True
            'Dim Column100 As New DataGridViewCheckBoxColumn : Column100.Name = "chkStatusAlarm" : Column100.ReadOnly = True : Column100.Visible = True
            'Dim Column101 As New DataGridViewTextBoxColumn : Column101.Name = "txtStatusSF" : Column101.ReadOnly = True : Column101.Visible = True
            'Dim Column102 As New DataGridViewTextBoxColumn : Column102.Name = "txtWK" : Column102.ReadOnly = True : Column102.Visible = True
            'Dim Column103 As New DataGridViewTextBoxColumn : Column103.Name = "txtSP" : Column103.ReadOnly = True : Column103.Visible = True
            'Dim Column104 As New DataGridViewTextBoxColumn : Column104.Name = "txtPortBitCount" : Column104.ReadOnly = True : Column104.Visible = True
            'Dim Column105 As New DataGridViewTextBoxColumn : Column105.Name = "txtPinBitCount" : Column105.ReadOnly = True : Column105.Visible = True
            'Dim Column106 As New DataGridViewTextBoxColumn : Column106.Name = "txtFUDiStart" : Column106.ReadOnly = True : Column106.Visible = True
            'Dim Column107 As New DataGridViewTextBoxColumn : Column107.Name = "txtPortDiStart" : Column107.ReadOnly = True : Column107.Visible = True
            'Dim Column108 As New DataGridViewTextBoxColumn : Column108.Name = "txtPinDiStart" : Column108.ReadOnly = True : Column108.Visible = True
            'Dim Column109 As New DataGridViewTextBoxColumn : Column109.Name = "txtFUAiTerm" : Column109.ReadOnly = True : Column109.Visible = True
            'Dim Column110 As New DataGridViewTextBoxColumn : Column110.Name = "txtPortAiTerm" : Column110.ReadOnly = True : Column110.Visible = True
            'Dim Column111 As New DataGridViewTextBoxColumn : Column111.Name = "txtPinAiTerm" : Column111.ReadOnly = True : Column111.Visible = True
            'Dim Column112 As New DataGridViewTextBoxColumn : Column112.Name = "txtFUAoTerm" : Column112.ReadOnly = True : Column112.Visible = True
            'Dim Column113 As New DataGridViewTextBoxColumn : Column113.Name = "txtPortAoTerm" : Column113.ReadOnly = True : Column113.Visible = True
            'Dim Column114 As New DataGridViewTextBoxColumn : Column114.Name = "txtPinAoTerm" : Column114.ReadOnly = True : Column114.Visible = True
            'Dim Column115 As New DataGridViewTextBoxColumn : Column115.Name = "txtPortNo" : Column115.ReadOnly = True : Column115.Visible = True
            'Dim Column116 As New DataGridViewTextBoxColumn : Column116.Name = "txtDecimalPosition" : Column116.ReadOnly = True : Column116.Visible = True


            ''ヘッダ（1行目）
            With grdHead1
                ''列
                .Columns.Clear()
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .Columns.Add(New DataGridViewCheckBoxColumn()) : .Columns.Add(New DataGridViewCheckBoxColumn())
                .AllowUserToResizeColumns = False   ''列幅の変更不可
                .RowHeadersWidthSizeMode = DataGridViewRowHeadersWidthSizeMode.DisableResizing

                'Ver2.0.0.9 並び替え=FB系は後ろにまとめる
                ''列ヘッダー
                .Columns(0).HeaderText = "DATA" : .Columns(0).Width = 80
                .Columns(1).HeaderText = "SYS" : .Columns(1).Width = 100
                .Columns(2).HeaderText = "CH" : .Columns(2).Width = 50
                .Columns(3).HeaderText = "TAG" : .Columns(3).Width = 120
                .Columns(4).HeaderText = "CH NAME" : .Columns(4).Width = 190
                .Columns(5).HeaderText = "STATUS" : .Columns(5).Width = 200
                .Columns(6).HeaderText = "RANGE" : .Columns(6).Width = 160
                .Columns(7).HeaderText = "UNIT" : .Columns(7).Width = 70
                .Columns(8).HeaderText = "ALM2(H)" : .Columns(8).Width = 160
                .Columns(9).HeaderText = "ALM3(L)" : .Columns(9).Width = 160
                .Columns(10).HeaderText = "ALM1(HH)" : .Columns(10).Width = 160
                .Columns(11).HeaderText = "ALM4(LL)" : .Columns(11).Width = 160
                .Columns(12).HeaderText = "DATA" : .Columns(12).Width = 200
                .Columns(13).HeaderText = "FUADD" : .Columns(13).Width = 125
                .Columns(14).HeaderText = "RL" : .Columns(14).Width = 25
                .Columns(15).HeaderText = "ALM5(S)" : .Columns(15).Width = 50
                .Columns(16).HeaderText = "REMARKS" : .Columns(16).Width = 120
                .Columns(17).HeaderText = "ALARM" : .Columns(17).Width = 90
                .Columns(18).HeaderText = "RANGE" : .Columns(18).Width = 140
                .Columns(19).HeaderText = "DMY" : .Columns(19).Width = 25 : .Columns(19).Visible = False 'Ver2.0.0.9 非表示化
                .Columns(20).HeaderText = "SC" : .Columns(20).Width = 25
                .Columns(21).HeaderText = "DLY" : .Columns(21).Width = 50
                .Columns(22).HeaderText = "EP" : .Columns(22).Width = 25
                .Columns(23).HeaderText = "AC" : .Columns(23).Width = 25
                .Columns(24).HeaderText = "PLC" : .Columns(24).Width = 25
                .Columns(25).HeaderText = "OPT" : .Columns(25).Width = 25
                .Columns(26).HeaderText = "STRING" : .Columns(26).Width = 50 : .Columns(26).Visible = False 'Ver2.0.0.9 非表示化
                .Columns(27).HeaderText = "BAR" : .Columns(27).Width = 50
                .Columns(28).HeaderText = "ECC" : .Columns(28).Width = 170
                .Columns(29).HeaderText = "SIO" : .Columns(29).Width = 25
                .Columns(30).HeaderText = "GWS" : .Columns(30).Width = 25
                .Columns(31).HeaderText = "SHARE CH SET" : .Columns(31).Width = 120    'Ver2.0.0.9 表記変更
                .Columns(32).HeaderText = "ALM HH" : .Columns(32).Width = 50
                .Columns(33).HeaderText = "ALM H" : .Columns(33).Width = 50
                .Columns(34).HeaderText = "ALM L" : .Columns(34).Width = 50
                .Columns(35).HeaderText = "ALM LL" : .Columns(35).Width = 50
                .Columns(36).HeaderText = "OFF" : .Columns(36).Width = 50 : .Columns(36).Visible = False 'Ver2.0.0.9 非表示化
                .Columns(37).HeaderText = "FILTER" : .Columns(37).Width = 50 : .Columns(37).Visible = False 'Ver2.0.0.9 非表示化
                .Columns(38).HeaderText = "INDEX" : .Columns(38).Width = 50
                .Columns(39).HeaderText = "OUT FUADD" : .Columns(39).Width = 100
                .Columns(40).HeaderText = "OUTPUT" : .Columns(40).Width = 845
                .Columns(41).HeaderText = "FEEDBACK ALM" : .Columns(41).Width = 635
                '.Columns(41).HeaderText = "FEEDBACK ALM" : .Columns(41).Width = 200
                '.Columns(42).HeaderText = "FB" : .Columns(42).Width = 50
                '.Columns(43).HeaderText = "FEEDBACK ALM" : .Columns(43).Width = 385

                '非表示エリア
                .Columns(44).HeaderText = "HIDDEN CONTENT" : .Columns(44).Width = 1350

                'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                .Columns(45).HeaderText = "FIRE ALM" : .Columns(45).Width = 385

                'Ver2.0.8.C 2018.11.14
                .Columns(46).HeaderText = "MOTOR COLOR" : .Columns(46).Width = 120

                ''列ヘッダー　センタリング
                .ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                .Columns(4).Frozen = True   '左側4列を固定する

                ''行
                .RowCount = 1
                .AllowUserToAddRows = False         ''行の追加(新規行)を不可にする
                .AllowUserToResizeRows = False      ''行の高さの変更不可

                ''行ヘッダー
                .RowHeadersWidth = 50

                ''罫線
                .EnableHeadersVisualStyles = False
                .ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle.Single
                .RowHeadersBorderStyle = DataGridViewHeaderBorderStyle.Single
                .CellBorderStyle = DataGridViewCellBorderStyle.Single
                .GridColor = Color.Gray

                .Columns(4).DividerWidth = 2    ''太線
                .Columns(7).DividerWidth = 1
                .Columns(8).DividerWidth = 1
                .Columns(9).DividerWidth = 1
                .Columns(10).DividerWidth = 1
                .Columns(11).DividerWidth = 1
                '.Columns(12).DividerWidth = 1
                '.Columns(39).DividerWidth = 1

                ''スクロールバー 
                .ScrollBars = ScrollBars.Both

            End With

            With grdCHList

                ''列 20～23と67は83の前へ移動
                .Columns.Clear()
                .Columns.Add(Column1) : .Columns.Add(Column2) : .Columns.Add(Column3) : .Columns.Add(Column4)
                .Columns.Add(Column5) : .Columns.Add(Column6) : .Columns.Add(Column7) : .Columns.Add(Column8)
                .Columns.Add(Column9) : .Columns.Add(Column10) : .Columns.Add(Column11) : .Columns.Add(Column12)
                .Columns.Add(Column13) : .Columns.Add(Column14) : .Columns.Add(Column15) : .Columns.Add(Column16)
                .Columns.Add(Column17) : .Columns.Add(Column18) : .Columns.Add(Column19)
                .Columns.Add(Column24)
                .Columns.Add(Column25) : .Columns.Add(Column26) : .Columns.Add(Column27) : .Columns.Add(Column28)
                .Columns.Add(Column29) : .Columns.Add(Column30) : .Columns.Add(Column31) : .Columns.Add(Column32)
                .Columns.Add(Column33) : .Columns.Add(Column34) : .Columns.Add(Column35) : .Columns.Add(Column36)
                .Columns.Add(Column37) : .Columns.Add(Column38) : .Columns.Add(Column39) : .Columns.Add(Column40)
                .Columns.Add(Column41) : .Columns.Add(Column42) : .Columns.Add(Column43) : .Columns.Add(Column44)
                .Columns.Add(Column45) : .Columns.Add(Column46) : .Columns.Add(Column47) : .Columns.Add(Column48)
                .Columns.Add(Column49) : .Columns.Add(Column50) : .Columns.Add(Column51) : .Columns.Add(Column52)
                .Columns.Add(Column53) : .Columns.Add(Column54) : .Columns.Add(Column55) : .Columns.Add(Column56)
                .Columns.Add(Column57) : .Columns.Add(Column58) : .Columns.Add(Column59) : .Columns.Add(Column60)
                .Columns.Add(Column61) : .Columns.Add(Column62) : .Columns.Add(Column63) : .Columns.Add(Column64)
                .Columns.Add(Column65) : .Columns.Add(Column66) : .Columns.Add(Column68)
                .Columns.Add(Column69) : .Columns.Add(Column70) : .Columns.Add(Column71) : .Columns.Add(Column72)
                .Columns.Add(Column73) : .Columns.Add(Column74) : .Columns.Add(Column75) : .Columns.Add(Column76)
                .Columns.Add(Column77) : .Columns.Add(Column78) : .Columns.Add(Column79) : .Columns.Add(Column80)
                .Columns.Add(Column81) : .Columns.Add(Column82)
                .Columns.Add(Column20) : .Columns.Add(Column21) : .Columns.Add(Column22) : .Columns.Add(Column23) : .Columns.Add(Column67)
                .Columns.Add(Column83) : .Columns.Add(Column84)
                .Columns.Add(Column85) : .Columns.Add(Column86) : .Columns.Add(Column87) : .Columns.Add(Column88)
                .Columns.Add(Column89) : .Columns.Add(Column90) : .Columns.Add(Column91) : .Columns.Add(Column92)
                .Columns.Add(Column93) : .Columns.Add(Column94) : .Columns.Add(Column95) : .Columns.Add(Column96)
                .Columns.Add(Column97) : .Columns.Add(Column98) : .Columns.Add(Column99) : .Columns.Add(Column100)
                .Columns.Add(Column101) : .Columns.Add(Column102) : .Columns.Add(Column103) : .Columns.Add(Column104)
                .Columns.Add(Column105) : .Columns.Add(Column106) : .Columns.Add(Column107) : .Columns.Add(Column108)
                .Columns.Add(Column109) : .Columns.Add(Column110) : .Columns.Add(Column111) : .Columns.Add(Column112)
                .Columns.Add(Column113) : .Columns.Add(Column114) : .Columns.Add(Column115) : .Columns.Add(Column116)
                'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                .Columns.Add(Column117)
                'Ver2.0.8.C 2018.11.4
                .Columns.Add(Column118)


                .AllowUserToResizeColumns = False   ''列幅の変更不可
                .RowHeadersWidthSizeMode = DataGridViewRowHeadersWidthSizeMode.DisableResizing

                ''全ての列の並び替えを禁止
                For Each c As DataGridViewColumn In .Columns
                    c.SortMode = DataGridViewColumnSortMode.NotSortable
                Next c

                ''センタリング
                Column3.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column4.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft    'Ver2.0.3.3 左寄せに変更
                Column9.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column35.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column42.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft   'Ver2.0.2.8 左寄せに変更
                Column44.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column45.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column54.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column59.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column60.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column61.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column62.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column63.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column74.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column75.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column76.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column77.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column78.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column79.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column80.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column81.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                Column82.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

                ''右揃え
                Column7.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column8.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column10.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column11.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column12.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column13.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column14.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column15.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column16.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column17.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column18.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column19.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column20.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column21.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column22.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column23.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column24.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column25.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column26.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column27.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column28.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column29.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column30.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column31.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column32.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column33.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column36.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column37.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column38.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column39.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column40.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column41.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column46.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column47.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column49.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column50.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column51.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column52.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column53.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column56.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column57.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column64.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column65.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column66.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column67.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column68.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column69.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column70.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column71.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column73.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column83.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column84.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column85.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column86.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column87.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column88.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Column89.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                'Ver2.0.0.2 南日本M761対応 2017.02.27追加
                Column117.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                'Ver2.0.8.C 2018.11.14
                Column117.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight

                'Ver2.0.0.9 列番号をConst値へ変更
                ''列ヘッダー（2行目）
                .Columns(gCstChListColPosChType).HeaderText = "Type" : .Columns(gCstChListColPosChType).Width = 80
                .Columns(gCstChListColPosSysNo).HeaderText = " No." : .Columns(gCstChListColPosSysNo).Width = 100
                .Columns(gCstChListColPosChNo).HeaderText = " No." : .Columns(gCstChListColPosChNo).Width = 50
                .Columns(gCstChListColPosTagRow).HeaderText = "No." : .Columns(gCstChListColPosTagRow).Width = 120
                .Columns(gCstChListColPosItemName).HeaderText = "" : .Columns(gCstChListColPosItemName).Width = 190
                .Columns(gCstChListColPosStatusIn).HeaderText = "" : .Columns(gCstChListColPosStatusIn).Width = 200
                .Columns(gCstChListColPosRangeLo).HeaderText = "LO" : .Columns(gCstChListColPosRangeLo).Width = 80
                .Columns(gCstChListColPosRangeHi).HeaderText = "HI" : .Columns(gCstChListColPosRangeHi).Width = 80
                .Columns(gCstChListColPosUnit).HeaderText = "" : .Columns(gCstChListColPosUnit).Width = 70
                .Columns(gCstChListColPosValueH).HeaderText = "SET" : .Columns(gCstChListColPosValueH).Width = 60
                .Columns(gCstChListColPosExtGrH).HeaderText = "EX" : .Columns(gCstChListColPosExtGrH).Width = 25
                .Columns(gCstChListColPosDelayH).HeaderText = "DLY" : .Columns(gCstChListColPosDelayH).Width = 25
                .Columns(gCstChListColPosGrep1H).HeaderText = "GR1" : .Columns(gCstChListColPosGrep1H).Width = 25
                .Columns(gCstChListColPosGrep2H).HeaderText = "GR2" : .Columns(gCstChListColPosGrep2H).Width = 25
                .Columns(gCstChListColPosValueL).HeaderText = "SET" : .Columns(gCstChListColPosValueL).Width = 60
                .Columns(gCstChListColPosExtGrL).HeaderText = "EX" : .Columns(gCstChListColPosExtGrL).Width = 25
                .Columns(gCstChListColPosDelayL).HeaderText = "DLY" : .Columns(gCstChListColPosDelayL).Width = 25
                .Columns(gCstChListColPosGrep1L).HeaderText = "GR1" : .Columns(gCstChListColPosGrep1L).Width = 25
                .Columns(gCstChListColPosGrep2L).HeaderText = "GR2" : .Columns(gCstChListColPosGrep2L).Width = 25
                .Columns(gCstChListColPosOutExtgH).HeaderText = "EX" : .Columns(gCstChListColPosOutExtgH).Width = 50
                .Columns(gCstChListColPosOutDelayH).HeaderText = "DLY" : .Columns(gCstChListColPosOutDelayH).Width = 50
                .Columns(gCstChListColPosOutGrep1H).HeaderText = "GR1" : .Columns(gCstChListColPosOutGrep1H).Width = 50
                .Columns(gCstChListColPosOutGrep2H).HeaderText = "GR2" : .Columns(gCstChListColPosOutGrep2H).Width = 50
                .Columns(gCstChListColPosValueHH).HeaderText = "SET" : .Columns(gCstChListColPosValueHH).Width = 60
                .Columns(gCstChListColPosExtGrHH).HeaderText = "EX" : .Columns(gCstChListColPosExtGrHH).Width = 25
                .Columns(gCstChListColPosDelayHH).HeaderText = "DLY" : .Columns(gCstChListColPosDelayHH).Width = 25
                .Columns(gCstChListColPosGrep1HH).HeaderText = "GR1" : .Columns(gCstChListColPosGrep1HH).Width = 25
                .Columns(gCstChListColPosGrep2HH).HeaderText = "GR2" : .Columns(gCstChListColPosGrep2HH).Width = 25
                .Columns(gCstChListColPosValueLL).HeaderText = "SET" : .Columns(gCstChListColPosValueLL).Width = 60
                .Columns(gCstChListColPosExtGrLL).HeaderText = "EX" : .Columns(gCstChListColPosExtGrLL).Width = 25
                .Columns(gCstChListColPosDelayLL).HeaderText = "DLY" : .Columns(gCstChListColPosDelayLL).Width = 25
                .Columns(gCstChListColPosGrep1LL).HeaderText = "GR1" : .Columns(gCstChListColPosGrep1LL).Width = 25
                .Columns(gCstChListColPosGrep2LL).HeaderText = "GR2" : .Columns(gCstChListColPosGrep2LL).Width = 25
                .Columns(gCstChListColPosDataType).HeaderText = "TYPE" : .Columns(gCstChListColPosDataType).Width = 200
                .Columns(gCstChListColPosSSig).HeaderText = "S" : .Columns(gCstChListColPosSSig).Width = 25
                .Columns(gCstChListColPosFuAddress).HeaderText = "No" : .Columns(gCstChListColPosFuAddress).Width = 25
                .Columns(gCstChListColPosPortAddress).HeaderText = "TB" : .Columns(gCstChListColPosPortAddress).Width = 25   'Ver2.0.0.9 表記変更
                .Columns(gCstChListColPosPinAddress).HeaderText = "PIN" : .Columns(gCstChListColPosPinAddress).Width = 50
                .Columns(gCstChListColPosFlagRL).HeaderText = "" : .Columns(gCstChListColPosFlagRL).Width = 25
                .Columns(gCstChListColPosExtGrSF).HeaderText = "EXT" : .Columns(gCstChListColPosExtGrSF).Width = 25
                .Columns(gCstChListColPosDelaySF).HeaderText = "DLY" : .Columns(gCstChListColPosDelaySF).Width = 25
                .Columns(gCstChListColPosRemarks).HeaderText = "" : .Columns(gCstChListColPosRemarks).Width = 120
                .Columns(gCstChListColPosLRRow).HeaderText = "LEVEL" : .Columns(gCstChListColPosLRRow).Width = 90
                .Columns(gCstChListColPosNormalLo).HeaderText = "NOR L" : .Columns(gCstChListColPosNormalLo).Width = 70
                .Columns(gCstChListColPosNormalHi).HeaderText = "NOR H" : .Columns(gCstChListColPosNormalHi).Width = 70
                .Columns(gCstChListColPosFlagDmy).HeaderText = "" : .Columns(gCstChListColPosFlagDmy).Width = 25
                .Columns(gCstChListColPosFlagSC).HeaderText = "" : .Columns(gCstChListColPosFlagSC).Width = 25
                .Columns(gCstChListColPosDelayTime).HeaderText = "UNIT" : .Columns(gCstChListColPosDelayTime).Width = 50
                .Columns(gCstChListColPosFlagEP).HeaderText = "" : .Columns(gCstChListColPosFlagEP).Width = 25
                .Columns(gCstChListColPosFlagAC).HeaderText = "" : .Columns(gCstChListColPosFlagAC).Width = 25
                .Columns(gCstChListColPosFlagPLC).HeaderText = "" : .Columns(gCstChListColPosFlagPLC).Width = 25
                .Columns(gCstChListPowerFactorRow).HeaderText = "" : .Columns(gCstChListPowerFactorRow).Width = 25
                .Columns(gCstChListColPosString).HeaderText = "" : .Columns(gCstChListColPosString).Width = 50
                .Columns(gCstChListColPosCenterGraph).HeaderText = "CENTER" : .Columns(gCstChListColPosCenterGraph).Width = 50
                .Columns(gCstChListColPosEccFunc).HeaderText = "FUNC" : .Columns(gCstChListColPosEccFunc).Width = 170
                .Columns(gCstChListColPosFlagSIO).HeaderText = "" : .Columns(gCstChListColPosFlagSIO).Width = 25
                .Columns(gCstChListColPosFlagGWS).HeaderText = "" : .Columns(gCstChListColPosFlagGWS).Width = 25
                .Columns(gCstChListColPosShareType).HeaderText = "TYPE" : .Columns(gCstChListColPosShareType).Width = 70
                .Columns(gCstChListColPosShareChid).HeaderText = "CHNo." : .Columns(gCstChListColPosShareChid).Width = 50
                .Columns(gCstChListColPosStaNmHH).HeaderText = "STATUS" : .Columns(gCstChListColPosStaNmHH).Width = 50
                .Columns(gCstChListColPosStaNmH).HeaderText = "STATUS" : .Columns(gCstChListColPosStaNmH).Width = 50
                .Columns(gCstChListColPosStaNmL).HeaderText = "STATUS" : .Columns(gCstChListColPosStaNmL).Width = 50
                .Columns(gCstChListColPosStaNmLL).HeaderText = "STATUS" : .Columns(gCstChListColPosStaNmLL).Width = 50
                .Columns(gCstChListColPosOffset).HeaderText = "SET" : .Columns(gCstChListColPosOffset).Width = 50
                .Columns(gCstChListColPosFilterCoef).HeaderText = "" : .Columns(gCstChListColPosFilterCoef).Width = 50
                .Columns(gCstChListColPosComposite).HeaderText = "" : .Columns(gCstChListColPosComposite).Width = 50
                .Columns(gCstChListColPosAlarmTimeup).HeaderText = "TIMER" : .Columns(gCstChListColPosAlarmTimeup).Width = 50
                .Columns(gCstChListColPosDoStart).HeaderText = "No" : .Columns(gCstChListColPosDoStart).Width = 25
                .Columns(gCstChListColPosPortDoStart).HeaderText = "TB" : .Columns(gCstChListColPosPortDoStart).Width = 25    'Ver2.0.0.9 表記変更
                .Columns(gCstChListColPosPinDoStart).HeaderText = "PIN" : .Columns(gCstChListColPosPinDoStart).Width = 50
                .Columns(gCstChListColPosBitCount).HeaderText = "CNT" : .Columns(gCstChListColPosBitCount).Width = 25
                .Columns(gCstChListColPosControlType).HeaderText = "TYPE" : .Columns(gCstChListColPosControlType).Width = 110
                .Columns(gCstChListColPosPulseWidth).HeaderText = "WIDTH" : .Columns(gCstChListColPosPulseWidth).Width = 50
                .Columns(gCstChListColPosStatusOut).HeaderText = "STATUS" : .Columns(gCstChListColPosStatusOut).Width = 100
                .Columns(gCstChListColPosDoStatus1).HeaderText = "STATUS1" : .Columns(gCstChListColPosDoStatus1).Width = 70
                .Columns(gCstChListColPosDoStatus2).HeaderText = "STATUS2" : .Columns(gCstChListColPosDoStatus2).Width = 70
                .Columns(gCstChListColPosDoStatus3).HeaderText = "STATUS3" : .Columns(gCstChListColPosDoStatus3).Width = 70
                .Columns(gCstChListColPosDoStatus4).HeaderText = "STATUS4" : .Columns(gCstChListColPosDoStatus4).Width = 70
                .Columns(gCstChListColPosDoStatus5).HeaderText = "STATUS5" : .Columns(gCstChListColPosDoStatus5).Width = 70
                .Columns(gCstChListColPosDoStatus6).HeaderText = "STATUS6" : .Columns(gCstChListColPosDoStatus6).Width = 70
                .Columns(gCstChListColPosDoStatus7).HeaderText = "STATUS7" : .Columns(gCstChListColPosDoStatus7).Width = 70
                .Columns(gCstChListColPosDoStatus8).HeaderText = "STATUS8" : .Columns(gCstChListColPosDoStatus8).Width = 70
                .Columns(gCstChListColPosOutSp1).HeaderText = "VALUE1" : .Columns(gCstChListColPosOutSp1).Width = 50   'Ver2.0.0.9 表記変更
                .Columns(gCstChListColPosOutSp2).HeaderText = "VALUE2" : .Columns(gCstChListColPosOutSp2).Width = 50   'Ver2.0.0.9 表記変更
                .Columns(gCstChListColPosOutHys1).HeaderText = "HYS1" : .Columns(gCstChListColPosOutHys1).Width = 50
                .Columns(gCstChListColPosOutHys2).HeaderText = "HYS2" : .Columns(gCstChListColPosOutHys2).Width = 50
                .Columns(gCstChListColPosOutSt).HeaderText = "SMP" : .Columns(gCstChListColPosOutSt).Width = 50
                .Columns(gCstChListColPosOutVar).HeaderText = "VARIATION" : .Columns(gCstChListColPosOutVar).Width = 70
                .Columns(gCstChListColPosOutStatusH).HeaderText = "STATUS" : .Columns(gCstChListColPosOutStatusH).Width = 65

                '非表示エリア
                .Columns(gCstChListColPosCompositeIndex).HeaderText = "COMPINDX" : .Columns(gCstChListColPosCompositeIndex).Width = 50
                .Columns(gCstChListColPosIndex).HeaderText = "INDX" : .Columns(gCstChListColPosIndex).Width = 50
                .Columns(gCstChListColPosTriggerCH).HeaderText = "TRIGCH" : .Columns(gCstChListColPosTriggerCH).Width = 50
                .Columns(gCstChListColPosCopyRow).HeaderText = "COPYROW" : .Columns(gCstChListColPosCopyRow).Width = 50
                .Columns(gCstChListColPosDeviceStatus).HeaderText = "STIN" : .Columns(gCstChListColPosDeviceStatus).Width = 50
                .Columns(gCstChListColPosRangeType).HeaderText = "RANGE" : .Columns(gCstChListColPosRangeType).Width = 50
                .Columns(gCstChListColPosValueSF).HeaderText = "VALSF" : .Columns(gCstChListColPosValueSF).Width = 50
                .Columns(gCstChListColPosGrep1SF).HeaderText = "GR1SF" : .Columns(gCstChListColPosGrep1SF).Width = 50
                .Columns(gCstChListColPosGrep2SF).HeaderText = "GR2SF" : .Columns(gCstChListColPosGrep2SF).Width = 50
                .Columns(gCstChListColPosOutDelayTime).HeaderText = "TMEO" : .Columns(gCstChListColPosOutDelayTime).Width = 50
                .Columns(gCstChListColPosStatusAlarm).HeaderText = "STALM" : .Columns(gCstChListColPosStatusAlarm).Width = 50
                .Columns(gCstChListColPosStaNmSF).HeaderText = "STSF" : .Columns(gCstChListColPosStaNmSF).Width = 50
                .Columns(gCstChListColPosFlagWK).HeaderText = "WK" : .Columns(gCstChListColPosFlagWK).Width = 50
                .Columns(gCstChListColPosFlagSP).HeaderText = "SP" : .Columns(gCstChListColPosFlagSP).Width = 50
                .Columns(gCstChListColPosPortBitCount).HeaderText = "PORTBIT" : .Columns(gCstChListColPosPortBitCount).Width = 50
                .Columns(gCstChListColPosPinBitCount).HeaderText = "PINBIT" : .Columns(gCstChListColPosPinBitCount).Width = 50
                .Columns(gCstChListColPosDiStart).HeaderText = "FUDISTRT" : .Columns(gCstChListColPosDiStart).Width = 50
                .Columns(gCstChListColPosPortDiStart).HeaderText = "PRTDISTRT" : .Columns(gCstChListColPosPortDiStart).Width = 50
                .Columns(gCstChListColPosPinDiStart).HeaderText = "PINDISTRT" : .Columns(gCstChListColPosPinDiStart).Width = 50
                .Columns(gCstChListColPosAiTerm).HeaderText = "FUAISTRT" : .Columns(gCstChListColPosAiTerm).Width = 50
                .Columns(gCstChListColPosPortAiTerm).HeaderText = "PRTAISTRT" : .Columns(gCstChListColPosPortAiTerm).Width = 50
                .Columns(gCstChListColPosPinAiTerm).HeaderText = "PINAISTRT" : .Columns(gCstChListColPosPinAiTerm).Width = 50
                .Columns(gCstChListColPosAoTerm).HeaderText = "FUAOTERM" : .Columns(gCstChListColPosAoTerm).Width = 50
                .Columns(gCstChListColPosPortAoTerm).HeaderText = "PRTAOTERM" : .Columns(gCstChListColPosPortAoTerm).Width = 50
                .Columns(gCstChListColPosPinAoTerm).HeaderText = "PINAOTERM" : .Columns(gCstChListColPosPinAoTerm).Width = 50
                .Columns(gCstChListColPosPortNo).HeaderText = "PORTNO" : .Columns(gCstChListColPosPortNo).Width = 50
                .Columns(gCstChListColPosDecimalPoint).HeaderText = "DECPOS" : .Columns(gCstChListColPosDecimalPoint).Width = 50
                '
                .Columns(gCstChListColPosAlmMimic).HeaderText = "MIMIC" : .Columns(116).Width = 385

                'Ver2.0.8.C 2018.11.14
                .Columns(gCstChListColPosFlagMotorColor).HeaderText = "MOTOR COLOR" : .Columns(117).Width = 120

                ''列ヘッダー　センタリング
                .ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                .Columns(gCstChListColPosItemName).Frozen = True   '左側5列を固定する

                ''行
                .RowCount = IIf(.RowCount = 0, 100, 101)
                .AllowUserToAddRows = False         ''行の追加(新規行)を不可にする
                .AllowUserToResizeRows = False      ''行の高さの変更不可
                .AllowUserToDeleteRows = False      ''行の削除を不可にする

                ''行ヘッダー
                For i = 1 To .RowCount
                    .Rows(i - 1).HeaderCell.Value = i.ToString
                Next
                .RowHeadersWidth = 50
                .RowHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

                ''行の背景色
                For i = 0 To .Rows.Count - 1

                    For j As Integer = 0 To .ColumnCount - 1
                        .Rows(i).Cells(j).Style.BackColor = gColorGridRowBackReadOnly
                    Next

                    If i Mod 2 <> 0 Then    ''CH Typeの偶数行の背景色を変える

                        If i >= 0 And i <= 19 Then
                            .Rows(i).Cells(0).Style.BackColor = gColorGridRowBack
                        ElseIf i >= 20 And i <= 39 Then
                            .Rows(i).Cells(0).Style.BackColor = Color.LavenderBlush
                        ElseIf i >= 40 And i <= 59 Then
                            .Rows(i).Cells(0).Style.BackColor = Color.Lavender
                        ElseIf i >= 60 And i <= 79 Then
                            .Rows(i).Cells(0).Style.BackColor = Color.Beige
                        ElseIf i >= 80 And i <= 99 Then
                            .Rows(i).Cells(0).Style.BackColor = Color.Honeydew
                        End If

                    Else
                        .Rows(i).Cells(0).Style.BackColor = gColorGridRowBackBase
                    End If

                    Select Case grdCHList(gCstChListColPosShareType, i).Value
                        Case 0
                            .Rows(i).HeaderCell.Style.BackColor = Color.White
                        Case 1
                            .Rows(i).HeaderCell.Style.BackColor = Color.WhiteSmoke
                        Case 2
                            .Rows(i).HeaderCell.Style.BackColor = Color.AliceBlue
                        Case 3
                            .Rows(i).HeaderCell.Style.BackColor = Color.LightGreen
                    End Select


                Next


                

                ''罫線
                .EnableHeadersVisualStyles = False
                .ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle.Single
                .RowHeadersBorderStyle = DataGridViewHeaderBorderStyle.Single
                .CellBorderStyle = DataGridViewCellBorderStyle.Single
                .GridColor = Color.Gray

                ''太線
                .Columns(gCstChListColPosItemName).DividerWidth = 2    ''太線
                .Columns(gCstChListColPosUnit).DividerWidth = 1
                .Columns(gCstChListColPosGrep2H).DividerWidth = 1
                .Columns(gCstChListColPosGrep2L).DividerWidth = 1
                '.Columns(gCstChListColPosOutGrep2H).DividerWidth = 1
                .Columns(gCstChListColPosGrep2HH).DividerWidth = 1
                .Columns(gCstChListColPosGrep2LL).DividerWidth = 1
                '.Columns(gCstChListColPosComposite).DividerWidth = 1

                .Rows(19).DividerHeight = 1
                .Rows(39).DividerHeight = 1
                .Rows(59).DividerHeight = 1
                .Rows(79).DividerHeight = 1

                ''スクロールバー
                .ScrollBars = ScrollBars.Both

                ''NULL値
                .DefaultCellStyle.NullValue = mcstNullValue

                ''コピー＆ペースト共通設定
                Call gSetGridCopyAndPaste(grdCHList)

            End With

            ''グリッドコンボ 値セット
            Call gSetComboBox(grdCHList.Columns("cmbChType"), gEnmComboType.ctChListChannelListChType)
            Call gSetComboBox(grdCHList.Columns("cmbSysNo"), gEnmComboType.ctChListChannelListSysNo)
            Call gSetComboBox(grdCHList.Columns("cmbValueSF"), gEnmComboType.ctChListChannelListSF)
            Call gSetComboBox(grdCHList.Columns("cmbShareType"), gEnmComboType.ctChListChannelListShareType)
            Call gSetComboBox(grdCHList.Columns("cmbTime"), gEnmComboType.ctChListChannelListTime)
            Call gSetComboBox(grdCHList.Columns("cmbTime_O"), gEnmComboType.ctChListChannelListTime)
            Call gSetComboBox(grdCHList.Columns("txtStatusOut"), gEnmComboType.ctChListChannelListStatusMotor)
            Call gSetComboBox(grdCHList.Columns("cmbAlmLevel"), gEnmComboType.ctChListChannelListAlmLevel)
            'Ver2.0.0.1 2016.12.08 UNITが表示されない不具合修正で復活
            Call gSetComboBox(cmbUnit, gEnmComboType.ctChListChannelListUnit)

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : インテリセンス機能
    ' 返り値    : サーチ文字列
    ' 引き数    : ARG1 - (I ) 行インデックス
    '           : ARG2 - (I ) 列インデックス
    '           : ARG3 - (I ) 入力文字列
    ' 機能説明  : 入力文字列と同じ文字列で始まる文字列をサーチする
    '--------------------------------------------------------------------
    Private Function mIntellisense(ByVal intRow As Integer, ByVal intCol As Integer, ByVal strInputWord As String) As String

        Dim strGetWord As String = ""

        Try

            Dim strWord(grdCHList.RowCount - 1) As String
            Dim strValue As String = ""
            Dim intInputWordCount As Integer = strInputWord.Length

            ''列情報を格納
            For i As Integer = 0 To grdCHList.RowCount - 1
                strWord(i) = IIf(grdCHList(intCol, i).Value = Nothing, "", grdCHList(intCol, i).Value)
            Next

            For i As Integer = 0 To grdCHList.RowCount - 1

                If i <> intRow Then

                    If strWord(i) <> "" Then

                        strValue = strWord(i)
                        If strValue.Length >= intInputWordCount Then

                            If LCase(strInputWord) = LCase(strValue.Substring(0, intInputWordCount)) Then

                                strGetWord = strValue
                                Exit For

                            End If

                        End If

                    End If

                End If

            Next

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

        Return strGetWord

    End Function

    '--------------------------------------------------------------------
    ' 機能      : アナログのFU Address を設定した際に、Data Typeを自動設定する
    ' 返り値    : True:変更有り、False:変更なし
    ' 引き数    : ARG1 - (I ) 行位置
    ' 機能説明  : 基盤設定がされている場合のみ
    '--------------------------------------------------------------------
    Private Function mSetDataType(ByVal intRow As Integer) As Boolean

        Try
            Dim strFuAddress As String = grdCHList(gCstChListColPosFuAddress, intRow).Value
            Dim strPortAddress As String = grdCHList(gCstChListColPosPortAddress, intRow).Value
            Dim strPinAddress As String = grdCHList(gCstChListColPosPinAddress, intRow).Value

            Dim intFuNo As Integer, intPortNo As Integer, intPinNo As Integer
            Dim intDataType As Integer
            Dim intSlotType As Integer
            Dim blnRet As Boolean = False

            If strFuAddress = "" Then Return False
            If strPortAddress = "" Then Return False
            If strPinAddress = "" Then Return False

            intFuNo = Str(strFuAddress)
            intPortNo = Str(strPortAddress)
            intPinNo = Str(strPinAddress)

            If intFuNo > 20 Or intPortNo = 0 Or intPinNo = 0 Then
                blnRet = False 'NG
            Else
                blnRet = True  'OK
            End If

            If blnRet = True Then

                intDataType = grdCHList(gCstChListColPosDataType, intRow).Value

                ''FU使用/未使用フラグ
                If gudt.SetFu.udtFu(intFuNo).shtUse = 1 Then

                    ''スロット種別 GET
                    intSlotType = gudt.SetFu.udtFu(intFuNo).udtSlotInfo(intPortNo - 1).shtType

                    Select Case intSlotType

                        Case gCstCodeFuSlotTypeAI_2
                            If intDataType = gCstCodeChDataTypeAnalog2Pt Or _
                               intDataType = gCstCodeChDataTypeAnalog2Jpt Then
                            Else
                                grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalog2Pt.ToString
                            End If

                        Case gCstCodeFuSlotTypeAI_3
                            If intDataType = gCstCodeChDataTypeAnalog3Pt Or _
                               intDataType = gCstCodeChDataTypeAnalog3Jpt Then
                            Else
                                grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalog3Pt.ToString
                            End If

                        Case gCstCodeFuSlotTypeAI_1_5
                            grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalog1_5v.ToString

                        Case gCstCodeFuSlotTypeAI_4_20
                            ' 現在の設定確認追加　ver1.4.0 2011.07.29
                            If intDataType = gCstCodeChDataTypeAnalog4_20mA Or intDataType = gCstCodeChDataTypeAnalogPT4_20mA Then
                            Else
                                grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalog4_20mA.ToString
                            End If

                        Case gCstCodeFuSlotTypeAI_K
                            grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeAnalogK.ToString

                        Case Else

                    End Select

                End If

            End If

            Return blnRet

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : 文字列取得
    ' 返り値    : 変換後文字列
    ' 引き数    : ARG1 - (I ) 変換元文字列
    ' 機能説明  : NULLなどの不要な情報を取り除いた文字列を返す
    '--------------------------------------------------------------------
    Public Function mGetString(ByVal strInput As String, _
                      Optional ByVal blnTrim As Boolean = True) As String

        Try

            Dim strRtn As String

            strRtn = strInput
            strRtn = Replace(strRtn, vbNullChar, "")

            If blnTrim Then
                'strRtn = Trim(strRtn)
                If strRtn <> Nothing Then
                    strRtn = strRtn.TrimEnd
                Else
                    strRtn = ""
                End If
            End If

            Return strRtn

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
            Return strInput
        End Try

    End Function

    '--------------------------------------------------------------------
    ' 機能      : 仮設定可能な列かを判断する
    ' 返り値    : True:仮設定可、　False:仮設定不可
    ' 引き数    : ARG1 - (I ) CHタイプ
    '           : ARG2 - (I ) カラムインデックス
    '           : ARG3 - (I ) データ種別コード
    ' 機能説明  : 仮設定可能な列の場合Trueを返す
    '--------------------------------------------------------------------
    Private Function mChkDummySetColumn(ByVal intChTypeCode As Integer, _
                                        ByVal intColumnIndex As Integer, _
                                        ByVal intDataTypeCode As Integer) As Boolean

        Dim blnRtn As Boolean = False

        Select Case intChTypeCode

            Case gCstCodeChTypeAnalog
                ' 2014.01.14 Port、PinのDummy設定追加
                If intColumnIndex = gCstChListColPosFuAddress _
                Or intColumnIndex = gCstChListColPosPortAddress _
                Or intColumnIndex = gCstChListColPosPinAddress _
                Or intColumnIndex = gCstChListColPosStatusIn _
                Or intColumnIndex = gCstChListColPosUnit Then
                    blnRtn = True
                End If

                If intColumnIndex = gCstChListColPosDelayHH Or intColumnIndex = gCstChListColPosDelayH Or intColumnIndex = gCstChListColPosDelayL Or intColumnIndex = gCstChListColPosDelayLL Or intColumnIndex = gCstChListColPosDelaySF _
                Or intColumnIndex = gCstChListColPosValueHH Or intColumnIndex = gCstChListColPosValueH Or intColumnIndex = gCstChListColPosValueL Or intColumnIndex = gCstChListColPosValueLL Or intColumnIndex = gCstChListColPosValueSF _
                Or intColumnIndex = gCstChListColPosExtGrHH Or intColumnIndex = gCstChListColPosExtGrH Or intColumnIndex = gCstChListColPosExtGrL Or intColumnIndex = gCstChListColPosExtGrLL Or intColumnIndex = gCstChListColPosExtGrSF _
                Or intColumnIndex = gCstChListColPosGrep1HH Or intColumnIndex = gCstChListColPosGrep1H Or intColumnIndex = gCstChListColPosGrep1L Or intColumnIndex = gCstChListColPosGrep1LL Or intColumnIndex = gCstChListColPosGrep1SF _
                Or intColumnIndex = gCstChListColPosGrep2HH Or intColumnIndex = gCstChListColPosGrep2H Or intColumnIndex = gCstChListColPosGrep2L Or intColumnIndex = gCstChListColPosGrep2LL Or intColumnIndex = gCstChListColPosGrep2SF _
                Or intColumnIndex = gCstChListColPosStaNmHH Or intColumnIndex = gCstChListColPosStaNmH Or intColumnIndex = gCstChListColPosStaNmL Or intColumnIndex = gCstChListColPosStaNmLL Or intColumnIndex = gCstChListColPosStaNmSF Then
                    blnRtn = True
                End If

                If intColumnIndex = gCstChListColPosRangeType _
                Or intColumnIndex = gCstChListColPosRangeHi _
                Or intColumnIndex = gCstChListColPosRangeLo _
                Or intColumnIndex = gCstChListColPosNormalHi _
                Or intColumnIndex = gCstChListColPosNormalLo Then
                    blnRtn = True
                End If

            Case gCstCodeChTypeDigital
                ' 2014.01.14 Port、PinのDummy設定追加
                If intColumnIndex = gCstChListColPosExtGrH _
                Or intColumnIndex = gCstChListColPosDelayH _
                Or intColumnIndex = gCstChListColPosGrep1H _
                Or intColumnIndex = gCstChListColPosGrep2H _
                Or intColumnIndex = gCstChListColPosFuAddress _
                Or intColumnIndex = gCstChListColPosPortAddress _
                Or intColumnIndex = gCstChListColPosPinAddress _
                Or intColumnIndex = gCstChListColPosStatusIn Then
                    blnRtn = True
                End If

            Case gCstCodeChTypeMotor
                If intColumnIndex = gCstChListColPosFuAddress _
                   Or intColumnIndex = gCstChListColPosPortAddress _
                   Or intColumnIndex = gCstChListColPosPinAddress Then
                    blnRtn = True
                End If

                ' 2014.01.14 Port、PinのDummy設定追加
                If intColumnIndex = gCstChListColPosExtGrH _
                Or intColumnIndex = gCstChListColPosGrep1H _
                Or intColumnIndex = gCstChListColPosGrep2H _
                Or intColumnIndex = gCstChListColPosDiStart _
                Or intColumnIndex = gCstChListColPosPortDiStart _
                Or intColumnIndex = gCstChListColPosPinDiStart Then
                    blnRtn = True
                End If
                ' 2014.01.14 Port、PinのDummy設定追加
                If intColumnIndex = gCstChListColPosAlarmTimeup _
                Or intColumnIndex = gCstChListColPosDoStart _
                Or intColumnIndex = gCstChListColPosPortDoStart _
                Or intColumnIndex = gCstChListColPosPinDoStart _
                Or intColumnIndex = gCstChListColPosStatusOut Then
                    blnRtn = True
                End If

                If intColumnIndex = gCstChListColPosOutExtgH _
                Or intColumnIndex = gCstChListColPosOutDelayH _
                Or intColumnIndex = gCstChListColPosOutGrep1H _
                Or intColumnIndex = gCstChListColPosOutGrep2H _
                Or intColumnIndex = gCstChListColPosOutStatusH Then
                    blnRtn = True
                End If

            Case gCstCodeChTypeValve

                ''DIの処理
                If intDataTypeCode = gCstCodeChDataTypeValveDI_DO Then
                    ' 2014.01.14 Port、PinのDummy設定追加
                    If intColumnIndex = gCstChListColPosExtGrH _
                    Or intColumnIndex = gCstChListColPosDelayH _
                    Or intColumnIndex = gCstChListColPosGrep1H _
                    Or intColumnIndex = gCstChListColPosGrep2H _
                    Or intColumnIndex = gCstChListColPosDiStart _
                    Or intColumnIndex = gCstChListColPosPortDiStart _
                    Or intColumnIndex = gCstChListColPosPinDiStart _
                    Or intColumnIndex = gCstChListColPosBitCount _
                    Or intColumnIndex = gCstChListColPosStatusIn Then
                        blnRtn = True
                    End If

                End If

                ''AIの処理
                If intDataTypeCode = gCstCodeChDataTypeValveAI_DO1 _
                Or intDataTypeCode = gCstCodeChDataTypeValveAI_DO2 _
                Or intDataTypeCode = gCstCodeChDataTypeValvePT_DO2 _
                Or intDataTypeCode = gCstCodeChDataTypeValveAI_AO1 _
                Or intDataTypeCode = gCstCodeChDataTypeValveAI_AO2 _
                Or intDataTypeCode = gCstCodeChDataTypeValvePT_AO2 Then
                    ' 2014.01.14 Port、PinのDummy設定追加
                    If intColumnIndex = gCstChListColPosAiTerm _
                    Or intColumnIndex = gCstChListColPosPortAiTerm _
                    Or intColumnIndex = gCstChListColPosPinAiTerm _
                    Or intColumnIndex = gCstChListColPosStatusIn _
                    Or intColumnIndex = gCstChListColPosUnit Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosDelayHH Or intColumnIndex = gCstChListColPosDelayH Or intColumnIndex = gCstChListColPosDelayL Or intColumnIndex = gCstChListColPosDelayLL Or intColumnIndex = gCstChListColPosDelaySF _
                    Or intColumnIndex = gCstChListColPosValueHH Or intColumnIndex = gCstChListColPosValueH Or intColumnIndex = gCstChListColPosValueL Or intColumnIndex = gCstChListColPosValueLL Or intColumnIndex = gCstChListColPosValueSF _
                    Or intColumnIndex = gCstChListColPosExtGrHH Or intColumnIndex = gCstChListColPosExtGrH Or intColumnIndex = gCstChListColPosExtGrL Or intColumnIndex = gCstChListColPosExtGrLL Or intColumnIndex = gCstChListColPosExtGrSF _
                    Or intColumnIndex = gCstChListColPosGrep1HH Or intColumnIndex = gCstChListColPosGrep1H Or intColumnIndex = gCstChListColPosGrep1L Or intColumnIndex = gCstChListColPosGrep1LL Or intColumnIndex = gCstChListColPosGrep1SF _
                    Or intColumnIndex = gCstChListColPosGrep2HH Or intColumnIndex = gCstChListColPosGrep2H Or intColumnIndex = gCstChListColPosGrep2L Or intColumnIndex = gCstChListColPosGrep2LL Or intColumnIndex = gCstChListColPosGrep2SF _
                    Or intColumnIndex = gCstChListColPosStaNmHH Or intColumnIndex = gCstChListColPosStaNmH Or intColumnIndex = gCstChListColPosStaNmL Or intColumnIndex = gCstChListColPosStaNmLL Or intColumnIndex = gCstChListColPosStaNmSF Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosRangeType _
                    Or intColumnIndex = gCstChListColPosRangeHi _
                    Or intColumnIndex = gCstChListColPosRangeLo _
                    Or intColumnIndex = gCstChListColPosNormalHi _
                    Or intColumnIndex = gCstChListColPosNormalLo Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosOutSp1 _
                    Or intColumnIndex = gCstChListColPosOutSp2 _
                    Or intColumnIndex = gCstChListColPosOutHys1 _
                    Or intColumnIndex = gCstChListColPosOutHys2 _
                    Or intColumnIndex = gCstChListColPosOutSt Then
                        blnRtn = True
                    End If

                End If

                ''DOの処理
                If intDataTypeCode = gCstCodeChDataTypeValveDI_DO _
                Or intDataTypeCode = gCstCodeChDataTypeValveAI_DO1 _
                Or intDataTypeCode = gCstCodeChDataTypeValveAI_DO2 _
                Or intDataTypeCode = gCstCodeChDataTypeValvePT_DO2 _
                Or intDataTypeCode = gCstCodeChDataTypeValveDO Then
                    ' 2014.01.14 Port、PinのDummy設定追加
                    If intColumnIndex = gCstChListColPosDoStart _
                    Or intColumnIndex = gCstChListColPosPortDoStart _
                    Or intColumnIndex = gCstChListColPosPinDoStart _
                    Or intColumnIndex = gCstChListColPosBitCount _
                    Or intColumnIndex = gCstChListColPosStatusOut Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosOutExtgH _
                    Or intColumnIndex = gCstChListColPosOutDelayH _
                    Or intColumnIndex = gCstChListColPosOutGrep1H _
                    Or intColumnIndex = gCstChListColPosOutGrep2H _
                    Or intColumnIndex = gCstChListColPosOutStatusH _
                    Or intColumnIndex = gCstChListColPosAlarmTimeup Then
                        blnRtn = True
                    End If

                End If

                ''AOの処理
                If intDataTypeCode = gCstCodeChDataTypeValveAI_AO1 _
                Or intDataTypeCode = gCstCodeChDataTypeValveAI_AO2 _
                Or intDataTypeCode = gCstCodeChDataTypeValvePT_AO2 _
                Or intDataTypeCode = gCstCodeChDataTypeValveAO_4_20 Then
                    ' 2014.01.14 Port、PinのDummy設定追加
                    If intColumnIndex = gCstChListColPosAoTerm _
                    Or intColumnIndex = gCstChListColPosPortAoTerm _
                    Or intColumnIndex = gCstChListColPosPinAoTerm _
                    Or intColumnIndex = gCstChListColPosStatusOut Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosOutSp1 _
                    Or intColumnIndex = gCstChListColPosOutSp2 _
                    Or intColumnIndex = gCstChListColPosOutHys1 _
                    Or intColumnIndex = gCstChListColPosOutHys2 _
                    Or intColumnIndex = gCstChListColPosOutSt Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosOutExtgH _
                    Or intColumnIndex = gCstChListColPosOutDelayH _
                    Or intColumnIndex = gCstChListColPosOutGrep1H _
                    Or intColumnIndex = gCstChListColPosOutGrep2H _
                    Or intColumnIndex = gCstChListColPosOutStatusH _
                    Or intColumnIndex = gCstChListColPosAlarmTimeup Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosOutVar Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosUnit _
                    Or intColumnIndex = gCstChListColPosRangeType _
                    Or intColumnIndex = gCstChListColPosRangeHi _
                    Or intColumnIndex = gCstChListColPosRangeLo Then
                        blnRtn = True
                    End If

                End If

                ''Jacomの処理
                If intDataTypeCode = gCstCodeChDataTypeValveJacom Or intDataTypeCode = gCstCodeChDataTypeValveJacom55 Then

                    If intColumnIndex = gCstChListColPosOutExtgH _
                    Or intColumnIndex = gCstChListColPosOutDelayH _
                    Or intColumnIndex = gCstChListColPosOutGrep1H _
                    Or intColumnIndex = gCstChListColPosOutGrep2H _
                    Or intColumnIndex = gCstChListColPosOutStatusH _
                    Or intColumnIndex = gCstChListColPosAlarmTimeup Then
                        blnRtn = True
                    End If

                End If

                ''Extの処理
                If intDataTypeCode = gCstCodeChDataTypeValveExt Then
                    ' 2014.01.14 Port、PinのDummy設定追加
                    If intColumnIndex = gCstChListColPosDoStart _
                    Or intColumnIndex = gCstChListColPosPortDoStart _
                    Or intColumnIndex = gCstChListColPosPinDoStart _
                    Or intColumnIndex = gCstChListColPosStatusOut Then
                        blnRtn = True
                    End If

                    If intColumnIndex = gCstChListColPosOutExtgH _
                    Or intColumnIndex = gCstChListColPosOutDelayH _
                    Or intColumnIndex = gCstChListColPosOutGrep1H _
                    Or intColumnIndex = gCstChListColPosOutGrep2H _
                    Or intColumnIndex = gCstChListColPosOutStatusH _
                    Or intColumnIndex = gCstChListColPosAlarmTimeup Then
                        blnRtn = True
                    End If

                End If


            Case gCstCodeChTypeComposite
                ' 2014.01.14 Port、PinのDummy設定追加
                If intColumnIndex = gCstChListColPosExtGrH _
                Or intColumnIndex = gCstChListColPosDelayH _
                Or intColumnIndex = gCstChListColPosGrep1H _
                Or intColumnIndex = gCstChListColPosGrep2H _
                Or intColumnIndex = gCstChListColPosDiStart _
                Or intColumnIndex = gCstChListColPosPortDiStart _
                Or intColumnIndex = gCstChListColPosPinDiStart _
                Or intColumnIndex = gCstChListColPosBitCount _
                Or intColumnIndex = gCstChListColPosStatusIn Then
                    blnRtn = True
                End If

            Case gCstCodeChTypePulse
                ' 2014.01.14 Port、PinのDummy設定追加
                If intColumnIndex = gCstChListColPosExtGrH _
                Or intColumnIndex = gCstChListColPosDelayH _
                Or intColumnIndex = gCstChListColPosGrep1H _
                Or intColumnIndex = gCstChListColPosGrep2H _
                Or intColumnIndex = gCstChListColPosStaNmH _
                Or intColumnIndex = gCstChListColPosFuAddress _
                Or intColumnIndex = gCstChListColPosPortAddress _
                Or intColumnIndex = gCstChListColPosPinAddress _
                Or intColumnIndex = gCstChListColPosUnit _
                Or intColumnIndex = gCstChListColPosStatusIn _
                Or intColumnIndex = gCstChListColPosValueH Then
                    blnRtn = True
                End If

        End Select

        Return blnRtn

    End Function

    '--------------------------------------------------------------------
    ' 機能      : 仮設定　画面表示
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : 全CHの仮設定の画面表示を行う
    '--------------------------------------------------------------------
    Private Sub mSetDisplayDummySettingAll()

        Try

            For i As Integer = 0 To UBound(mChDataGroup)

                Call mSetDisplayDummySettingOne(i)

            Next

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : 仮設定　画面表示
    ' 返り値    : なし
    ' 引き数    : ARG1 - (I ) CHの構造体インデックス
    ' 機能説明  : 1行分の仮設定を表示する
    '--------------------------------------------------------------------
    Private Sub mSetDisplayDummySettingOne(ByVal intIndex As Integer)

        Try

            Dim intRow As Integer = 0

            With mChDataGroup(intIndex)

                If .udtChCommon.shtChType = gCstCodeChTypeNothing Then

                Else

                    intRow = .udtChCommon.shtDispPos - 1        ''行番号（グループ内表示位置）

                    Select Case .udtChCommon.shtChType

                        Case gCstCodeChTypeAnalog  ''☆☆☆　アナログ

                            '▼▼▼ 20110614 仮設定機能対応（アナログ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                            grdCHList(gCstChListColPosFuAddress, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosFuAddress, grdCHList)
                            grdCHList(gCstChListColPosStatusIn, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, intRow, gCstChListColPosStatusIn, grdCHList)
                            grdCHList(gCstChListColPosUnit, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, intRow, gCstChListColPosUnit, grdCHList)

                            grdCHList(gCstChListColPosDelayHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayHH, intRow, gCstChListColPosDelayHH, grdCHList)
                            grdCHList(gCstChListColPosValueHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueHH, intRow, gCstChListColPosValueHH, grdCHList)
                            grdCHList(gCstChListColPosExtGrHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrHH, intRow, gCstChListColPosExtGrHH, grdCHList)
                            grdCHList(gCstChListColPosGrep1HH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1HH, intRow, gCstChListColPosGrep1HH, grdCHList)
                            grdCHList(gCstChListColPosGrep2HH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2HH, intRow, gCstChListColPosGrep2HH, grdCHList)
                            grdCHList(gCstChListColPosStaNmHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmHH, intRow, gCstChListColPosStaNmHH, grdCHList)

                            grdCHList(gCstChListColPosDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayH, intRow, gCstChListColPosDelayH, grdCHList)
                            grdCHList(gCstChListColPosValueH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueH, intRow, gCstChListColPosValueH, grdCHList)
                            grdCHList(gCstChListColPosExtGrH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrH, intRow, gCstChListColPosExtGrH, grdCHList)
                            grdCHList(gCstChListColPosGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1H, intRow, gCstChListColPosGrep1H, grdCHList)
                            grdCHList(gCstChListColPosGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2H, intRow, gCstChListColPosGrep2H, grdCHList)
                            grdCHList(gCstChListColPosStaNmH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmH, intRow, gCstChListColPosStaNmH, grdCHList)

                            grdCHList(gCstChListColPosDelayL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayL, intRow, gCstChListColPosDelayL, grdCHList)
                            grdCHList(gCstChListColPosValueL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueL, intRow, gCstChListColPosValueL, grdCHList)
                            grdCHList(gCstChListColPosExtGrL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrL, intRow, gCstChListColPosExtGrL, grdCHList)
                            grdCHList(gCstChListColPosGrep1L, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1L, intRow, gCstChListColPosGrep1L, grdCHList)
                            grdCHList(gCstChListColPosGrep2L, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2L, intRow, gCstChListColPosGrep2L, grdCHList)
                            grdCHList(gCstChListColPosStaNmL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmL, intRow, gCstChListColPosStaNmL, grdCHList)

                            grdCHList(gCstChListColPosDelayLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayLL, intRow, gCstChListColPosDelayLL, grdCHList)
                            grdCHList(gCstChListColPosValueLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueLL, intRow, gCstChListColPosValueLL, grdCHList)
                            grdCHList(gCstChListColPosExtGrLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrLL, intRow, gCstChListColPosExtGrLL, grdCHList)
                            grdCHList(gCstChListColPosGrep1LL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1LL, intRow, gCstChListColPosGrep1LL, grdCHList)
                            grdCHList(gCstChListColPosGrep2LL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2LL, intRow, gCstChListColPosGrep2LL, grdCHList)
                            grdCHList(gCstChListColPosStaNmLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmLL, intRow, gCstChListColPosStaNmLL, grdCHList)

                            grdCHList(gCstChListColPosDelaySF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelaySF, intRow, gCstChListColPosDelaySF, grdCHList)
                            grdCHList(gCstChListColPosValueSF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueSF, intRow, gCstChListColPosValueSF, grdCHList)
                            grdCHList(gCstChListColPosExtGrSF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrSF, intRow, gCstChListColPosExtGrSF, grdCHList)
                            grdCHList(gCstChListColPosGrep1SF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1SF, intRow, gCstChListColPosGrep1SF, grdCHList)
                            grdCHList(gCstChListColPosGrep2SF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2SF, intRow, gCstChListColPosGrep2SF, grdCHList)
                            grdCHList(gCstChListColPosStaNmSF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmSF, intRow, gCstChListColPosStaNmSF, grdCHList)

                            grdCHList(gCstChListColPosRangeType, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeType, grdCHList)
                            grdCHList(gCstChListColPosRangeHi, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeHi, grdCHList)
                            grdCHList(gCstChListColPosRangeLo, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeLo, grdCHList)
                            grdCHList(gCstChListColPosNormalHi, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalHi, intRow, gCstChListColPosNormalHi, grdCHList)
                            grdCHList(gCstChListColPosNormalLo, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalLo, intRow, gCstChListColPosNormalLo, grdCHList)
                            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                        Case gCstCodeChTypeDigital  ''☆☆☆　デジタル

                            '▼▼▼ 20110614 仮設定機能対応（デジタル） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                            grdCHList(gCstChListColPosExtGrH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, intRow, gCstChListColPosExtGrH, grdCHList)
                            grdCHList(gCstChListColPosDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, intRow, gCstChListColPosDelayH, grdCHList)
                            grdCHList(gCstChListColPosGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, intRow, gCstChListColPosGrep1H, grdCHList)
                            grdCHList(gCstChListColPosGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, intRow, gCstChListColPosGrep2H, grdCHList)
                            grdCHList(gCstChListColPosFuAddress, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosFuAddress, grdCHList)
                            grdCHList(gCstChListColPosStatusIn, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, intRow, gCstChListColPosStatusIn, grdCHList)
                            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲


                        Case gCstCodeChTypeMotor  ''☆☆☆モーター

                            '▼▼▼ 20110614 仮設定機能対応（モーター） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                            'Ver2.0.2.0 ﾀﾞﾐｰ対応
                            grdCHList(gCstChListColPosFuAddress, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosFuAddress, grdCHList)
                            grdCHList(gCstChListColPosPortAddress, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosPortAddress, grdCHList)
                            grdCHList(gCstChListColPosPinAddress, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosPinAddress, grdCHList)

                            grdCHList(gCstChListColPosExtGrH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, intRow, gCstChListColPosExtGrH, grdCHList)
                            grdCHList(gCstChListColPosGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, intRow, gCstChListColPosGrep1H, grdCHList)
                            grdCHList(gCstChListColPosGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, intRow, gCstChListColPosGrep2H, grdCHList)
                            grdCHList(gCstChListColPosDiStart, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosDiStart, grdCHList)

                            grdCHList(gCstChListColPosDoStart, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, intRow, gCstChListColPosDoStart, grdCHList)
                            grdCHList(gCstChListColPosStatusOut, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, intRow, gCstChListColPosStatusOut, grdCHList)

                            grdCHList(gCstChListColPosOutExtgH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, intRow, gCstChListColPosOutExtgH, grdCHList)
                            grdCHList(gCstChListColPosOutDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, intRow, gCstChListColPosOutDelayH, grdCHList)
                            grdCHList(gCstChListColPosOutGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, intRow, gCstChListColPosOutGrep1H, grdCHList)
                            grdCHList(gCstChListColPosOutGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, intRow, gCstChListColPosOutGrep2H, grdCHList)
                            grdCHList(gCstChListColPosOutStatusH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, intRow, gCstChListColPosOutStatusH, grdCHList)
                            grdCHList(gCstChListColPosAlarmTimeup, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, intRow, gCstChListColPosAlarmTimeup, grdCHList)
                            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                        Case gCstCodeChTypeValve  ''☆☆☆　バルブ

                            '▼▼▼ 20110614 仮設定機能対応（バルブ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                            ''DIの処理
                            If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDI_DO Then

                                grdCHList(gCstChListColPosExtGrH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, intRow, gCstChListColPosExtGrH, grdCHList)
                                grdCHList(gCstChListColPosDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, intRow, gCstChListColPosDelayH, grdCHList)
                                grdCHList(gCstChListColPosGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, intRow, gCstChListColPosGrep1H, grdCHList)
                                grdCHList(gCstChListColPosGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, intRow, gCstChListColPosGrep2H, grdCHList)
                                grdCHList(gCstChListColPosDiStart, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosDiStart, grdCHList)
                                grdCHList(gCstChListColPosBitCount, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonPinNo, intRow, gCstChListColPosBitCount, grdCHList)
                                grdCHList(gCstChListColPosStatusIn, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, intRow, gCstChListColPosStatusIn, grdCHList)

                            End If

                            ''AIの処理
                            If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_DO1 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_DO2 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValvePT_DO2 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_AO1 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_AO2 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValvePT_AO2 Then

                                grdCHList(gCstChListColPosAiTerm, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosAiTerm, grdCHList)
                                grdCHList(gCstChListColPosStatusIn, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, intRow, gCstChListColPosStatusIn, grdCHList)
                                grdCHList(gCstChListColPosUnit, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, intRow, gCstChListColPosUnit, grdCHList)

                                grdCHList(gCstChListColPosDelayHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayHH, intRow, gCstChListColPosDelayHH, grdCHList)
                                grdCHList(gCstChListColPosValueHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueHH, intRow, gCstChListColPosValueHH, grdCHList)
                                grdCHList(gCstChListColPosExtGrHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrHH, intRow, gCstChListColPosExtGrHH, grdCHList)
                                grdCHList(gCstChListColPosGrep1HH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1HH, intRow, gCstChListColPosGrep1HH, grdCHList)
                                grdCHList(gCstChListColPosGrep2HH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2HH, intRow, gCstChListColPosGrep2HH, grdCHList)
                                grdCHList(gCstChListColPosStaNmHH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmHH, intRow, gCstChListColPosStaNmHH, grdCHList)

                                grdCHList(gCstChListColPosDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayH, intRow, gCstChListColPosDelayH, grdCHList)
                                grdCHList(gCstChListColPosValueH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueH, intRow, gCstChListColPosValueH, grdCHList)
                                grdCHList(gCstChListColPosExtGrH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrH, intRow, gCstChListColPosExtGrH, grdCHList)
                                grdCHList(gCstChListColPosGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1H, intRow, gCstChListColPosGrep1H, grdCHList)
                                grdCHList(gCstChListColPosGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2H, intRow, gCstChListColPosGrep2H, grdCHList)
                                grdCHList(gCstChListColPosStaNmH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmH, intRow, gCstChListColPosStaNmH, grdCHList)

                                grdCHList(gCstChListColPosDelayL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayL, intRow, gCstChListColPosDelayL, grdCHList)
                                grdCHList(gCstChListColPosValueL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueL, intRow, gCstChListColPosValueL, grdCHList)
                                grdCHList(gCstChListColPosExtGrL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrL, intRow, gCstChListColPosExtGrL, grdCHList)
                                grdCHList(gCstChListColPosGrep1L, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1L, intRow, gCstChListColPosGrep1L, grdCHList)
                                grdCHList(gCstChListColPosGrep2L, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2L, intRow, gCstChListColPosGrep2L, grdCHList)
                                grdCHList(gCstChListColPosStaNmL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmL, intRow, gCstChListColPosStaNmL, grdCHList)

                                grdCHList(gCstChListColPosDelayLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayLL, intRow, gCstChListColPosDelayLL, grdCHList)
                                grdCHList(gCstChListColPosValueLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueLL, intRow, gCstChListColPosValueLL, grdCHList)
                                grdCHList(gCstChListColPosExtGrLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrLL, intRow, gCstChListColPosExtGrLL, grdCHList)
                                grdCHList(gCstChListColPosGrep1LL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1LL, intRow, gCstChListColPosGrep1LL, grdCHList)
                                grdCHList(gCstChListColPosGrep2LL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2LL, intRow, gCstChListColPosGrep2LL, grdCHList)
                                grdCHList(gCstChListColPosStaNmLL, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmLL, intRow, gCstChListColPosStaNmLL, grdCHList)

                                grdCHList(gCstChListColPosDelaySF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyDelaySF, intRow, gCstChListColPosDelaySF, grdCHList)
                                grdCHList(gCstChListColPosValueSF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueSF, intRow, gCstChListColPosValueSF, grdCHList)
                                grdCHList(gCstChListColPosExtGrSF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrSF, intRow, gCstChListColPosExtGrSF, grdCHList)
                                grdCHList(gCstChListColPosGrep1SF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1SF, intRow, gCstChListColPosGrep1SF, grdCHList)
                                grdCHList(gCstChListColPosGrep2SF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2SF, intRow, gCstChListColPosGrep2SF, grdCHList)
                                grdCHList(gCstChListColPosStaNmSF, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmSF, intRow, gCstChListColPosStaNmSF, grdCHList)

                                grdCHList(gCstChListColPosRangeType, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeType, grdCHList)
                                grdCHList(gCstChListColPosRangeHi, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeHi, grdCHList)
                                grdCHList(gCstChListColPosRangeLo, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeLo, grdCHList)
                                grdCHList(gCstChListColPosNormalHi, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalHi, intRow, gCstChListColPosNormalHi, grdCHList)
                                grdCHList(gCstChListColPosNormalLo, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalLo, intRow, gCstChListColPosNormalLo, grdCHList)

                                grdCHList(gCstChListColPosOutSp1, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummySp1, intRow, gCstChListColPosOutSp1, grdCHList)
                                grdCHList(gCstChListColPosOutSp2, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummySp2, intRow, gCstChListColPosOutSp2, grdCHList)
                                grdCHList(gCstChListColPosOutHys1, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyHysOpen, intRow, gCstChListColPosOutHys1, grdCHList)
                                grdCHList(gCstChListColPosOutHys2, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyHysClose, intRow, gCstChListColPosOutHys2, grdCHList)
                                grdCHList(gCstChListColPosOutSt, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummySmpTime, intRow, gCstChListColPosOutSt, grdCHList)

                            End If

                            ''DOの処理
                            If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDI_DO _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_DO1 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_DO2 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValvePT_DO2 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveDO Then

                                grdCHList(gCstChListColPosDoStart, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, intRow, gCstChListColPosDoStart, grdCHList)
                                grdCHList(gCstChListColPosBitCount, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutBitCount, intRow, gCstChListColPosBitCount, grdCHList)
                                grdCHList(gCstChListColPosStatusOut, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, intRow, gCstChListColPosStatusOut, grdCHList)

                                grdCHList(gCstChListColPosOutExtgH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, intRow, gCstChListColPosOutExtgH, grdCHList)
                                grdCHList(gCstChListColPosOutDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, intRow, gCstChListColPosOutDelayH, grdCHList)
                                grdCHList(gCstChListColPosOutGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, intRow, gCstChListColPosOutGrep1H, grdCHList)
                                grdCHList(gCstChListColPosOutGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, intRow, gCstChListColPosOutGrep2H, grdCHList)
                                grdCHList(gCstChListColPosOutStatusH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, intRow, gCstChListColPosOutStatusH, grdCHList)
                                grdCHList(gCstChListColPosAlarmTimeup, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, intRow, gCstChListColPosAlarmTimeup, grdCHList)

                            End If

                            ''AOの処理
                            If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_AO1 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAI_AO2 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValvePT_AO2 _
                            Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveAO_4_20 Then

                                grdCHList(gCstChListColPosAoTerm, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, intRow, gCstChListColPosAoTerm, grdCHList)
                                grdCHList(gCstChListColPosStatusOut, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, intRow, gCstChListColPosStatusOut, grdCHList)
                                'grdCHList(mcstStatusOut, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatus1, intRow, mcstStatusOut, grdCHList)

                                grdCHList(gCstChListColPosOutSp1, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummySp1, intRow, gCstChListColPosOutSp1, grdCHList)
                                grdCHList(gCstChListColPosOutSp2, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummySp2, intRow, gCstChListColPosOutSp2, grdCHList)
                                grdCHList(gCstChListColPosOutHys1, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyHysOpen, intRow, gCstChListColPosOutHys1, grdCHList)
                                grdCHList(gCstChListColPosOutHys2, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyHysClose, intRow, gCstChListColPosOutHys2, grdCHList)
                                grdCHList(gCstChListColPosOutSt, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummySmpTime, intRow, gCstChListColPosOutSt, grdCHList)

                                grdCHList(gCstChListColPosOutExtgH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, intRow, gCstChListColPosOutExtgH, grdCHList)
                                grdCHList(gCstChListColPosOutDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, intRow, gCstChListColPosOutDelayH, grdCHList)
                                grdCHList(gCstChListColPosOutGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, intRow, gCstChListColPosOutGrep1H, grdCHList)
                                grdCHList(gCstChListColPosOutGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, intRow, gCstChListColPosOutGrep2H, grdCHList)
                                grdCHList(gCstChListColPosOutStatusH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, intRow, gCstChListColPosOutStatusH, grdCHList)
                                grdCHList(gCstChListColPosAlarmTimeup, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, intRow, gCstChListColPosAlarmTimeup, grdCHList)

                                grdCHList(gCstChListColPosOutVar, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyVar, intRow, gCstChListColPosOutVar, grdCHList)

                                grdCHList(gCstChListColPosUnit, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, intRow, gCstChListColPosUnit, grdCHList)
                                grdCHList(gCstChListColPosRangeType, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeType, grdCHList)
                                grdCHList(gCstChListColPosRangeHi, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeHi, grdCHList)
                                grdCHList(gCstChListColPosRangeLo, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, intRow, gCstChListColPosRangeLo, grdCHList)

                            End If

                            ''Jacomの処理
                            If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom Or grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveJacom55 Then

                                grdCHList(gCstChListColPosOutExtgH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, intRow, gCstChListColPosOutExtgH, grdCHList)
                                grdCHList(gCstChListColPosOutDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, intRow, gCstChListColPosOutDelayH, grdCHList)
                                grdCHList(gCstChListColPosOutGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, intRow, gCstChListColPosOutGrep1H, grdCHList)
                                grdCHList(gCstChListColPosOutGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, intRow, gCstChListColPosOutGrep2H, grdCHList)
                                grdCHList(gCstChListColPosOutStatusH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, intRow, gCstChListColPosOutStatusH, grdCHList)
                                grdCHList(gCstChListColPosAlarmTimeup, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, intRow, gCstChListColPosAlarmTimeup, grdCHList)

                            End If

                            ''Extの処理
                            If grdCHList(gCstChListColPosDataType, intRow).Value = gCstCodeChDataTypeValveExt Then

                                grdCHList(gCstChListColPosDoStart, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, intRow, gCstChListColPosDoStart, grdCHList)
                                grdCHList(gCstChListColPosStatusOut, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, intRow, gCstChListColPosStatusOut, grdCHList)
                                grdCHList(gCstChListColPosOutExtgH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, intRow, gCstChListColPosOutExtgH, grdCHList)
                                grdCHList(gCstChListColPosOutDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, intRow, gCstChListColPosOutDelayH, grdCHList)
                                grdCHList(gCstChListColPosOutGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, intRow, gCstChListColPosOutGrep1H, grdCHList)
                                grdCHList(gCstChListColPosOutGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, intRow, gCstChListColPosOutGrep2H, grdCHList)
                                grdCHList(gCstChListColPosOutStatusH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, intRow, gCstChListColPosOutStatusH, grdCHList)
                                grdCHList(gCstChListColPosAlarmTimeup, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, intRow, gCstChListColPosAlarmTimeup, grdCHList)

                            End If
                            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                        Case gCstCodeChTypeComposite  ''☆デジタルコンポジット

                            '▼▼▼ 20110614 仮設定機能対応（コンポジット） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                            grdCHList(gCstChListColPosExtGrH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, intRow, gCstChListColPosExtGrH, grdCHList)
                            grdCHList(gCstChListColPosDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, intRow, gCstChListColPosDelayH, grdCHList)
                            grdCHList(gCstChListColPosGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, intRow, gCstChListColPosGrep1H, grdCHList)
                            grdCHList(gCstChListColPosGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, intRow, gCstChListColPosGrep2H, grdCHList)
                            grdCHList(gCstChListColPosDiStart, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosDiStart, grdCHList)
                            grdCHList(gCstChListColPosBitCount, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonPinNo, intRow, gCstChListColPosBitCount, grdCHList)
                            grdCHList(gCstChListColPosStatusIn, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, intRow, gCstChListColPosStatusIn, grdCHList)
                            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                        Case gCstCodeChTypePulse  ''☆パルス積算

                            '▼▼▼ 20110614 仮設定機能対応（パルス） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                            grdCHList(gCstChListColPosExtGrH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, intRow, gCstChListColPosExtGrH, grdCHList)
                            grdCHList(gCstChListColPosDelayH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, intRow, gCstChListColPosDelayH, grdCHList)
                            grdCHList(gCstChListColPosGrep1H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, intRow, gCstChListColPosGrep1H, grdCHList)
                            grdCHList(gCstChListColPosGrep2H, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, intRow, gCstChListColPosGrep2H, grdCHList)
                            grdCHList(gCstChListColPosFuAddress, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, intRow, gCstChListColPosFuAddress, grdCHList)
                            grdCHList(gCstChListColPosUnit, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, intRow, gCstChListColPosUnit, grdCHList)
                            grdCHList(gCstChListColPosStatusIn, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, intRow, gCstChListColPosStatusIn, grdCHList)

                            grdCHList(gCstChListColPosValueH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyValueH, intRow, gCstChListColPosValueH, grdCHList)
                            grdCHList(gCstChListColPosStaNmH, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmH, intRow, gCstChListColPosStaNmH, grdCHList)
                            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                    End Select

                End If

            End With

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : ﾀﾞﾐｰCH ｺﾋﾟｰ時処理
    ' 返り値    : なし
    ' 引き数    : SetCol   ｸﾞﾘｯﾄﾞの背景色
    '             row   　 保存ﾃﾞｰﾀの行番号
    '             col   　 保存ﾃﾞｰﾀの列番号
    ' 機能説明  : 1行分の仮設定情報を保持
    '               ' Ver1.9.0 2015.12.16追加
    '--------------------------------------------------------------------
    Private Sub SetDummySetting(ByVal SetCol As System.Drawing.Color, ByVal row As Integer, ByVal col As Integer)

        If SetCol = gCstDummySetColorDummy Then     '' ﾀﾞﾐｰ表示色ならばﾌﾗｸﾞｾｯﾄ
            gCopyChList(row, col) = 1
        Else
            gCopyChList(row, col) = 0
        End If

    End Sub

#End Region

#Region "CSV出力"

    '--------------------------------------------------------------------
    ' 機能      : CSVボタンクリック
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : 一覧をCSV形式で出力する
    '--------------------------------------------------------------------
    Private Sub cmdCsvOut_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdCsvOut.Click

        Try
            'Ver2.0.0.2 重度でも注意でもエラーがあった場合のエラーﾀﾞｲｱﾛｸﾞ消去
            frmChListWarning.Close()

            Dim strValue As String = "", strWork As String = ""

            Dim intLenItem As Integer = 30
            Dim intLenAlarmStatus As Integer = 8
            Dim intLenStatus As Integer = 16
            Dim intLenRemarks As Integer = 16

            ''名前を付けて保存ダイアログボックス表示
            Dim sfd As New SaveFileDialog

            '▼▼▼ 20110705 デフォルトファイル名はファイル名＋バージョン番号にする ▼▼▼▼▼▼▼▼▼
            sfd.FileName = "ChList_" & gudtFileInfo.strFileName & "_" & gudtFileInfo.strFileVersion    ''デフォルトファイル名
            '-----------------------------------------------------------------------------------------------
            'sfd.FileName = "ChList" & Today.ToString("yyyyMMdd")    ''デフォルトファイル名
            '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
            sfd.Filter = "CSV(*.csv)|*.csv"                         ''フィルタリング

            If sfd.ShowDialog = Windows.Forms.DialogResult.OK Then

                ''出力先パス
                strValue = sfd.FileName

                If strValue <> "" Then

                    Using sw As System.IO.StreamWriter = New System.IO.StreamWriter(strValue, False)

                        ''ヘッダ行
                        strValue = ","
                        For col As Integer = gCstChListColPosChType To gCstChListColPosRemarks

                            strValue += grdCHList.Columns(col).Name.Substring(3) & ","

                        Next
                        strValue = strValue.Substring(0, strValue.Length - 1)   ''最後のカンマを外す
                        sw.WriteLine(strValue)

                        ''一覧
                        For rw As Integer = 0 To grdCHList.Rows.Count - 1

                            strValue = (rw + 1).ToString & ","

                            For col As Integer = gCstChListColPosChType To gCstChListColPosRemarks

                                strWork = grdCHList(col, rw).FormattedValue
                                strWork = IIf(strWork = mcstNullValue, "", strWork)

                                ''カンマはスペースに置き換える
                                strWork = strWork.Replace(",", " ")

                                strWork = Trim(strWork)

                                ''テキストは固定長にする
                                'If col = mcstItemName Then
                                '    strWork = Trim(strWork).PadRight(intLenItem)

                                'ElseIf col >= mcstStatusHH And col <= mcstStatusSF Then
                                '    strWork = Trim(strWork).PadRight(intLenAlarmStatus)

                                'ElseIf col = mcstStatusIn Or col = mcstStatusOut Then
                                '    strWork = Trim(strWork).PadRight(intLenStatus)

                                'ElseIf col = mcstRemarks Then
                                '    strWork = Trim(strWork).PadRight(intLenRemarks)
                                'Else
                                '    strWork = Trim(strWork)
                                'End If

                                strValue += strWork & ","

                            Next col

                            If strValue.Length > 0 Then
                                strValue = strValue.Substring(0, strValue.Length - 1)   ''最後のカンマを外す
                                sw.WriteLine(strValue)
                            End If

                        Next rw

                    End Using

                    ''メッセージ表示
                    Call MessageBox.Show("The CSV file is output successfully.", Me.Text, MessageBoxButtons.OK, MessageBoxIcon.Information)

                End If

            End If

        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

#End Region

#Region "仮設定"

    '--------------------------------------------------------------------
    ' 機能      : 仮設定
    ' 返り値    : なし
    ' 引き数    : なし
    ' 機能説明  : ChType(チャンネル種類)、SetCH(チャンネル)、introw(チャンネル行))
    '             SetView  設定値表示(一覧表示)=1
    '                      設定値格納(保存処理)=2
    '                      チャンネル情報を更新=3
    '                      チャンネル情報を内部メモリに格納=4
    '--------------------------------------------------------------------
    Private Sub Temporary_setup(ByVal ChType As Integer, ByVal SetCH As Integer, ByVal introw As Integer, ByVal SetView As Integer)

        Try

            Select Case SetView

                Case 1

                    With mChDataGroup(SetCH)

                        Select Case ChType

                            Case 1
                                '▼▼▼ 20110614 仮設定機能対応（アナログ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                grdCHList(gCstChListColPosFuAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                grdCHList(gCstChListColPosPortAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                grdCHList(gCstChListColPosPinAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinAddress, grdCHList)
                                grdCHList(gCstChListColPosStatusIn, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                grdCHList(gCstChListColPosUnit, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, introw, gCstChListColPosUnit, grdCHList)

                                grdCHList(gCstChListColPosDelayHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayHH, introw, gCstChListColPosDelayHH, grdCHList)
                                grdCHList(gCstChListColPosValueHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueHH, introw, gCstChListColPosValueHH, grdCHList)
                                grdCHList(gCstChListColPosExtGrHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrHH, introw, gCstChListColPosExtGrHH, grdCHList)
                                grdCHList(gCstChListColPosGrep1HH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1HH, introw, gCstChListColPosGrep1HH, grdCHList)
                                grdCHList(gCstChListColPosGrep2HH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2HH, introw, gCstChListColPosGrep2HH, grdCHList)
                                grdCHList(gCstChListColPosStaNmHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmHH, introw, gCstChListColPosStaNmHH, grdCHList)

                                grdCHList(gCstChListColPosDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayH, introw, gCstChListColPosDelayH, grdCHList)
                                grdCHList(gCstChListColPosValueH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueH, introw, gCstChListColPosValueH, grdCHList)
                                grdCHList(gCstChListColPosExtGrH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrH, introw, gCstChListColPosExtGrH, grdCHList)
                                grdCHList(gCstChListColPosGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1H, introw, gCstChListColPosGrep1H, grdCHList)
                                grdCHList(gCstChListColPosGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2H, introw, gCstChListColPosGrep2H, grdCHList)
                                grdCHList(gCstChListColPosStaNmH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmH, introw, gCstChListColPosStaNmH, grdCHList)

                                grdCHList(gCstChListColPosDelayL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayL, introw, gCstChListColPosDelayL, grdCHList)
                                grdCHList(gCstChListColPosValueL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueL, introw, gCstChListColPosValueL, grdCHList)
                                grdCHList(gCstChListColPosExtGrL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrL, introw, gCstChListColPosExtGrL, grdCHList)
                                grdCHList(gCstChListColPosGrep1L, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1L, introw, gCstChListColPosGrep1L, grdCHList)
                                grdCHList(gCstChListColPosGrep2L, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2L, introw, gCstChListColPosGrep2L, grdCHList)
                                grdCHList(gCstChListColPosStaNmL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmL, introw, gCstChListColPosStaNmL, grdCHList)

                                grdCHList(gCstChListColPosDelayLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayLL, introw, gCstChListColPosDelayLL, grdCHList)
                                grdCHList(gCstChListColPosValueLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueLL, introw, gCstChListColPosValueLL, grdCHList)
                                grdCHList(gCstChListColPosExtGrLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrLL, introw, gCstChListColPosExtGrLL, grdCHList)
                                grdCHList(gCstChListColPosGrep1LL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1LL, introw, gCstChListColPosGrep1LL, grdCHList)
                                grdCHList(gCstChListColPosGrep2LL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2LL, introw, gCstChListColPosGrep2LL, grdCHList)
                                grdCHList(gCstChListColPosStaNmLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmLL, introw, gCstChListColPosStaNmLL, grdCHList)

                                grdCHList(gCstChListColPosDelaySF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelaySF, introw, gCstChListColPosDelaySF, grdCHList)
                                grdCHList(gCstChListColPosValueSF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueSF, introw, gCstChListColPosValueSF, grdCHList)
                                grdCHList(gCstChListColPosExtGrSF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrSF, introw, gCstChListColPosExtGrSF, grdCHList)
                                grdCHList(gCstChListColPosGrep1SF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1SF, introw, gCstChListColPosGrep1SF, grdCHList)
                                grdCHList(gCstChListColPosGrep2SF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2SF, introw, gCstChListColPosGrep2SF, grdCHList)
                                grdCHList(gCstChListColPosStaNmSF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmSF, introw, gCstChListColPosStaNmSF, grdCHList)

                                grdCHList(gCstChListColPosRangeType, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeType, grdCHList)
                                grdCHList(gCstChListColPosRangeHi, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeHi, grdCHList)
                                grdCHList(gCstChListColPosRangeLo, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeLo, grdCHList)
                                grdCHList(gCstChListColPosNormalHi, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalHi, introw, gCstChListColPosNormalHi, grdCHList)
                                grdCHList(gCstChListColPosNormalLo, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalLo, introw, gCstChListColPosNormalLo, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 2
                                '▼▼▼ 20110614 仮設定機能対応（デジタル） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                grdCHList(gCstChListColPosExtGrH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, introw, gCstChListColPosExtGrH, grdCHList)
                                grdCHList(gCstChListColPosDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, introw, gCstChListColPosDelayH, grdCHList)
                                grdCHList(gCstChListColPosGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                grdCHList(gCstChListColPosGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                grdCHList(gCstChListColPosFuAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                grdCHList(gCstChListColPosPortAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                grdCHList(gCstChListColPosPinAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinAddress, grdCHList)
                                grdCHList(gCstChListColPosStatusIn, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 3
                                '▼▼▼ 20110614 仮設定機能対応（モーター） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                'Ver2.0.2.0 FU inAdrをﾀﾞﾐｰ対応
                                grdCHList(gCstChListColPosFuAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                grdCHList(gCstChListColPosPortAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                grdCHList(gCstChListColPosPinAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinAddress, grdCHList)
                                ' 2014.01.14 Port、PinのDummy設定追加
                                grdCHList(gCstChListColPosExtGrH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, introw, gCstChListColPosExtGrH, grdCHList)
                                grdCHList(gCstChListColPosGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                grdCHList(gCstChListColPosGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                grdCHList(gCstChListColPosDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosDiStart, grdCHList)
                                grdCHList(gCstChListColPosPortDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortDiStart, grdCHList)
                                grdCHList(gCstChListColPosPinDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinDiStart, grdCHList)

                                grdCHList(gCstChListColPosDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosDoStart, grdCHList)
                                grdCHList(gCstChListColPosPortDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPortDoStart, grdCHList)
                                grdCHList(gCstChListColPosPinDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPinDoStart, grdCHList)
                                grdCHList(gCstChListColPosStatusOut, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)

                                grdCHList(gCstChListColPosOutExtgH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                grdCHList(gCstChListColPosOutDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                grdCHList(gCstChListColPosOutGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                grdCHList(gCstChListColPosOutGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                grdCHList(gCstChListColPosOutStatusH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                grdCHList(gCstChListColPosAlarmTimeup, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 4
                                '▼▼▼ 20110614 仮設定機能対応（バルブ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ''DIの処理
                                ' 2014.01.14 Port、PinのDummy設定追加
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO Then

                                    grdCHList(gCstChListColPosExtGrH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, introw, gCstChListColPosExtGrH, grdCHList)
                                    grdCHList(gCstChListColPosDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, introw, gCstChListColPosDelayH, grdCHList)
                                    grdCHList(gCstChListColPosGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                    grdCHList(gCstChListColPosGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                    grdCHList(gCstChListColPosDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosDiStart, grdCHList)
                                    grdCHList(gCstChListColPosPortDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortDiStart, grdCHList)
                                    grdCHList(gCstChListColPosPinDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinDiStart, grdCHList)
                                    grdCHList(gCstChListColPosBitCount, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonPinNo, introw, gCstChListColPosBitCount, grdCHList)
                                    grdCHList(gCstChListColPosStatusIn, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, introw, gCstChListColPosStatusIn, grdCHList)

                                End If

                                ''AIの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 Then

                                    grdCHList(gCstChListColPosAiTerm, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosAiTerm, grdCHList)
                                    grdCHList(gCstChListColPosPortAiTerm, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortAiTerm, grdCHList)
                                    grdCHList(gCstChListColPosPinAiTerm, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinAiTerm, grdCHList)
                                    grdCHList(gCstChListColPosStatusIn, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                    grdCHList(gCstChListColPosUnit, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, introw, gCstChListColPosUnit, grdCHList)

                                    grdCHList(gCstChListColPosDelayHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayHH, introw, gCstChListColPosDelayHH, grdCHList)
                                    grdCHList(gCstChListColPosValueHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueHH, introw, gCstChListColPosValueHH, grdCHList)
                                    grdCHList(gCstChListColPosExtGrHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrHH, introw, gCstChListColPosExtGrHH, grdCHList)
                                    grdCHList(gCstChListColPosGrep1HH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1HH, introw, gCstChListColPosGrep1HH, grdCHList)
                                    grdCHList(gCstChListColPosGrep2HH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2HH, introw, gCstChListColPosGrep2HH, grdCHList)
                                    grdCHList(gCstChListColPosStaNmHH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmHH, introw, gCstChListColPosStaNmHH, grdCHList)

                                    grdCHList(gCstChListColPosDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayH, introw, gCstChListColPosDelayH, grdCHList)
                                    grdCHList(gCstChListColPosValueH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueH, introw, gCstChListColPosValueH, grdCHList)
                                    grdCHList(gCstChListColPosExtGrH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrH, introw, gCstChListColPosExtGrH, grdCHList)
                                    grdCHList(gCstChListColPosGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1H, introw, gCstChListColPosGrep1H, grdCHList)
                                    grdCHList(gCstChListColPosGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2H, introw, gCstChListColPosGrep2H, grdCHList)
                                    grdCHList(gCstChListColPosStaNmH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmH, introw, gCstChListColPosStaNmH, grdCHList)

                                    grdCHList(gCstChListColPosDelayL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayL, introw, gCstChListColPosDelayL, grdCHList)
                                    grdCHList(gCstChListColPosValueL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueL, introw, gCstChListColPosValueL, grdCHList)
                                    grdCHList(gCstChListColPosExtGrL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrL, introw, gCstChListColPosExtGrL, grdCHList)
                                    grdCHList(gCstChListColPosGrep1L, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1L, introw, gCstChListColPosGrep1L, grdCHList)
                                    grdCHList(gCstChListColPosGrep2L, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2L, introw, gCstChListColPosGrep2L, grdCHList)
                                    grdCHList(gCstChListColPosStaNmL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmL, introw, gCstChListColPosStaNmL, grdCHList)

                                    grdCHList(gCstChListColPosDelayLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelayLL, introw, gCstChListColPosDelayLL, grdCHList)
                                    grdCHList(gCstChListColPosValueLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueLL, introw, gCstChListColPosValueLL, grdCHList)
                                    grdCHList(gCstChListColPosExtGrLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrLL, introw, gCstChListColPosExtGrLL, grdCHList)
                                    grdCHList(gCstChListColPosGrep1LL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1LL, introw, gCstChListColPosGrep1LL, grdCHList)
                                    grdCHList(gCstChListColPosGrep2LL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2LL, introw, gCstChListColPosGrep2LL, grdCHList)
                                    grdCHList(gCstChListColPosStaNmLL, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmLL, introw, gCstChListColPosStaNmLL, grdCHList)

                                    grdCHList(gCstChListColPosDelaySF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyDelaySF, introw, gCstChListColPosDelaySF, grdCHList)
                                    grdCHList(gCstChListColPosValueSF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueSF, introw, gCstChListColPosValueSF, grdCHList)
                                    grdCHList(gCstChListColPosExtGrSF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyExtGrSF, introw, gCstChListColPosExtGrSF, grdCHList)
                                    grdCHList(gCstChListColPosGrep1SF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep1SF, introw, gCstChListColPosGrep1SF, grdCHList)
                                    grdCHList(gCstChListColPosGrep2SF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyGRep2SF, introw, gCstChListColPosGrep2SF, grdCHList)
                                    grdCHList(gCstChListColPosStaNmSF, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmSF, introw, gCstChListColPosStaNmSF, grdCHList)

                                    grdCHList(gCstChListColPosRangeType, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeType, grdCHList)
                                    grdCHList(gCstChListColPosRangeHi, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeHi, grdCHList)
                                    grdCHList(gCstChListColPosRangeLo, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeLo, grdCHList)
                                    grdCHList(gCstChListColPosNormalHi, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalHi, introw, gCstChListColPosNormalHi, grdCHList)
                                    grdCHList(gCstChListColPosNormalLo, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeNormalLo, introw, gCstChListColPosNormalLo, grdCHList)

                                    grdCHList(gCstChListColPosOutSp1, introw).Style.BackColor = gDummyGetBackColorGrid(.DummySp1, introw, gCstChListColPosOutSp1, grdCHList)
                                    grdCHList(gCstChListColPosOutSp2, introw).Style.BackColor = gDummyGetBackColorGrid(.DummySp2, introw, gCstChListColPosOutSp2, grdCHList)
                                    grdCHList(gCstChListColPosOutHys1, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyHysOpen, introw, gCstChListColPosOutHys1, grdCHList)
                                    grdCHList(gCstChListColPosOutHys2, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyHysClose, introw, gCstChListColPosOutHys2, grdCHList)
                                    grdCHList(gCstChListColPosOutSt, introw).Style.BackColor = gDummyGetBackColorGrid(.DummySmpTime, introw, gCstChListColPosOutSt, grdCHList)

                                End If

                                ''DOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDO Then

                                    grdCHList(gCstChListColPosDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosDoStart, grdCHList)
                                    grdCHList(gCstChListColPosPortDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPortDoStart, grdCHList)
                                    grdCHList(gCstChListColPosPinDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPinDoStart, grdCHList)
                                    grdCHList(gCstChListColPosBitCount, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutBitCount, introw, gCstChListColPosBitCount, grdCHList)
                                    grdCHList(gCstChListColPosStatusOut, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)

                                    grdCHList(gCstChListColPosOutExtgH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    grdCHList(gCstChListColPosOutDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    grdCHList(gCstChListColPosOutStatusH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    grdCHList(gCstChListColPosAlarmTimeup, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                End If

                                ''AOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAO_4_20 Then

                                    grdCHList(gCstChListColPosAoTerm, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosAoTerm, grdCHList)
                                    grdCHList(gCstChListColPosPortAoTerm, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPortAoTerm, grdCHList)
                                    grdCHList(gCstChListColPosPinAoTerm, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPinAoTerm, grdCHList)
                                    grdCHList(gCstChListColPosStatusOut, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)
                                    'grdCHList(mcstStatusOut, intRow).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatus1, intRow, mcstStatusOut, grdCHList)

                                    grdCHList(gCstChListColPosOutSp1, introw).Style.BackColor = gDummyGetBackColorGrid(.DummySp1, introw, gCstChListColPosOutSp1, grdCHList)
                                    grdCHList(gCstChListColPosOutSp2, introw).Style.BackColor = gDummyGetBackColorGrid(.DummySp2, introw, gCstChListColPosOutSp2, grdCHList)
                                    grdCHList(gCstChListColPosOutHys1, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyHysOpen, introw, gCstChListColPosOutHys1, grdCHList)
                                    grdCHList(gCstChListColPosOutHys2, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyHysClose, introw, gCstChListColPosOutHys2, grdCHList)
                                    grdCHList(gCstChListColPosOutSt, introw).Style.BackColor = gDummyGetBackColorGrid(.DummySmpTime, introw, gCstChListColPosOutSt, grdCHList)

                                    grdCHList(gCstChListColPosOutExtgH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    grdCHList(gCstChListColPosOutDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    grdCHList(gCstChListColPosOutStatusH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    grdCHList(gCstChListColPosAlarmTimeup, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                    grdCHList(gCstChListColPosOutVar, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyVar, introw, gCstChListColPosOutVar, grdCHList)

                                    grdCHList(gCstChListColPosUnit, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, introw, gCstChListColPosUnit, grdCHList)
                                    grdCHList(gCstChListColPosRangeType, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeType, grdCHList)
                                    grdCHList(gCstChListColPosRangeHi, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeHi, grdCHList)
                                    grdCHList(gCstChListColPosRangeLo, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyRangeScale, introw, gCstChListColPosRangeLo, grdCHList)

                                End If

                                ''Jacomの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom55 Then

                                    grdCHList(gCstChListColPosOutExtgH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    grdCHList(gCstChListColPosOutDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    grdCHList(gCstChListColPosOutStatusH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    grdCHList(gCstChListColPosAlarmTimeup, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                End If

                                ''Extの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveExt Then

                                    grdCHList(gCstChListColPosDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosDoStart, grdCHList)
                                    grdCHList(gCstChListColPosPortDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPortDoStart, grdCHList)
                                    grdCHList(gCstChListColPosPinDoStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutFuAddress, introw, gCstChListColPosPinDoStart, grdCHList)
                                    grdCHList(gCstChListColPosStatusOut, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)
                                    grdCHList(gCstChListColPosOutExtgH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    grdCHList(gCstChListColPosOutDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    grdCHList(gCstChListColPosOutGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    grdCHList(gCstChListColPosOutStatusH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    grdCHList(gCstChListColPosAlarmTimeup, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                End If
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 5
                                '▼▼▼ 20110614 仮設定機能対応（コンポジット） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                grdCHList(gCstChListColPosExtGrH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, introw, gCstChListColPosExtGrH, grdCHList)
                                grdCHList(gCstChListColPosDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, introw, gCstChListColPosDelayH, grdCHList)
                                grdCHList(gCstChListColPosGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                grdCHList(gCstChListColPosGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                grdCHList(gCstChListColPosDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosDiStart, grdCHList)
                                grdCHList(gCstChListColPosPortDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortDiStart, grdCHList)
                                grdCHList(gCstChListColPosPinDiStart, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinDiStart, grdCHList)
                                grdCHList(gCstChListColPosBitCount, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonPinNo, introw, gCstChListColPosBitCount, grdCHList)
                                grdCHList(gCstChListColPosStatusIn, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 6
                                '▼▼▼ 20110614 仮設定機能対応（パルス） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                grdCHList(gCstChListColPosExtGrH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonExtGroup, introw, gCstChListColPosExtGrH, grdCHList)
                                grdCHList(gCstChListColPosDelayH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonDelay, introw, gCstChListColPosDelayH, grdCHList)
                                grdCHList(gCstChListColPosGrep1H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                grdCHList(gCstChListColPosGrep2H, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                grdCHList(gCstChListColPosFuAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                grdCHList(gCstChListColPosPortAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                grdCHList(gCstChListColPosPinAddress, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonFuAddress, introw, gCstChListColPosPinAddress, grdCHList)
                                grdCHList(gCstChListColPosUnit, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonUnitName, introw, gCstChListColPosUnit, grdCHList)
                                grdCHList(gCstChListColPosStatusIn, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyCommonStatusName, introw, gCstChListColPosStatusIn, grdCHList)

                                grdCHList(gCstChListColPosValueH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyValueH, introw, gCstChListColPosValueH, grdCHList)
                                grdCHList(gCstChListColPosStaNmH, introw).Style.BackColor = gDummyGetBackColorGrid(.DummyStaNmH, introw, gCstChListColPosStaNmH, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                        End Select

                    End With

                Case 2

                    With mChDataGroup(SetCH)

                        Select Case ChType

                            Case 1
                                '▼▼▼ 20110614 仮設定機能対応（アナログ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                'Ver2.0.1.2
                                'FuAdrで、背景色がFuNoのみ灰色の場合(緯度、経度など)Dummyが落ちてしまうため
                                'FuNo,FuPort,FuPinいずれかがDummyColorの場合にDummyONとする。
                                '.DummyCommonFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosFuAddress))
                                Dim blFuDummy As Boolean = False
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosFuAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPortAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPinAddress)) = True Then
                                    blFuDummy = True
                                End If
                                .DummyCommonFuAddress = blFuDummy




                                .DummyCommonStatusName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusIn))
                                .DummyCommonUnitName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosUnit))

                                .DummyDelayHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayHH))
                                .DummyValueHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueHH))
                                .DummyExtGrHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrHH))
                                .DummyGRep1HH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1HH))
                                .DummyGRep2HH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2HH))
                                .DummyStaNmHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmHH))

                                .DummyDelayH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayH))
                                .DummyValueH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueH))
                                .DummyExtGrH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrH))
                                .DummyGRep1H = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1H))
                                .DummyGRep2H = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2H))
                                .DummyStaNmH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmH))

                                .DummyDelayL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayL))
                                .DummyValueL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueL))
                                .DummyExtGrL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrL))
                                .DummyGRep1L = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1L))
                                .DummyGRep2L = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2L))
                                .DummyStaNmL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmL))

                                .DummyDelayLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayLL))
                                .DummyValueLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueLL))
                                .DummyExtGrLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrLL))
                                .DummyGRep1LL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1LL))
                                .DummyGRep2LL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2LL))
                                .DummyStaNmLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmLL))

                                .DummyDelaySF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelaySF))
                                .DummyValueSF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueSF))
                                .DummyExtGrSF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrSF))
                                .DummyGRep1SF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1SF))
                                .DummyGRep2SF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2SF))
                                .DummyStaNmSF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmSF))

                                '' レンジ仮設定　2,3線式の場合はレンジタイプで判断    2014.05.19
                                If grdCHList(gCstChListColPosDataType, introw).Value >= gCstCodeChDataTypeAnalog2Pt And _
                                   grdCHList(gCstChListColPosDataType, introw).Value <= gCstCodeChDataTypeAnalog3Jpt Then  ''2,3線式
                                    .DummyRangeScale = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosRangeType))
                                Else
                                    .DummyRangeScale = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosRangeHi))
                                End If

                                .DummyRangeNormalHi = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosNormalHi))
                                .DummyRangeNormalLo = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosNormalLo))
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 2
                                '▼▼▼ 20110614 仮設定機能対応（デジタル） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                .DummyCommonExtGroup = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrH))
                                .DummyCommonDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayH))
                                .DummyCommonGroupRepose1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1H))
                                .DummyCommonGroupRepose2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2H))
                                '.DummyCommonFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosFuAddress))
                                .DummyCommonStatusName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusIn))

                                'Ver2.0.1.2
                                'FuAdrで、背景色がFuNoのみ灰色の場合(緯度、経度など)Dummyが落ちてしまうため
                                'FuNo,FuPort,FuPinいずれかがDummyColorの場合にDummyONとする。
                                Dim blFuDummy As Boolean = False
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosFuAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPortAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPinAddress)) = True Then
                                    blFuDummy = True
                                End If
                                .DummyCommonFuAddress = blFuDummy

                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 3
                                '▼▼▼ 20110614 仮設定機能対応（モーター） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                'Ver2.0.2.0 ﾀﾞﾐｰ対応
                                Dim blFuDummy As Boolean = False
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosFuAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPortAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPinAddress)) = True Then
                                    blFuDummy = True
                                End If
                                .DummyCommonFuAddress = blFuDummy

                                .DummyCommonExtGroup = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrH))
                                .DummyCommonGroupRepose1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1H))
                                .DummyCommonGroupRepose2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2H))
                                '.DummyCommonFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDiStart))

                                .DummyOutFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDoStart))


                                .DummyOutStatusType = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusOut))

                                .DummyOutStatus1 = mChDataGroupBK(introw).DummyOutStatus1
                                .DummyOutStatus2 = mChDataGroupBK(introw).DummyOutStatus2
                                .DummyOutStatus3 = mChDataGroupBK(introw).DummyOutStatus3
                                .DummyOutStatus4 = mChDataGroupBK(introw).DummyOutStatus4
                                .DummyOutStatus5 = mChDataGroupBK(introw).DummyOutStatus5

                                .DummyFaExtGr = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutExtgH))
                                .DummyFaDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutDelayH))
                                .DummyFaGrep1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep1H))
                                .DummyFaGrep2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep2H))
                                .DummyFaStaNm = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutStatusH))
                                .DummyFaTimeV = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosAlarmTimeup))
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 4
                                '▼▼▼ 20110614 仮設定機能対応（バルブ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ''DIの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO Then

                                    .DummyCommonExtGroup = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrH))
                                    .DummyCommonDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayH))
                                    .DummyCommonGroupRepose1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1H))
                                    .DummyCommonGroupRepose2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2H))
                                    .DummyCommonFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDiStart))
                                    .DummyCommonPinNo = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosBitCount))
                                    .DummyCommonStatusName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusIn))

                                    .DummyCmpStatus1ExtGr = mChDataGroupBK(introw).DummyCmpStatus1ExtGr
                                    .DummyCmpStatus1Delay = mChDataGroupBK(introw).DummyCmpStatus1Delay
                                    .DummyCmpStatus1GRep1 = mChDataGroupBK(introw).DummyCmpStatus1GRep1
                                    .DummyCmpStatus1GRep2 = mChDataGroupBK(introw).DummyCmpStatus1GRep2
                                    .DummyCmpStatus1StaNm = mChDataGroupBK(introw).DummyCmpStatus1StaNm

                                    .DummyCmpStatus2ExtGr = mChDataGroupBK(introw).DummyCmpStatus2ExtGr
                                    .DummyCmpStatus2Delay = mChDataGroupBK(introw).DummyCmpStatus2Delay
                                    .DummyCmpStatus2GRep1 = mChDataGroupBK(introw).DummyCmpStatus2GRep1
                                    .DummyCmpStatus2GRep2 = mChDataGroupBK(introw).DummyCmpStatus2GRep2
                                    .DummyCmpStatus2StaNm = mChDataGroupBK(introw).DummyCmpStatus2StaNm

                                    .DummyCmpStatus3ExtGr = mChDataGroupBK(introw).DummyCmpStatus3ExtGr
                                    .DummyCmpStatus3Delay = mChDataGroupBK(introw).DummyCmpStatus3Delay
                                    .DummyCmpStatus3GRep1 = mChDataGroupBK(introw).DummyCmpStatus3GRep1
                                    .DummyCmpStatus3GRep2 = mChDataGroupBK(introw).DummyCmpStatus3GRep2
                                    .DummyCmpStatus3StaNm = mChDataGroupBK(introw).DummyCmpStatus3StaNm

                                    .DummyCmpStatus4ExtGr = mChDataGroupBK(introw).DummyCmpStatus4ExtGr
                                    .DummyCmpStatus4Delay = mChDataGroupBK(introw).DummyCmpStatus4Delay
                                    .DummyCmpStatus4GRep1 = mChDataGroupBK(introw).DummyCmpStatus4GRep1
                                    .DummyCmpStatus4GRep2 = mChDataGroupBK(introw).DummyCmpStatus4GRep2
                                    .DummyCmpStatus4StaNm = mChDataGroupBK(introw).DummyCmpStatus4StaNm

                                    .DummyCmpStatus5ExtGr = mChDataGroupBK(introw).DummyCmpStatus5ExtGr
                                    .DummyCmpStatus5Delay = mChDataGroupBK(introw).DummyCmpStatus5Delay
                                    .DummyCmpStatus5GRep1 = mChDataGroupBK(introw).DummyCmpStatus5GRep1
                                    .DummyCmpStatus5GRep2 = mChDataGroupBK(introw).DummyCmpStatus5GRep2
                                    .DummyCmpStatus5StaNm = mChDataGroupBK(introw).DummyCmpStatus5StaNm

                                    .DummyCmpStatus6ExtGr = mChDataGroupBK(introw).DummyCmpStatus6ExtGr
                                    .DummyCmpStatus6Delay = mChDataGroupBK(introw).DummyCmpStatus6Delay
                                    .DummyCmpStatus6GRep1 = mChDataGroupBK(introw).DummyCmpStatus6GRep1
                                    .DummyCmpStatus6GRep2 = mChDataGroupBK(introw).DummyCmpStatus6GRep2
                                    .DummyCmpStatus6StaNm = mChDataGroupBK(introw).DummyCmpStatus6StaNm

                                    .DummyCmpStatus7ExtGr = mChDataGroupBK(introw).DummyCmpStatus7ExtGr
                                    .DummyCmpStatus7Delay = mChDataGroupBK(introw).DummyCmpStatus7Delay
                                    .DummyCmpStatus7GRep1 = mChDataGroupBK(introw).DummyCmpStatus7GRep1
                                    .DummyCmpStatus7GRep2 = mChDataGroupBK(introw).DummyCmpStatus7GRep2
                                    .DummyCmpStatus7StaNm = mChDataGroupBK(introw).DummyCmpStatus7StaNm

                                    .DummyCmpStatus8ExtGr = mChDataGroupBK(introw).DummyCmpStatus8ExtGr
                                    .DummyCmpStatus8Delay = mChDataGroupBK(introw).DummyCmpStatus8Delay
                                    .DummyCmpStatus8GRep1 = mChDataGroupBK(introw).DummyCmpStatus8GRep1
                                    .DummyCmpStatus8GRep2 = mChDataGroupBK(introw).DummyCmpStatus8GRep2
                                    .DummyCmpStatus8StaNm = mChDataGroupBK(introw).DummyCmpStatus8StaNm

                                    .DummyCmpStatus9ExtGr = mChDataGroupBK(introw).DummyCmpStatus9ExtGr
                                    .DummyCmpStatus9Delay = mChDataGroupBK(introw).DummyCmpStatus9Delay
                                    .DummyCmpStatus9GRep1 = mChDataGroupBK(introw).DummyCmpStatus9GRep1
                                    .DummyCmpStatus9GRep2 = mChDataGroupBK(introw).DummyCmpStatus9GRep2
                                    .DummyCmpStatus9StaNm = mChDataGroupBK(introw).DummyCmpStatus9StaNm

                                End If

                                ''AIの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 Then

                                    .DummyCommonFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosAiTerm))
                                    .DummyCommonStatusName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusIn))
                                    .DummyCommonUnitName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosUnit))

                                    .DummyDelayHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayHH))
                                    .DummyValueHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueHH))
                                    .DummyExtGrHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrHH))
                                    .DummyGRep1HH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1HH))
                                    .DummyGRep2HH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2HH))
                                    .DummyStaNmHH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmHH))

                                    .DummyDelayH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayH))
                                    .DummyValueH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueH))
                                    .DummyExtGrH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrH))
                                    .DummyGRep1H = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1H))
                                    .DummyGRep2H = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2H))
                                    .DummyStaNmH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmH))

                                    .DummyDelayL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayL))
                                    .DummyValueL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueL))
                                    .DummyExtGrL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrL))
                                    .DummyGRep1L = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1L))
                                    .DummyGRep2L = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2L))
                                    .DummyStaNmL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmL))

                                    .DummyDelayLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayLL))
                                    .DummyValueLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueLL))
                                    .DummyExtGrLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrLL))
                                    .DummyGRep1LL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1LL))
                                    .DummyGRep2LL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2LL))
                                    .DummyStaNmLL = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmLL))

                                    .DummyDelaySF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelaySF))
                                    .DummyValueSF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueSF))
                                    .DummyExtGrSF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrSF))
                                    .DummyGRep1SF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1SF))
                                    .DummyGRep2SF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2SF))
                                    .DummyStaNmSF = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmSF))

                                    .DummyRangeScale = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosRangeHi))
                                    .DummyRangeNormalHi = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosNormalHi))
                                    .DummyRangeNormalLo = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosNormalLo))

                                    .DummySp1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutSp1))
                                    .DummySp2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutSp2))
                                    .DummyHysOpen = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutHys1))
                                    .DummyHysClose = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutHys2))
                                    .DummySmpTime = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutSt))

                                End If

                                ''DOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDO Then

                                    .DummyOutFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDoStart))
                                    .DummyOutBitCount = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosBitCount))
                                    .DummyOutStatusType = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusOut))

                                    .DummyOutStatus1 = mChDataGroupBK(introw).DummyOutStatus1
                                    .DummyOutStatus2 = mChDataGroupBK(introw).DummyOutStatus2
                                    .DummyOutStatus3 = mChDataGroupBK(introw).DummyOutStatus3
                                    .DummyOutStatus4 = mChDataGroupBK(introw).DummyOutStatus4
                                    .DummyOutStatus5 = mChDataGroupBK(introw).DummyOutStatus5
                                    .DummyOutStatus6 = mChDataGroupBK(introw).DummyOutStatus6
                                    .DummyOutStatus7 = mChDataGroupBK(introw).DummyOutStatus7
                                    .DummyOutStatus8 = mChDataGroupBK(introw).DummyOutStatus8

                                    .DummyFaExtGr = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutExtgH))
                                    .DummyFaDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutDelayH))
                                    .DummyFaGrep1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep1H))
                                    .DummyFaGrep2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep2H))
                                    .DummyFaStaNm = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutStatusH))
                                    .DummyFaTimeV = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosAlarmTimeup))

                                End If

                                ''AOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAO_4_20 Then

                                    .DummyOutFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosAoTerm))
                                    .DummyOutStatusType = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusOut))
                                    .DummyOutStatus1 = mChDataGroupBK(introw).DummyOutStatus1

                                    .DummySp1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutSp1))
                                    .DummySp2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutSp2))
                                    .DummyHysOpen = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutHys1))
                                    .DummyHysClose = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutHys2))
                                    .DummySmpTime = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutSt))

                                    .DummyFaExtGr = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutExtgH))
                                    .DummyFaDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutDelayH))
                                    .DummyFaGrep1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep1H))
                                    .DummyFaGrep2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep2H))
                                    .DummyFaStaNm = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutStatusH))
                                    .DummyFaTimeV = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosAlarmTimeup))

                                    .DummyVar = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutVar))

                                    .DummyCommonUnitName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosUnit))
                                    .DummyRangeScale = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosRangeHi))

                                End If

                                ''Jacomの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom55 Then

                                    .DummyFaExtGr = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutExtgH))
                                    .DummyFaDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutDelayH))
                                    .DummyFaGrep1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep1H))
                                    .DummyFaGrep2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep2H))
                                    .DummyFaStaNm = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutStatusH))
                                    .DummyFaTimeV = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosAlarmTimeup))

                                End If

                                ''Extの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveExt Then

                                    .DummyOutFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDoStart))
                                    .DummyOutStatusType = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusOut))
                                    .DummyFaExtGr = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutExtgH))
                                    .DummyFaDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutDelayH))
                                    .DummyFaGrep1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep1H))
                                    .DummyFaGrep2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutGrep2H))
                                    .DummyFaStaNm = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosOutStatusH))
                                    .DummyFaTimeV = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosAlarmTimeup))

                                End If
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 5
                                '▼▼▼ 20110614 仮設定機能対応（コンポジット） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                .DummyCommonExtGroup = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrH))
                                .DummyCommonDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayH))
                                .DummyCommonGroupRepose1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1H))
                                .DummyCommonGroupRepose2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2H))
                                .DummyCommonFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDiStart))
                                .DummyCommonPinNo = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosBitCount))
                                .DummyCommonStatusName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusIn))

                                .DummyCmpStatus1ExtGr = mChDataGroupBK(introw).DummyCmpStatus1ExtGr
                                .DummyCmpStatus1Delay = mChDataGroupBK(introw).DummyCmpStatus1Delay
                                .DummyCmpStatus1GRep1 = mChDataGroupBK(introw).DummyCmpStatus1GRep1
                                .DummyCmpStatus1GRep2 = mChDataGroupBK(introw).DummyCmpStatus1GRep2
                                .DummyCmpStatus1StaNm = mChDataGroupBK(introw).DummyCmpStatus1StaNm

                                .DummyCmpStatus2ExtGr = mChDataGroupBK(introw).DummyCmpStatus2ExtGr
                                .DummyCmpStatus2Delay = mChDataGroupBK(introw).DummyCmpStatus2Delay
                                .DummyCmpStatus2GRep1 = mChDataGroupBK(introw).DummyCmpStatus2GRep1
                                .DummyCmpStatus2GRep2 = mChDataGroupBK(introw).DummyCmpStatus2GRep2
                                .DummyCmpStatus2StaNm = mChDataGroupBK(introw).DummyCmpStatus2StaNm

                                .DummyCmpStatus3ExtGr = mChDataGroupBK(introw).DummyCmpStatus3ExtGr
                                .DummyCmpStatus3Delay = mChDataGroupBK(introw).DummyCmpStatus3Delay
                                .DummyCmpStatus3GRep1 = mChDataGroupBK(introw).DummyCmpStatus3GRep1
                                .DummyCmpStatus3GRep2 = mChDataGroupBK(introw).DummyCmpStatus3GRep2
                                .DummyCmpStatus3StaNm = mChDataGroupBK(introw).DummyCmpStatus3StaNm

                                .DummyCmpStatus4ExtGr = mChDataGroupBK(introw).DummyCmpStatus4ExtGr
                                .DummyCmpStatus4Delay = mChDataGroupBK(introw).DummyCmpStatus4Delay
                                .DummyCmpStatus4GRep1 = mChDataGroupBK(introw).DummyCmpStatus4GRep1
                                .DummyCmpStatus4GRep2 = mChDataGroupBK(introw).DummyCmpStatus4GRep2
                                .DummyCmpStatus4StaNm = mChDataGroupBK(introw).DummyCmpStatus4StaNm

                                .DummyCmpStatus5ExtGr = mChDataGroupBK(introw).DummyCmpStatus5ExtGr
                                .DummyCmpStatus5Delay = mChDataGroupBK(introw).DummyCmpStatus5Delay
                                .DummyCmpStatus5GRep1 = mChDataGroupBK(introw).DummyCmpStatus5GRep1
                                .DummyCmpStatus5GRep2 = mChDataGroupBK(introw).DummyCmpStatus5GRep2
                                .DummyCmpStatus5StaNm = mChDataGroupBK(introw).DummyCmpStatus5StaNm

                                .DummyCmpStatus6ExtGr = mChDataGroupBK(introw).DummyCmpStatus6ExtGr
                                .DummyCmpStatus6Delay = mChDataGroupBK(introw).DummyCmpStatus6Delay
                                .DummyCmpStatus6GRep1 = mChDataGroupBK(introw).DummyCmpStatus6GRep1
                                .DummyCmpStatus6GRep2 = mChDataGroupBK(introw).DummyCmpStatus6GRep2
                                .DummyCmpStatus6StaNm = mChDataGroupBK(introw).DummyCmpStatus6StaNm

                                .DummyCmpStatus7ExtGr = mChDataGroupBK(introw).DummyCmpStatus7ExtGr
                                .DummyCmpStatus7Delay = mChDataGroupBK(introw).DummyCmpStatus7Delay
                                .DummyCmpStatus7GRep1 = mChDataGroupBK(introw).DummyCmpStatus7GRep1
                                .DummyCmpStatus7GRep2 = mChDataGroupBK(introw).DummyCmpStatus7GRep2
                                .DummyCmpStatus7StaNm = mChDataGroupBK(introw).DummyCmpStatus7StaNm

                                .DummyCmpStatus8ExtGr = mChDataGroupBK(introw).DummyCmpStatus8ExtGr
                                .DummyCmpStatus8Delay = mChDataGroupBK(introw).DummyCmpStatus8Delay
                                .DummyCmpStatus8GRep1 = mChDataGroupBK(introw).DummyCmpStatus8GRep1
                                .DummyCmpStatus8GRep2 = mChDataGroupBK(introw).DummyCmpStatus8GRep2
                                .DummyCmpStatus8StaNm = mChDataGroupBK(introw).DummyCmpStatus8StaNm

                                .DummyCmpStatus9ExtGr = mChDataGroupBK(introw).DummyCmpStatus9ExtGr
                                .DummyCmpStatus9Delay = mChDataGroupBK(introw).DummyCmpStatus9Delay
                                .DummyCmpStatus9GRep1 = mChDataGroupBK(introw).DummyCmpStatus9GRep1
                                .DummyCmpStatus9GRep2 = mChDataGroupBK(introw).DummyCmpStatus9GRep2
                                .DummyCmpStatus9StaNm = mChDataGroupBK(introw).DummyCmpStatus9StaNm
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 6
                                '▼▼▼ 20110614 仮設定機能対応（パルス） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                .DummyCommonExtGroup = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosExtGrH))
                                .DummyCommonDelay = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosDelayH))
                                .DummyCommonGroupRepose1 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep1H))
                                .DummyCommonGroupRepose2 = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosGrep2H))
                                '.DummyCommonFuAddress = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosFuAddress))
                                'Ver2.0.1.2
                                'FuAdrで、背景色がFuNoのみ灰色の場合(緯度、経度など)Dummyが落ちてしまうため
                                'FuNo,FuPort,FuPinいずれかがDummyColorの場合にDummyONとする。
                                Dim blFuDummy As Boolean = False
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosFuAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPortAddress)) = True Then
                                    blFuDummy = True
                                End If
                                If gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosPinAddress)) = True Then
                                    blFuDummy = True
                                End If
                                .DummyCommonFuAddress = blFuDummy

                                .DummyCommonUnitName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosUnit))
                                .DummyCommonStatusName = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStatusIn))

                                .DummyValueH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosValueH))
                                .DummyStaNmH = gDummyCheckControl(grdCHList.Rows(introw).Cells(gCstChListColPosStaNmH))
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                        End Select

                    End With


                Case 3

                    With grdCHList.Rows(introw)

                        Select Case ChType

                            Case 1
                                '▼▼▼ 20110614 仮設定機能対応（アナログ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                .Cells(gCstChListColPosFuAddress).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                .Cells(gCstChListColPosPortAddress).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                .Cells(gCstChListColPosPinAddress).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyFuAddress, introw, gCstChListColPosPinAddress, grdCHList)

                                .Cells(gCstChListColPosStatusIn).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                .Cells(gCstChListColPosUnit).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyUnitName, introw, gCstChListColPosUnit, grdCHList)

                                .Cells(gCstChListColPosDelayHH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyDelayHH, introw, gCstChListColPosDelayHH, grdCHList)
                                .Cells(gCstChListColPosValueHH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyValueHH, introw, gCstChListColPosValueHH, grdCHList)
                                .Cells(gCstChListColPosExtGrHH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyExtGrHH, introw, gCstChListColPosExtGrHH, grdCHList)
                                .Cells(gCstChListColPosGrep1HH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep1HH, introw, gCstChListColPosGrep1HH, grdCHList)
                                .Cells(gCstChListColPosGrep2HH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep2HH, introw, gCstChListColPosGrep2HH, grdCHList)
                                .Cells(gCstChListColPosStaNmHH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyStaNmHH, introw, gCstChListColPosStaNmHH, grdCHList)

                                .Cells(gCstChListColPosDelayH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyDelayH, introw, gCstChListColPosDelayH, grdCHList)
                                .Cells(gCstChListColPosValueH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyValueH, introw, gCstChListColPosValueH, grdCHList)
                                .Cells(gCstChListColPosExtGrH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyExtGrH, introw, gCstChListColPosExtGrH, grdCHList)
                                .Cells(gCstChListColPosGrep1H).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep1H, introw, gCstChListColPosGrep1H, grdCHList)
                                .Cells(gCstChListColPosGrep2H).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep2H, introw, gCstChListColPosGrep2H, grdCHList)
                                .Cells(gCstChListColPosStaNmH).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyStaNmH, introw, gCstChListColPosStaNmH, grdCHList)

                                .Cells(gCstChListColPosDelayL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyDelayL, introw, gCstChListColPosDelayL, grdCHList)
                                .Cells(gCstChListColPosValueL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyValueL, introw, gCstChListColPosValueL, grdCHList)
                                .Cells(gCstChListColPosExtGrL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyExtGrL, introw, gCstChListColPosExtGrL, grdCHList)
                                .Cells(gCstChListColPosGrep1L).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep1L, introw, gCstChListColPosGrep1L, grdCHList)
                                .Cells(gCstChListColPosGrep2L).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep2L, introw, gCstChListColPosGrep2L, grdCHList)
                                .Cells(gCstChListColPosStaNmL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyStaNmL, introw, gCstChListColPosStaNmL, grdCHList)

                                .Cells(gCstChListColPosDelayLL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyDelayLL, introw, gCstChListColPosDelayLL, grdCHList)
                                .Cells(gCstChListColPosValueLL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyValueLL, introw, gCstChListColPosValueLL, grdCHList)
                                .Cells(gCstChListColPosExtGrLL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyExtGrLL, introw, gCstChListColPosExtGrLL, grdCHList)
                                .Cells(gCstChListColPosGrep1LL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep1LL, introw, gCstChListColPosGrep1LL, grdCHList)
                                .Cells(gCstChListColPosGrep2LL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep2LL, introw, gCstChListColPosGrep2LL, grdCHList)
                                .Cells(gCstChListColPosStaNmLL).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyStaNmLL, introw, gCstChListColPosStaNmLL, grdCHList)

                                .Cells(gCstChListColPosDelaySF).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyDelaySF, introw, gCstChListColPosDelaySF, grdCHList)
                                .Cells(gCstChListColPosValueSF).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyValueSF, introw, gCstChListColPosValueSF, grdCHList)
                                .Cells(gCstChListColPosExtGrSF).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyExtGrSF, introw, gCstChListColPosExtGrSF, grdCHList)
                                .Cells(gCstChListColPosGrep1SF).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep1SF, introw, gCstChListColPosGrep1SF, grdCHList)
                                .Cells(gCstChListColPosGrep2SF).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyGRep2SF, introw, gCstChListColPosGrep2SF, grdCHList)
                                .Cells(gCstChListColPosStaNmSF).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyStaNmSF, introw, gCstChListColPosStaNmSF, grdCHList)

                                .Cells(gCstChListColPosRangeType).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyRangeScale, introw, gCstChListColPosRangeType, grdCHList)
                                .Cells(gCstChListColPosRangeHi).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyRangeScale, introw, gCstChListColPosRangeHi, grdCHList)
                                .Cells(gCstChListColPosRangeLo).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyRangeScale, introw, gCstChListColPosRangeLo, grdCHList)
                                .Cells(gCstChListColPosNormalHi).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyRangeNormalHi, introw, gCstChListColPosNormalHi, grdCHList)
                                .Cells(gCstChListColPosNormalLo).Style.BackColor = gDummyGetBackColorGrid(mAnalogData.DummyRangeNormalLo, introw, gCstChListColPosNormalLo, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 2
                                '▼▼▼ 20110614 仮設定機能対応（デジタル） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                .Cells(gCstChListColPosExtGrH).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyExtG, introw, gCstChListColPosExtGrH, grdCHList)
                                .Cells(gCstChListColPosDelayH).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyDelay, introw, gCstChListColPosDelayH, grdCHList)
                                .Cells(gCstChListColPosGrep1H).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                .Cells(gCstChListColPosGrep2H).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                .Cells(gCstChListColPosFuAddress).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                .Cells(gCstChListColPosPortAddress).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                .Cells(gCstChListColPosPinAddress).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyFuAddress, introw, gCstChListColPosPinAddress, grdCHList)
                                .Cells(gCstChListColPosStatusIn).Style.BackColor = gDummyGetBackColorGrid(mDigitalData.DummyStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 3
                                '▼▼▼ 20110614 仮設定機能対応（モーター） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                'Ver2.0.2.0 ﾀﾞﾐｰ対応
                                .Cells(gCstChListColPosFuAddress).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                .Cells(gCstChListColPosPortAddress).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                .Cells(gCstChListColPosPinAddress).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFuAddress, introw, gCstChListColPosPinAddress, grdCHList)
                                ' 2014.01.14 Port、PinのDummy設定追加
                                .Cells(gCstChListColPosExtGrH).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyExtG, introw, gCstChListColPosExtGrH, grdCHList)
                                .Cells(gCstChListColPosGrep1H).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                .Cells(gCstChListColPosGrep2H).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                .Cells(gCstChListColPosDiStart).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFuAddress, introw, gCstChListColPosDiStart, grdCHList)
                                .Cells(gCstChListColPosPortDiStart).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFuAddress, introw, gCstChListColPosPortDiStart, grdCHList)
                                .Cells(gCstChListColPosPinDiStart).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFuAddress, introw, gCstChListColPosPinDiStart, grdCHList)

                                .Cells(gCstChListColPosDoStart).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyOutFuAddress, introw, gCstChListColPosDoStart, grdCHList)
                                .Cells(gCstChListColPosPortDoStart).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyOutFuAddress, introw, gCstChListColPosPortDoStart, grdCHList)
                                .Cells(gCstChListColPosPinDoStart).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyOutFuAddress, introw, gCstChListColPosPinDoStart, grdCHList)
                                .Cells(gCstChListColPosStatusOut).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)

                                mChDataGroup(introw).DummyOutStatus1 = mMotorData.DummyOutStatus1
                                mChDataGroup(introw).DummyOutStatus2 = mMotorData.DummyOutStatus2
                                mChDataGroup(introw).DummyOutStatus3 = mMotorData.DummyOutStatus3
                                mChDataGroup(introw).DummyOutStatus4 = mMotorData.DummyOutStatus4
                                mChDataGroup(introw).DummyOutStatus5 = mMotorData.DummyOutStatus5

                                .Cells(gCstChListColPosOutExtgH).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                .Cells(gCstChListColPosOutDelayH).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                .Cells(gCstChListColPosOutGrep1H).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                .Cells(gCstChListColPosOutGrep2H).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                .Cells(gCstChListColPosOutStatusH).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                .Cells(gCstChListColPosAlarmTimeup).Style.BackColor = gDummyGetBackColorGrid(mMotorData.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 4
                                '▼▼▼ 20110614 仮設定機能対応（バルブ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                ''DIの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO Then

                                    .Cells(gCstChListColPosExtGrH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyExtG, introw, gCstChListColPosExtGrH, grdCHList)
                                    .Cells(gCstChListColPosDelayH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyDelay, introw, gCstChListColPosDelayH, grdCHList)
                                    .Cells(gCstChListColPosGrep1H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                    .Cells(gCstChListColPosGrep2H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                    .Cells(gCstChListColPosDiStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFuAddress, introw, gCstChListColPosDiStart, grdCHList)
                                    .Cells(gCstChListColPosPortDiStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFuAddress, introw, gCstChListColPosPortDiStart, grdCHList)
                                    .Cells(gCstChListColPosPinDiStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFuAddress, introw, gCstChListColPosPinDiStart, grdCHList)
                                    .Cells(gCstChListColPosBitCount).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyBitCount, introw, gCstChListColPosBitCount, grdCHList)
                                    .Cells(gCstChListColPosStatusIn).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyStatusName, introw, gCstChListColPosStatusIn, grdCHList)

                                    mChDataGroup(introw).DummyCmpStatus1Delay = mValveData.DummyCmpStatus1Delay
                                    mChDataGroup(introw).DummyCmpStatus1ExtGr = mValveData.DummyCmpStatus1ExtGr
                                    mChDataGroup(introw).DummyCmpStatus1GRep1 = mValveData.DummyCmpStatus1GRep1
                                    mChDataGroup(introw).DummyCmpStatus1GRep2 = mValveData.DummyCmpStatus1GRep2
                                    mChDataGroup(introw).DummyCmpStatus1StaNm = mValveData.DummyCmpStatus1StaNm

                                    mChDataGroup(introw).DummyCmpStatus2Delay = mValveData.DummyCmpStatus2Delay
                                    mChDataGroup(introw).DummyCmpStatus2ExtGr = mValveData.DummyCmpStatus2ExtGr
                                    mChDataGroup(introw).DummyCmpStatus2GRep1 = mValveData.DummyCmpStatus2GRep1
                                    mChDataGroup(introw).DummyCmpStatus2GRep2 = mValveData.DummyCmpStatus2GRep2
                                    mChDataGroup(introw).DummyCmpStatus2StaNm = mValveData.DummyCmpStatus2StaNm

                                    mChDataGroup(introw).DummyCmpStatus3Delay = mValveData.DummyCmpStatus3Delay
                                    mChDataGroup(introw).DummyCmpStatus3ExtGr = mValveData.DummyCmpStatus3ExtGr
                                    mChDataGroup(introw).DummyCmpStatus3GRep1 = mValveData.DummyCmpStatus3GRep1
                                    mChDataGroup(introw).DummyCmpStatus3GRep2 = mValveData.DummyCmpStatus3GRep2
                                    mChDataGroup(introw).DummyCmpStatus3StaNm = mValveData.DummyCmpStatus3StaNm

                                    mChDataGroup(introw).DummyCmpStatus4Delay = mValveData.DummyCmpStatus4Delay
                                    mChDataGroup(introw).DummyCmpStatus4ExtGr = mValveData.DummyCmpStatus4ExtGr
                                    mChDataGroup(introw).DummyCmpStatus4GRep1 = mValveData.DummyCmpStatus4GRep1
                                    mChDataGroup(introw).DummyCmpStatus4GRep2 = mValveData.DummyCmpStatus4GRep2
                                    mChDataGroup(introw).DummyCmpStatus4StaNm = mValveData.DummyCmpStatus4StaNm

                                    mChDataGroup(introw).DummyCmpStatus5Delay = mValveData.DummyCmpStatus5Delay
                                    mChDataGroup(introw).DummyCmpStatus5ExtGr = mValveData.DummyCmpStatus5ExtGr
                                    mChDataGroup(introw).DummyCmpStatus5GRep1 = mValveData.DummyCmpStatus5GRep1
                                    mChDataGroup(introw).DummyCmpStatus5GRep2 = mValveData.DummyCmpStatus5GRep2
                                    mChDataGroup(introw).DummyCmpStatus5StaNm = mValveData.DummyCmpStatus5StaNm

                                    mChDataGroup(introw).DummyCmpStatus6Delay = mValveData.DummyCmpStatus6Delay
                                    mChDataGroup(introw).DummyCmpStatus6ExtGr = mValveData.DummyCmpStatus6ExtGr
                                    mChDataGroup(introw).DummyCmpStatus6GRep1 = mValveData.DummyCmpStatus6GRep1
                                    mChDataGroup(introw).DummyCmpStatus6GRep2 = mValveData.DummyCmpStatus6GRep2
                                    mChDataGroup(introw).DummyCmpStatus6StaNm = mValveData.DummyCmpStatus6StaNm

                                    mChDataGroup(introw).DummyCmpStatus7Delay = mValveData.DummyCmpStatus7Delay
                                    mChDataGroup(introw).DummyCmpStatus7ExtGr = mValveData.DummyCmpStatus7ExtGr
                                    mChDataGroup(introw).DummyCmpStatus7GRep1 = mValveData.DummyCmpStatus7GRep1
                                    mChDataGroup(introw).DummyCmpStatus7GRep2 = mValveData.DummyCmpStatus7GRep2
                                    mChDataGroup(introw).DummyCmpStatus7StaNm = mValveData.DummyCmpStatus7StaNm

                                    mChDataGroup(introw).DummyCmpStatus8Delay = mValveData.DummyCmpStatus8Delay
                                    mChDataGroup(introw).DummyCmpStatus8ExtGr = mValveData.DummyCmpStatus8ExtGr
                                    mChDataGroup(introw).DummyCmpStatus8GRep1 = mValveData.DummyCmpStatus8GRep1
                                    mChDataGroup(introw).DummyCmpStatus8GRep2 = mValveData.DummyCmpStatus8GRep2
                                    mChDataGroup(introw).DummyCmpStatus8StaNm = mValveData.DummyCmpStatus8StaNm

                                    mChDataGroup(introw).DummyCmpStatus9Delay = mValveData.DummyCmpStatus9Delay
                                    mChDataGroup(introw).DummyCmpStatus9ExtGr = mValveData.DummyCmpStatus9ExtGr
                                    mChDataGroup(introw).DummyCmpStatus9GRep1 = mValveData.DummyCmpStatus9GRep1
                                    mChDataGroup(introw).DummyCmpStatus9GRep2 = mValveData.DummyCmpStatus9GRep2
                                    mChDataGroup(introw).DummyCmpStatus9StaNm = mValveData.DummyCmpStatus9StaNm

                                End If

                                ''AIの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 Then

                                    .Cells(gCstChListColPosAiTerm).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFuAddress, introw, gCstChListColPosAiTerm, grdCHList)
                                    .Cells(gCstChListColPosPortAiTerm).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFuAddress, introw, gCstChListColPosPortAiTerm, grdCHList)
                                    .Cells(gCstChListColPosPinAiTerm).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFuAddress, introw, gCstChListColPosPinAiTerm, grdCHList)
                                    .Cells(gCstChListColPosStatusIn).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                    .Cells(gCstChListColPosUnit).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyUnitName, introw, gCstChListColPosUnit, grdCHList)

                                    .Cells(gCstChListColPosDelayHH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyDelayHH, introw, gCstChListColPosDelayHH, grdCHList)
                                    .Cells(gCstChListColPosValueHH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyValueHH, introw, gCstChListColPosValueHH, grdCHList)
                                    .Cells(gCstChListColPosExtGrHH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyExtGrHH, introw, gCstChListColPosExtGrHH, grdCHList)
                                    .Cells(gCstChListColPosGrep1HH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep1HH, introw, gCstChListColPosGrep1HH, grdCHList)
                                    .Cells(gCstChListColPosGrep2HH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep2HH, introw, gCstChListColPosGrep2HH, grdCHList)
                                    .Cells(gCstChListColPosStaNmHH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyStaNmHH, introw, gCstChListColPosStaNmHH, grdCHList)

                                    .Cells(gCstChListColPosDelayH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyDelayH, introw, gCstChListColPosDelayH, grdCHList)
                                    .Cells(gCstChListColPosValueH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyValueH, introw, gCstChListColPosValueH, grdCHList)
                                    .Cells(gCstChListColPosExtGrH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyExtGrH, introw, gCstChListColPosExtGrH, grdCHList)
                                    .Cells(gCstChListColPosGrep1H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep1H, introw, gCstChListColPosGrep1H, grdCHList)
                                    .Cells(gCstChListColPosGrep2H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep2H, introw, gCstChListColPosGrep2H, grdCHList)
                                    .Cells(gCstChListColPosStaNmH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyStaNmH, introw, gCstChListColPosStaNmH, grdCHList)

                                    .Cells(gCstChListColPosDelayL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyDelayL, introw, gCstChListColPosDelayL, grdCHList)
                                    .Cells(gCstChListColPosValueL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyValueL, introw, gCstChListColPosValueL, grdCHList)
                                    .Cells(gCstChListColPosExtGrL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyExtGrL, introw, gCstChListColPosExtGrL, grdCHList)
                                    .Cells(gCstChListColPosGrep1L).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep1L, introw, gCstChListColPosGrep1L, grdCHList)
                                    .Cells(gCstChListColPosGrep2L).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep2L, introw, gCstChListColPosGrep2L, grdCHList)
                                    .Cells(gCstChListColPosStaNmL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyStaNmL, introw, gCstChListColPosStaNmL, grdCHList)

                                    .Cells(gCstChListColPosDelayLL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyDelayLL, introw, gCstChListColPosDelayLL, grdCHList)
                                    .Cells(gCstChListColPosValueLL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyValueLL, introw, gCstChListColPosValueLL, grdCHList)
                                    .Cells(gCstChListColPosExtGrLL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyExtGrLL, introw, gCstChListColPosExtGrLL, grdCHList)
                                    .Cells(gCstChListColPosGrep1LL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep1LL, introw, gCstChListColPosGrep1LL, grdCHList)
                                    .Cells(gCstChListColPosGrep2LL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep2LL, introw, gCstChListColPosGrep2LL, grdCHList)
                                    .Cells(gCstChListColPosStaNmLL).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyStaNmLL, introw, gCstChListColPosStaNmLL, grdCHList)

                                    .Cells(gCstChListColPosDelaySF).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyDelaySF, introw, gCstChListColPosDelaySF, grdCHList)
                                    .Cells(gCstChListColPosValueSF).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyValueSF, introw, gCstChListColPosValueSF, grdCHList)
                                    .Cells(gCstChListColPosExtGrSF).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyExtGrSF, introw, gCstChListColPosExtGrSF, grdCHList)
                                    .Cells(gCstChListColPosGrep1SF).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep1SF, introw, gCstChListColPosGrep1SF, grdCHList)
                                    .Cells(gCstChListColPosGrep2SF).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyGRep2SF, introw, gCstChListColPosGrep2SF, grdCHList)
                                    .Cells(gCstChListColPosStaNmSF).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyStaNmSF, introw, gCstChListColPosStaNmSF, grdCHList)

                                    .Cells(gCstChListColPosRangeType).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeScale, introw, gCstChListColPosRangeType, grdCHList)
                                    .Cells(gCstChListColPosRangeHi).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeScale, introw, gCstChListColPosRangeHi, grdCHList)
                                    .Cells(gCstChListColPosRangeLo).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeScale, introw, gCstChListColPosRangeLo, grdCHList)
                                    .Cells(gCstChListColPosNormalHi).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeNormalHi, introw, gCstChListColPosNormalHi, grdCHList)
                                    .Cells(gCstChListColPosNormalLo).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeNormalLo, introw, gCstChListColPosNormalLo, grdCHList)

                                    .Cells(gCstChListColPosOutSp1).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummySp1, introw, gCstChListColPosOutSp1, grdCHList)
                                    .Cells(gCstChListColPosOutSp2).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummySp2, introw, gCstChListColPosOutSp2, grdCHList)
                                    .Cells(gCstChListColPosOutHys1).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyHysOpen, introw, gCstChListColPosOutHys1, grdCHList)
                                    .Cells(gCstChListColPosOutHys2).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyHysClose, introw, gCstChListColPosOutHys2, grdCHList)
                                    .Cells(gCstChListColPosOutSt).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummySmpTime, introw, gCstChListColPosOutSt, grdCHList)

                                End If

                                ''DOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDO Then

                                    .Cells(gCstChListColPosDoStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosDoStart, grdCHList)
                                    .Cells(gCstChListColPosPortDoStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosPortDoStart, grdCHList)
                                    .Cells(gCstChListColPosPinDoStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosPinDoStart, grdCHList)
                                    .Cells(gCstChListColPosBitCount).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutBitCount, introw, gCstChListColPosBitCount, grdCHList)
                                    .Cells(gCstChListColPosStatusOut).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)

                                    mChDataGroup(introw).DummyOutStatus1 = mValveData.DummyOutStatus1
                                    mChDataGroup(introw).DummyOutStatus2 = mValveData.DummyOutStatus2
                                    mChDataGroup(introw).DummyOutStatus3 = mValveData.DummyOutStatus3
                                    mChDataGroup(introw).DummyOutStatus4 = mValveData.DummyOutStatus4
                                    mChDataGroup(introw).DummyOutStatus5 = mValveData.DummyOutStatus5
                                    mChDataGroup(introw).DummyOutStatus6 = mValveData.DummyOutStatus6
                                    mChDataGroup(introw).DummyOutStatus7 = mValveData.DummyOutStatus7
                                    mChDataGroup(introw).DummyOutStatus8 = mValveData.DummyOutStatus8

                                    .Cells(gCstChListColPosOutExtgH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    .Cells(gCstChListColPosOutDelayH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    .Cells(gCstChListColPosOutGrep1H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    .Cells(gCstChListColPosOutGrep2H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    .Cells(gCstChListColPosOutStatusH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    .Cells(gCstChListColPosAlarmTimeup).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                End If

                                ''AOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAO_4_20 Then

                                    .Cells(gCstChListColPosAoTerm).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosAoTerm, grdCHList)
                                    .Cells(gCstChListColPosPortAoTerm).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosPortAoTerm, grdCHList)
                                    .Cells(gCstChListColPosPinAoTerm).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosPinAoTerm, grdCHList)
                                    .Cells(gCstChListColPosStatusOut).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)
                                    mChDataGroup(introw).DummyOutStatus1 = mValveData.DummyOutStatus1

                                    .Cells(gCstChListColPosOutSp1).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummySp1, introw, gCstChListColPosOutSp1, grdCHList)
                                    .Cells(gCstChListColPosOutSp2).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummySp2, introw, gCstChListColPosOutSp2, grdCHList)
                                    .Cells(gCstChListColPosOutHys1).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyHysOpen, introw, gCstChListColPosOutHys1, grdCHList)
                                    .Cells(gCstChListColPosOutHys2).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyHysClose, introw, gCstChListColPosOutHys2, grdCHList)
                                    .Cells(gCstChListColPosOutSt).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummySmpTime, introw, gCstChListColPosOutSt, grdCHList)

                                    .Cells(gCstChListColPosOutExtgH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    .Cells(gCstChListColPosOutDelayH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    .Cells(gCstChListColPosOutGrep1H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    .Cells(gCstChListColPosOutGrep2H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    .Cells(gCstChListColPosOutStatusH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    .Cells(gCstChListColPosAlarmTimeup).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                    .Cells(gCstChListColPosOutVar).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyVar, introw, gCstChListColPosOutVar, grdCHList)

                                    .Cells(gCstChListColPosUnit).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyUnitName, introw, gCstChListColPosUnit, grdCHList)
                                    .Cells(gCstChListColPosRangeType).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeScale, introw, gCstChListColPosRangeType, grdCHList)
                                    .Cells(gCstChListColPosRangeHi).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeScale, introw, gCstChListColPosRangeHi, grdCHList)
                                    .Cells(gCstChListColPosRangeLo).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyRangeScale, introw, gCstChListColPosRangeLo, grdCHList)

                                End If

                                ''Jacomの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom55 Then

                                    .Cells(gCstChListColPosOutExtgH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    .Cells(gCstChListColPosOutDelayH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    .Cells(gCstChListColPosOutGrep1H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    .Cells(gCstChListColPosOutGrep2H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    .Cells(gCstChListColPosOutStatusH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    .Cells(gCstChListColPosAlarmTimeup).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                End If

                                ''Extの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveExt Then

                                    .Cells(gCstChListColPosDoStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosDoStart, grdCHList)
                                    .Cells(gCstChListColPosPortDoStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosPortDoStart, grdCHList)
                                    .Cells(gCstChListColPosPinDoStart).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutFuAddress, introw, gCstChListColPosPinDoStart, grdCHList)
                                    .Cells(gCstChListColPosStatusOut).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyOutStatusType, introw, gCstChListColPosStatusOut, grdCHList)
                                    .Cells(gCstChListColPosOutExtgH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaExtGr, introw, gCstChListColPosOutExtgH, grdCHList)
                                    .Cells(gCstChListColPosOutDelayH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaDelay, introw, gCstChListColPosOutDelayH, grdCHList)
                                    .Cells(gCstChListColPosOutGrep1H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep1, introw, gCstChListColPosOutGrep1H, grdCHList)
                                    .Cells(gCstChListColPosOutGrep2H).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaGrep2, introw, gCstChListColPosOutGrep2H, grdCHList)
                                    .Cells(gCstChListColPosOutStatusH).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaStaNm, introw, gCstChListColPosOutStatusH, grdCHList)
                                    .Cells(gCstChListColPosAlarmTimeup).Style.BackColor = gDummyGetBackColorGrid(mValveData.DummyFaTimeV, introw, gCstChListColPosAlarmTimeup, grdCHList)

                                End If
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 5
                                '▼▼▼ 20110614 仮設定機能対応（コンポジット） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                .Cells(gCstChListColPosExtGrH).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyExtG, introw, gCstChListColPosExtGrH, grdCHList)
                                .Cells(gCstChListColPosDelayH).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyDelay, introw, gCstChListColPosDelayH, grdCHList)
                                .Cells(gCstChListColPosGrep1H).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                .Cells(gCstChListColPosGrep2H).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                .Cells(gCstChListColPosDiStart).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyFuAddress, introw, gCstChListColPosDiStart, grdCHList)
                                .Cells(gCstChListColPosPortDiStart).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyFuAddress, introw, gCstChListColPosPortDiStart, grdCHList)
                                .Cells(gCstChListColPosPinDiStart).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyFuAddress, introw, gCstChListColPosPinDiStart, grdCHList)
                                .Cells(gCstChListColPosBitCount).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyBitCount, introw, gCstChListColPosBitCount, grdCHList)
                                .Cells(gCstChListColPosStatusIn).Style.BackColor = gDummyGetBackColorGrid(mCompositeData.DummyStatusName, introw, gCstChListColPosStatusIn, grdCHList)

                                mChDataGroup(introw).DummyCmpStatus1Delay = mCompositeData.DummyCmpStatus1Delay
                                mChDataGroup(introw).DummyCmpStatus1ExtGr = mCompositeData.DummyCmpStatus1ExtGr
                                mChDataGroup(introw).DummyCmpStatus1GRep1 = mCompositeData.DummyCmpStatus1GRep1
                                mChDataGroup(introw).DummyCmpStatus1GRep2 = mCompositeData.DummyCmpStatus1GRep2
                                mChDataGroup(introw).DummyCmpStatus1StaNm = mCompositeData.DummyCmpStatus1StaNm

                                mChDataGroup(introw).DummyCmpStatus2Delay = mCompositeData.DummyCmpStatus2Delay
                                mChDataGroup(introw).DummyCmpStatus2ExtGr = mCompositeData.DummyCmpStatus2ExtGr
                                mChDataGroup(introw).DummyCmpStatus2GRep1 = mCompositeData.DummyCmpStatus2GRep1
                                mChDataGroup(introw).DummyCmpStatus2GRep2 = mCompositeData.DummyCmpStatus2GRep2
                                mChDataGroup(introw).DummyCmpStatus2StaNm = mCompositeData.DummyCmpStatus2StaNm

                                mChDataGroup(introw).DummyCmpStatus3Delay = mCompositeData.DummyCmpStatus3Delay
                                mChDataGroup(introw).DummyCmpStatus3ExtGr = mCompositeData.DummyCmpStatus3ExtGr
                                mChDataGroup(introw).DummyCmpStatus3GRep1 = mCompositeData.DummyCmpStatus3GRep1
                                mChDataGroup(introw).DummyCmpStatus3GRep2 = mCompositeData.DummyCmpStatus3GRep2
                                mChDataGroup(introw).DummyCmpStatus3StaNm = mCompositeData.DummyCmpStatus3StaNm

                                mChDataGroup(introw).DummyCmpStatus4Delay = mCompositeData.DummyCmpStatus4Delay
                                mChDataGroup(introw).DummyCmpStatus4ExtGr = mCompositeData.DummyCmpStatus4ExtGr
                                mChDataGroup(introw).DummyCmpStatus4GRep1 = mCompositeData.DummyCmpStatus4GRep1
                                mChDataGroup(introw).DummyCmpStatus4GRep2 = mCompositeData.DummyCmpStatus4GRep2
                                mChDataGroup(introw).DummyCmpStatus4StaNm = mCompositeData.DummyCmpStatus4StaNm

                                mChDataGroup(introw).DummyCmpStatus5Delay = mCompositeData.DummyCmpStatus5Delay
                                mChDataGroup(introw).DummyCmpStatus5ExtGr = mCompositeData.DummyCmpStatus5ExtGr
                                mChDataGroup(introw).DummyCmpStatus5GRep1 = mCompositeData.DummyCmpStatus5GRep1
                                mChDataGroup(introw).DummyCmpStatus5GRep2 = mCompositeData.DummyCmpStatus5GRep2
                                mChDataGroup(introw).DummyCmpStatus5StaNm = mCompositeData.DummyCmpStatus5StaNm

                                mChDataGroup(introw).DummyCmpStatus6Delay = mCompositeData.DummyCmpStatus6Delay
                                mChDataGroup(introw).DummyCmpStatus6ExtGr = mCompositeData.DummyCmpStatus6ExtGr
                                mChDataGroup(introw).DummyCmpStatus6GRep1 = mCompositeData.DummyCmpStatus6GRep1
                                mChDataGroup(introw).DummyCmpStatus6GRep2 = mCompositeData.DummyCmpStatus6GRep2
                                mChDataGroup(introw).DummyCmpStatus6StaNm = mCompositeData.DummyCmpStatus6StaNm

                                mChDataGroup(introw).DummyCmpStatus7Delay = mCompositeData.DummyCmpStatus7Delay
                                mChDataGroup(introw).DummyCmpStatus7ExtGr = mCompositeData.DummyCmpStatus7ExtGr
                                mChDataGroup(introw).DummyCmpStatus7GRep1 = mCompositeData.DummyCmpStatus7GRep1
                                mChDataGroup(introw).DummyCmpStatus7GRep2 = mCompositeData.DummyCmpStatus7GRep2
                                mChDataGroup(introw).DummyCmpStatus7StaNm = mCompositeData.DummyCmpStatus7StaNm

                                mChDataGroup(introw).DummyCmpStatus8Delay = mCompositeData.DummyCmpStatus8Delay
                                mChDataGroup(introw).DummyCmpStatus8ExtGr = mCompositeData.DummyCmpStatus8ExtGr
                                mChDataGroup(introw).DummyCmpStatus8GRep1 = mCompositeData.DummyCmpStatus8GRep1
                                mChDataGroup(introw).DummyCmpStatus8GRep2 = mCompositeData.DummyCmpStatus8GRep2
                                mChDataGroup(introw).DummyCmpStatus8StaNm = mCompositeData.DummyCmpStatus8StaNm

                                mChDataGroup(introw).DummyCmpStatus9Delay = mCompositeData.DummyCmpStatus9Delay
                                mChDataGroup(introw).DummyCmpStatus9ExtGr = mCompositeData.DummyCmpStatus9ExtGr
                                mChDataGroup(introw).DummyCmpStatus9GRep1 = mCompositeData.DummyCmpStatus9GRep1
                                mChDataGroup(introw).DummyCmpStatus9GRep2 = mCompositeData.DummyCmpStatus9GRep2
                                mChDataGroup(introw).DummyCmpStatus9StaNm = mCompositeData.DummyCmpStatus9StaNm
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 6
                                '▼▼▼ 20110614 仮設定機能対応（パルス） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ' 2014.01.14 Port、PinのDummy設定追加
                                .Cells(gCstChListColPosExtGrH).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyExtG, introw, gCstChListColPosExtGrH, grdCHList)
                                .Cells(gCstChListColPosDelayH).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyDelay, introw, gCstChListColPosDelayH, grdCHList)
                                .Cells(gCstChListColPosGrep1H).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyGroupRepose1, introw, gCstChListColPosGrep1H, grdCHList)
                                .Cells(gCstChListColPosGrep2H).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyGroupRepose2, introw, gCstChListColPosGrep2H, grdCHList)
                                .Cells(gCstChListColPosFuAddress).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyFuAddress, introw, gCstChListColPosFuAddress, grdCHList)
                                .Cells(gCstChListColPosPortAddress).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyFuAddress, introw, gCstChListColPosPortAddress, grdCHList)
                                .Cells(gCstChListColPosPinAddress).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyFuAddress, introw, gCstChListColPosPinAddress, grdCHList)
                                .Cells(gCstChListColPosUnit).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyUnitName, introw, gCstChListColPosUnit, grdCHList)
                                .Cells(gCstChListColPosStatusIn).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyStatusName, introw, gCstChListColPosStatusIn, grdCHList)
                                .Cells(gCstChListColPosValueH).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyAlarmValue, introw, gCstChListColPosValueH, grdCHList)
                                .Cells(gCstChListColPosStaNmH).Style.BackColor = gDummyGetBackColorGrid(mPulseData.DummyAlarmStatus, introw, gCstChListColPosStaNmH, grdCHList)
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
                        End Select
                    End With

                Case 4

                    With grdCHList.Rows(introw)

                        Select Case ChType

                            Case 1
                                '▼▼▼ 20110614 仮設定機能対応（アナログ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                mAnalogData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosFuAddress))
                                mAnalogData.DummyStatusName = gDummyCheckControl(.Cells(gCstChListColPosStatusIn))
                                mAnalogData.DummyUnitName = gDummyCheckControl(.Cells(gCstChListColPosUnit))

                                mAnalogData.DummyDelayHH = gDummyCheckControl(.Cells(gCstChListColPosDelayHH))
                                mAnalogData.DummyValueHH = gDummyCheckControl(.Cells(gCstChListColPosValueHH))
                                mAnalogData.DummyExtGrHH = gDummyCheckControl(.Cells(gCstChListColPosExtGrHH))
                                mAnalogData.DummyGRep1HH = gDummyCheckControl(.Cells(gCstChListColPosGrep1HH))
                                mAnalogData.DummyGRep2HH = gDummyCheckControl(.Cells(gCstChListColPosGrep2HH))
                                mAnalogData.DummyStaNmHH = gDummyCheckControl(.Cells(gCstChListColPosStaNmHH))

                                mAnalogData.DummyDelayH = gDummyCheckControl(.Cells(gCstChListColPosDelayH))
                                mAnalogData.DummyValueH = gDummyCheckControl(.Cells(gCstChListColPosValueH))
                                mAnalogData.DummyExtGrH = gDummyCheckControl(.Cells(gCstChListColPosExtGrH))
                                mAnalogData.DummyGRep1H = gDummyCheckControl(.Cells(gCstChListColPosGrep1H))
                                mAnalogData.DummyGRep2H = gDummyCheckControl(.Cells(gCstChListColPosGrep2H))
                                mAnalogData.DummyStaNmH = gDummyCheckControl(.Cells(gCstChListColPosStaNmH))

                                mAnalogData.DummyDelayL = gDummyCheckControl(.Cells(gCstChListColPosDelayL))
                                mAnalogData.DummyValueL = gDummyCheckControl(.Cells(gCstChListColPosValueL))
                                mAnalogData.DummyExtGrL = gDummyCheckControl(.Cells(gCstChListColPosExtGrL))
                                mAnalogData.DummyGRep1L = gDummyCheckControl(.Cells(gCstChListColPosGrep1L))
                                mAnalogData.DummyGRep2L = gDummyCheckControl(.Cells(gCstChListColPosGrep2L))
                                mAnalogData.DummyStaNmL = gDummyCheckControl(.Cells(gCstChListColPosStaNmL))

                                mAnalogData.DummyDelayLL = gDummyCheckControl(.Cells(gCstChListColPosDelayLL))
                                mAnalogData.DummyValueLL = gDummyCheckControl(.Cells(gCstChListColPosValueLL))
                                mAnalogData.DummyExtGrLL = gDummyCheckControl(.Cells(gCstChListColPosExtGrLL))
                                mAnalogData.DummyGRep1LL = gDummyCheckControl(.Cells(gCstChListColPosGrep1LL))
                                mAnalogData.DummyGRep2LL = gDummyCheckControl(.Cells(gCstChListColPosGrep2LL))
                                mAnalogData.DummyStaNmLL = gDummyCheckControl(.Cells(gCstChListColPosStaNmLL))

                                mAnalogData.DummyDelaySF = gDummyCheckControl(.Cells(gCstChListColPosDelaySF))
                                mAnalogData.DummyValueSF = gDummyCheckControl(.Cells(gCstChListColPosValueSF))
                                mAnalogData.DummyExtGrSF = gDummyCheckControl(.Cells(gCstChListColPosExtGrSF))
                                mAnalogData.DummyGRep1SF = gDummyCheckControl(.Cells(gCstChListColPosGrep1SF))
                                mAnalogData.DummyGRep2SF = gDummyCheckControl(.Cells(gCstChListColPosGrep2SF))
                                mAnalogData.DummyStaNmSF = gDummyCheckControl(.Cells(gCstChListColPosStaNmSF))

                                '' レンジ仮設定　2,3線式の場合はレンジタイプで判断    2014.05.19
                                If grdCHList(gCstChListColPosDataType, introw).Value >= gCstCodeChDataTypeAnalog2Pt And _
                                   grdCHList(gCstChListColPosDataType, introw).Value <= gCstCodeChDataTypeAnalog3Jpt Then  ''2,3線式
                                    mAnalogData.DummyRangeScale = gDummyCheckControl(.Cells(gCstChListColPosRangeType))
                                Else
                                    mAnalogData.DummyRangeScale = gDummyCheckControl(.Cells(gCstChListColPosRangeHi))
                                End If

                                mAnalogData.DummyRangeNormalHi = gDummyCheckControl(.Cells(gCstChListColPosNormalHi))
                                mAnalogData.DummyRangeNormalLo = gDummyCheckControl(.Cells(gCstChListColPosNormalLo))
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 2
                                '▼▼▼ 20110614 仮設定機能対応（デジタル） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                mDigitalData.DummyExtG = gDummyCheckControl(.Cells(gCstChListColPosExtGrH))
                                mDigitalData.DummyDelay = gDummyCheckControl(.Cells(gCstChListColPosDelayH))
                                mDigitalData.DummyGroupRepose1 = gDummyCheckControl(.Cells(gCstChListColPosGrep1H))
                                mDigitalData.DummyGroupRepose2 = gDummyCheckControl(.Cells(gCstChListColPosGrep2H))
                                mDigitalData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosFuAddress))
                                mDigitalData.DummyStatusName = gDummyCheckControl(.Cells(gCstChListColPosStatusIn))
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 3
                                '▼▼▼ 20110614 仮設定機能対応（モーター） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                mMotorData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosFuAddress))

                                mMotorData.DummyExtG = gDummyCheckControl(.Cells(gCstChListColPosExtGrH))
                                mMotorData.DummyGroupRepose1 = gDummyCheckControl(.Cells(gCstChListColPosGrep1H))
                                mMotorData.DummyGroupRepose2 = gDummyCheckControl(.Cells(gCstChListColPosGrep2H))
                                'mMotorData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosDiStart))

                                mMotorData.DummyOutFuAddress = gDummyCheckControl(.Cells(gCstChListColPosDoStart))
                                mMotorData.DummyOutStatusType = gDummyCheckControl(.Cells(gCstChListColPosStatusOut))

                                mMotorData.DummyOutStatus1 = mChDataGroup(introw).DummyOutStatus1
                                mMotorData.DummyOutStatus2 = mChDataGroup(introw).DummyOutStatus2
                                mMotorData.DummyOutStatus3 = mChDataGroup(introw).DummyOutStatus3
                                mMotorData.DummyOutStatus4 = mChDataGroup(introw).DummyOutStatus4
                                mMotorData.DummyOutStatus5 = mChDataGroup(introw).DummyOutStatus5

                                mMotorData.DummyFaExtGr = gDummyCheckControl(.Cells(gCstChListColPosOutExtgH))
                                mMotorData.DummyFaDelay = gDummyCheckControl(.Cells(gCstChListColPosOutDelayH))
                                mMotorData.DummyFaGrep1 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep1H))
                                mMotorData.DummyFaGrep2 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep2H))
                                mMotorData.DummyFaStaNm = gDummyCheckControl(.Cells(gCstChListColPosOutStatusH))
                                mMotorData.DummyFaTimeV = gDummyCheckControl(.Cells(gCstChListColPosAlarmTimeup))
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 4
                                '▼▼▼ 20110614 仮設定機能対応（バルブ） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                ''DIの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO Then

                                    mValveData.DummyExtG = gDummyCheckControl(.Cells(gCstChListColPosExtGrH))
                                    mValveData.DummyDelay = gDummyCheckControl(.Cells(gCstChListColPosDelayH))
                                    mValveData.DummyGroupRepose1 = gDummyCheckControl(.Cells(gCstChListColPosGrep1H))
                                    mValveData.DummyGroupRepose2 = gDummyCheckControl(.Cells(gCstChListColPosGrep2H))
                                    mValveData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosDiStart))
                                    mValveData.DummyBitCount = gDummyCheckControl(.Cells(gCstChListColPosBitCount))
                                    mValveData.DummyStatusName = gDummyCheckControl(.Cells(gCstChListColPosStatusIn))

                                    mValveData.DummyCmpStatus1ExtGr = mChDataGroup(introw).DummyCmpStatus1ExtGr
                                    mValveData.DummyCmpStatus1Delay = mChDataGroup(introw).DummyCmpStatus1Delay
                                    mValveData.DummyCmpStatus1GRep1 = mChDataGroup(introw).DummyCmpStatus1GRep1
                                    mValveData.DummyCmpStatus1GRep2 = mChDataGroup(introw).DummyCmpStatus1GRep2
                                    mValveData.DummyCmpStatus1StaNm = mChDataGroup(introw).DummyCmpStatus1StaNm

                                    mValveData.DummyCmpStatus2ExtGr = mChDataGroup(introw).DummyCmpStatus2ExtGr
                                    mValveData.DummyCmpStatus2Delay = mChDataGroup(introw).DummyCmpStatus2Delay
                                    mValveData.DummyCmpStatus2GRep1 = mChDataGroup(introw).DummyCmpStatus2GRep1
                                    mValveData.DummyCmpStatus2GRep2 = mChDataGroup(introw).DummyCmpStatus2GRep2
                                    mValveData.DummyCmpStatus2StaNm = mChDataGroup(introw).DummyCmpStatus2StaNm

                                    mValveData.DummyCmpStatus3ExtGr = mChDataGroup(introw).DummyCmpStatus3ExtGr
                                    mValveData.DummyCmpStatus3Delay = mChDataGroup(introw).DummyCmpStatus3Delay
                                    mValveData.DummyCmpStatus3GRep1 = mChDataGroup(introw).DummyCmpStatus3GRep1
                                    mValveData.DummyCmpStatus3GRep2 = mChDataGroup(introw).DummyCmpStatus3GRep2
                                    mValveData.DummyCmpStatus3StaNm = mChDataGroup(introw).DummyCmpStatus3StaNm

                                    mValveData.DummyCmpStatus4ExtGr = mChDataGroup(introw).DummyCmpStatus4ExtGr
                                    mValveData.DummyCmpStatus4Delay = mChDataGroup(introw).DummyCmpStatus4Delay
                                    mValveData.DummyCmpStatus4GRep1 = mChDataGroup(introw).DummyCmpStatus4GRep1
                                    mValveData.DummyCmpStatus4GRep2 = mChDataGroup(introw).DummyCmpStatus4GRep2
                                    mValveData.DummyCmpStatus4StaNm = mChDataGroup(introw).DummyCmpStatus4StaNm

                                    mValveData.DummyCmpStatus5ExtGr = mChDataGroup(introw).DummyCmpStatus5ExtGr
                                    mValveData.DummyCmpStatus5Delay = mChDataGroup(introw).DummyCmpStatus5Delay
                                    mValveData.DummyCmpStatus5GRep1 = mChDataGroup(introw).DummyCmpStatus5GRep1
                                    mValveData.DummyCmpStatus5GRep2 = mChDataGroup(introw).DummyCmpStatus5GRep2
                                    mValveData.DummyCmpStatus5StaNm = mChDataGroup(introw).DummyCmpStatus5StaNm

                                    mValveData.DummyCmpStatus6ExtGr = mChDataGroup(introw).DummyCmpStatus6ExtGr
                                    mValveData.DummyCmpStatus6Delay = mChDataGroup(introw).DummyCmpStatus6Delay
                                    mValveData.DummyCmpStatus6GRep1 = mChDataGroup(introw).DummyCmpStatus6GRep1
                                    mValveData.DummyCmpStatus6GRep2 = mChDataGroup(introw).DummyCmpStatus6GRep2
                                    mValveData.DummyCmpStatus6StaNm = mChDataGroup(introw).DummyCmpStatus6StaNm

                                    mValveData.DummyCmpStatus7ExtGr = mChDataGroup(introw).DummyCmpStatus7ExtGr
                                    mValveData.DummyCmpStatus7Delay = mChDataGroup(introw).DummyCmpStatus7Delay
                                    mValveData.DummyCmpStatus7GRep1 = mChDataGroup(introw).DummyCmpStatus7GRep1
                                    mValveData.DummyCmpStatus7GRep2 = mChDataGroup(introw).DummyCmpStatus7GRep2
                                    mValveData.DummyCmpStatus7StaNm = mChDataGroup(introw).DummyCmpStatus7StaNm

                                    mValveData.DummyCmpStatus8ExtGr = mChDataGroup(introw).DummyCmpStatus8ExtGr
                                    mValveData.DummyCmpStatus8Delay = mChDataGroup(introw).DummyCmpStatus8Delay
                                    mValveData.DummyCmpStatus8GRep1 = mChDataGroup(introw).DummyCmpStatus8GRep1
                                    mValveData.DummyCmpStatus8GRep2 = mChDataGroup(introw).DummyCmpStatus8GRep2
                                    mValveData.DummyCmpStatus8StaNm = mChDataGroup(introw).DummyCmpStatus8StaNm

                                    mValveData.DummyCmpStatus9ExtGr = mChDataGroup(introw).DummyCmpStatus9ExtGr
                                    mValveData.DummyCmpStatus9Delay = mChDataGroup(introw).DummyCmpStatus9Delay
                                    mValveData.DummyCmpStatus9GRep1 = mChDataGroup(introw).DummyCmpStatus9GRep1
                                    mValveData.DummyCmpStatus9GRep2 = mChDataGroup(introw).DummyCmpStatus9GRep2
                                    mValveData.DummyCmpStatus9StaNm = mChDataGroup(introw).DummyCmpStatus9StaNm

                                End If

                                ''AIの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 Then

                                    mValveData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosAiTerm))
                                    mValveData.DummyStatusName = gDummyCheckControl(.Cells(gCstChListColPosStatusIn))
                                    mValveData.DummyUnitName = gDummyCheckControl(.Cells(gCstChListColPosUnit))

                                    mValveData.DummyDelayHH = gDummyCheckControl(.Cells(gCstChListColPosDelayHH))
                                    mValveData.DummyValueHH = gDummyCheckControl(.Cells(gCstChListColPosValueHH))
                                    mValveData.DummyExtGrHH = gDummyCheckControl(.Cells(gCstChListColPosExtGrHH))
                                    mValveData.DummyGRep1HH = gDummyCheckControl(.Cells(gCstChListColPosGrep1HH))
                                    mValveData.DummyGRep2HH = gDummyCheckControl(.Cells(gCstChListColPosGrep2HH))
                                    mValveData.DummyStaNmHH = gDummyCheckControl(.Cells(gCstChListColPosStaNmHH))

                                    mValveData.DummyDelayH = gDummyCheckControl(.Cells(gCstChListColPosDelayH))
                                    mValveData.DummyValueH = gDummyCheckControl(.Cells(gCstChListColPosValueH))
                                    mValveData.DummyExtGrH = gDummyCheckControl(.Cells(gCstChListColPosExtGrH))
                                    mValveData.DummyGRep1H = gDummyCheckControl(.Cells(gCstChListColPosGrep1H))
                                    mValveData.DummyGRep2H = gDummyCheckControl(.Cells(gCstChListColPosGrep2H))
                                    mValveData.DummyStaNmH = gDummyCheckControl(.Cells(gCstChListColPosStaNmH))

                                    mValveData.DummyDelayL = gDummyCheckControl(.Cells(gCstChListColPosDelayL))
                                    mValveData.DummyValueL = gDummyCheckControl(.Cells(gCstChListColPosValueL))
                                    mValveData.DummyExtGrL = gDummyCheckControl(.Cells(gCstChListColPosExtGrL))
                                    mValveData.DummyGRep1L = gDummyCheckControl(.Cells(gCstChListColPosGrep1L))
                                    mValveData.DummyGRep2L = gDummyCheckControl(.Cells(gCstChListColPosGrep2L))
                                    mValveData.DummyStaNmL = gDummyCheckControl(.Cells(gCstChListColPosStaNmL))

                                    mValveData.DummyDelayLL = gDummyCheckControl(.Cells(gCstChListColPosDelayLL))
                                    mValveData.DummyValueLL = gDummyCheckControl(.Cells(gCstChListColPosValueLL))
                                    mValveData.DummyExtGrLL = gDummyCheckControl(.Cells(gCstChListColPosExtGrLL))
                                    mValveData.DummyGRep1LL = gDummyCheckControl(.Cells(gCstChListColPosGrep1LL))
                                    mValveData.DummyGRep2LL = gDummyCheckControl(.Cells(gCstChListColPosGrep2LL))
                                    mValveData.DummyStaNmLL = gDummyCheckControl(.Cells(gCstChListColPosStaNmLL))

                                    mValveData.DummyDelaySF = gDummyCheckControl(.Cells(gCstChListColPosDelaySF))
                                    mValveData.DummyValueSF = gDummyCheckControl(.Cells(gCstChListColPosValueSF))
                                    mValveData.DummyExtGrSF = gDummyCheckControl(.Cells(gCstChListColPosExtGrSF))
                                    mValveData.DummyGRep1SF = gDummyCheckControl(.Cells(gCstChListColPosGrep1SF))
                                    mValveData.DummyGRep2SF = gDummyCheckControl(.Cells(gCstChListColPosGrep2SF))
                                    mValveData.DummyStaNmSF = gDummyCheckControl(.Cells(gCstChListColPosStaNmSF))

                                    mValveData.DummyRangeScale = gDummyCheckControl(.Cells(gCstChListColPosRangeHi))
                                    mValveData.DummyRangeNormalHi = gDummyCheckControl(.Cells(gCstChListColPosNormalHi))
                                    mValveData.DummyRangeNormalLo = gDummyCheckControl(.Cells(gCstChListColPosNormalLo))

                                    mValveData.DummySp1 = gDummyCheckControl(.Cells(gCstChListColPosOutSp1))
                                    mValveData.DummySp2 = gDummyCheckControl(.Cells(gCstChListColPosOutSp2))
                                    mValveData.DummyHysOpen = gDummyCheckControl(.Cells(gCstChListColPosOutHys1))
                                    mValveData.DummyHysClose = gDummyCheckControl(.Cells(gCstChListColPosOutHys2))
                                    mValveData.DummySmpTime = gDummyCheckControl(.Cells(gCstChListColPosOutSt))

                                End If

                                ''DOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDI_DO _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_DO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveDO Then

                                    mValveData.DummyOutFuAddress = gDummyCheckControl(.Cells(gCstChListColPosDoStart))
                                    mValveData.DummyOutBitCount = gDummyCheckControl(.Cells(gCstChListColPosBitCount))
                                    mValveData.DummyOutStatusType = gDummyCheckControl(.Cells(gCstChListColPosStatusOut))

                                    mValveData.DummyOutStatus1 = mChDataGroup(introw).DummyOutStatus1
                                    mValveData.DummyOutStatus2 = mChDataGroup(introw).DummyOutStatus2
                                    mValveData.DummyOutStatus3 = mChDataGroup(introw).DummyOutStatus3
                                    mValveData.DummyOutStatus4 = mChDataGroup(introw).DummyOutStatus4
                                    mValveData.DummyOutStatus5 = mChDataGroup(introw).DummyOutStatus5
                                    mValveData.DummyOutStatus6 = mChDataGroup(introw).DummyOutStatus6
                                    mValveData.DummyOutStatus7 = mChDataGroup(introw).DummyOutStatus7
                                    mValveData.DummyOutStatus8 = mChDataGroup(introw).DummyOutStatus8

                                    mValveData.DummyFaExtGr = gDummyCheckControl(.Cells(gCstChListColPosOutExtgH))
                                    mValveData.DummyFaDelay = gDummyCheckControl(.Cells(gCstChListColPosOutDelayH))
                                    mValveData.DummyFaGrep1 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep1H))
                                    mValveData.DummyFaGrep2 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep2H))
                                    mValveData.DummyFaStaNm = gDummyCheckControl(.Cells(gCstChListColPosOutStatusH))
                                    mValveData.DummyFaTimeV = gDummyCheckControl(.Cells(gCstChListColPosAlarmTimeup))

                                End If

                                ''AOの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO1 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAI_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValvePT_AO2 _
                                Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveAO_4_20 Then

                                    mValveData.DummyOutFuAddress = gDummyCheckControl(.Cells(gCstChListColPosAoTerm))
                                    mValveData.DummyOutStatusType = gDummyCheckControl(.Cells(gCstChListColPosStatusOut))
                                    mValveData.DummyOutStatus1 = mChDataGroup(introw).DummyOutStatus1

                                    mValveData.DummySp1 = gDummyCheckControl(.Cells(gCstChListColPosOutSp1))
                                    mValveData.DummySp2 = gDummyCheckControl(.Cells(gCstChListColPosOutSp2))
                                    mValveData.DummyHysOpen = gDummyCheckControl(.Cells(gCstChListColPosOutHys1))
                                    mValveData.DummyHysClose = gDummyCheckControl(.Cells(gCstChListColPosOutHys2))
                                    mValveData.DummySmpTime = gDummyCheckControl(.Cells(gCstChListColPosOutSt))

                                    mValveData.DummyFaExtGr = gDummyCheckControl(.Cells(gCstChListColPosOutExtgH))
                                    mValveData.DummyFaDelay = gDummyCheckControl(.Cells(gCstChListColPosOutDelayH))
                                    mValveData.DummyFaGrep1 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep1H))
                                    mValveData.DummyFaGrep2 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep2H))
                                    mValveData.DummyFaStaNm = gDummyCheckControl(.Cells(gCstChListColPosOutStatusH))
                                    mValveData.DummyFaTimeV = gDummyCheckControl(.Cells(gCstChListColPosAlarmTimeup))

                                    mValveData.DummyVar = gDummyCheckControl(.Cells(gCstChListColPosOutVar))

                                    mValveData.DummyUnitName = gDummyCheckControl(.Cells(gCstChListColPosUnit))
                                    mValveData.DummyRangeScale = gDummyCheckControl(.Cells(gCstChListColPosRangeHi))

                                End If

                                ''Jacomの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom Or grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveJacom55 Then

                                    mValveData.DummyFaExtGr = gDummyCheckControl(.Cells(gCstChListColPosOutExtgH))
                                    mValveData.DummyFaDelay = gDummyCheckControl(.Cells(gCstChListColPosOutDelayH))
                                    mValveData.DummyFaGrep1 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep1H))
                                    mValveData.DummyFaGrep2 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep2H))
                                    mValveData.DummyFaStaNm = gDummyCheckControl(.Cells(gCstChListColPosOutStatusH))
                                    mValveData.DummyFaTimeV = gDummyCheckControl(.Cells(gCstChListColPosAlarmTimeup))

                                End If

                                ''Extの処理
                                If grdCHList(gCstChListColPosDataType, introw).Value = gCstCodeChDataTypeValveExt Then

                                    mValveData.DummyOutFuAddress = gDummyCheckControl(.Cells(gCstChListColPosDoStart))
                                    mValveData.DummyOutStatusType = gDummyCheckControl(.Cells(gCstChListColPosStatusOut))
                                    mValveData.DummyFaExtGr = gDummyCheckControl(.Cells(gCstChListColPosOutExtgH))
                                    mValveData.DummyFaDelay = gDummyCheckControl(.Cells(gCstChListColPosOutDelayH))
                                    mValveData.DummyFaGrep1 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep1H))
                                    mValveData.DummyFaGrep2 = gDummyCheckControl(.Cells(gCstChListColPosOutGrep2H))
                                    mValveData.DummyFaStaNm = gDummyCheckControl(.Cells(gCstChListColPosOutStatusH))
                                    mValveData.DummyFaTimeV = gDummyCheckControl(.Cells(gCstChListColPosAlarmTimeup))

                                End If
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 5
                                '▼▼▼ 20110614 仮設定機能対応（コンポジット） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                mCompositeData.DummyExtG = gDummyCheckControl(.Cells(gCstChListColPosExtGrH))
                                mCompositeData.DummyDelay = gDummyCheckControl(.Cells(gCstChListColPosDelayH))
                                mCompositeData.DummyGroupRepose1 = gDummyCheckControl(.Cells(gCstChListColPosGrep1H))
                                mCompositeData.DummyGroupRepose2 = gDummyCheckControl(.Cells(gCstChListColPosGrep2H))
                                mCompositeData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosDiStart))
                                mCompositeData.DummyBitCount = gDummyCheckControl(.Cells(gCstChListColPosBitCount))
                                mCompositeData.DummyStatusName = gDummyCheckControl(.Cells(gCstChListColPosStatusIn))

                                mCompositeData.DummyCmpStatus1ExtGr = mChDataGroup(introw).DummyCmpStatus1ExtGr
                                mCompositeData.DummyCmpStatus1Delay = mChDataGroup(introw).DummyCmpStatus1Delay
                                mCompositeData.DummyCmpStatus1GRep1 = mChDataGroup(introw).DummyCmpStatus1GRep1
                                mCompositeData.DummyCmpStatus1GRep2 = mChDataGroup(introw).DummyCmpStatus1GRep2
                                mCompositeData.DummyCmpStatus1StaNm = mChDataGroup(introw).DummyCmpStatus1StaNm

                                mCompositeData.DummyCmpStatus2ExtGr = mChDataGroup(introw).DummyCmpStatus2ExtGr
                                mCompositeData.DummyCmpStatus2Delay = mChDataGroup(introw).DummyCmpStatus2Delay
                                mCompositeData.DummyCmpStatus2GRep1 = mChDataGroup(introw).DummyCmpStatus2GRep1
                                mCompositeData.DummyCmpStatus2GRep2 = mChDataGroup(introw).DummyCmpStatus2GRep2
                                mCompositeData.DummyCmpStatus2StaNm = mChDataGroup(introw).DummyCmpStatus2StaNm

                                mCompositeData.DummyCmpStatus3ExtGr = mChDataGroup(introw).DummyCmpStatus3ExtGr
                                mCompositeData.DummyCmpStatus3Delay = mChDataGroup(introw).DummyCmpStatus3Delay
                                mCompositeData.DummyCmpStatus3GRep1 = mChDataGroup(introw).DummyCmpStatus3GRep1
                                mCompositeData.DummyCmpStatus3GRep2 = mChDataGroup(introw).DummyCmpStatus3GRep2
                                mCompositeData.DummyCmpStatus3StaNm = mChDataGroup(introw).DummyCmpStatus3StaNm

                                mCompositeData.DummyCmpStatus4ExtGr = mChDataGroup(introw).DummyCmpStatus4ExtGr
                                mCompositeData.DummyCmpStatus4Delay = mChDataGroup(introw).DummyCmpStatus4Delay
                                mCompositeData.DummyCmpStatus4GRep1 = mChDataGroup(introw).DummyCmpStatus4GRep1
                                mCompositeData.DummyCmpStatus4GRep2 = mChDataGroup(introw).DummyCmpStatus4GRep2
                                mCompositeData.DummyCmpStatus4StaNm = mChDataGroup(introw).DummyCmpStatus4StaNm

                                mCompositeData.DummyCmpStatus5ExtGr = mChDataGroup(introw).DummyCmpStatus5ExtGr
                                mCompositeData.DummyCmpStatus5Delay = mChDataGroup(introw).DummyCmpStatus5Delay
                                mCompositeData.DummyCmpStatus5GRep1 = mChDataGroup(introw).DummyCmpStatus5GRep1
                                mCompositeData.DummyCmpStatus5GRep2 = mChDataGroup(introw).DummyCmpStatus5GRep2
                                mCompositeData.DummyCmpStatus5StaNm = mChDataGroup(introw).DummyCmpStatus5StaNm

                                mCompositeData.DummyCmpStatus6ExtGr = mChDataGroup(introw).DummyCmpStatus6ExtGr
                                mCompositeData.DummyCmpStatus6Delay = mChDataGroup(introw).DummyCmpStatus6Delay
                                mCompositeData.DummyCmpStatus6GRep1 = mChDataGroup(introw).DummyCmpStatus6GRep1
                                mCompositeData.DummyCmpStatus6GRep2 = mChDataGroup(introw).DummyCmpStatus6GRep2
                                mCompositeData.DummyCmpStatus6StaNm = mChDataGroup(introw).DummyCmpStatus6StaNm

                                mCompositeData.DummyCmpStatus7ExtGr = mChDataGroup(introw).DummyCmpStatus7ExtGr
                                mCompositeData.DummyCmpStatus7Delay = mChDataGroup(introw).DummyCmpStatus7Delay
                                mCompositeData.DummyCmpStatus7GRep1 = mChDataGroup(introw).DummyCmpStatus7GRep1
                                mCompositeData.DummyCmpStatus7GRep2 = mChDataGroup(introw).DummyCmpStatus7GRep2
                                mCompositeData.DummyCmpStatus7StaNm = mChDataGroup(introw).DummyCmpStatus7StaNm

                                mCompositeData.DummyCmpStatus8ExtGr = mChDataGroup(introw).DummyCmpStatus8ExtGr
                                mCompositeData.DummyCmpStatus8Delay = mChDataGroup(introw).DummyCmpStatus8Delay
                                mCompositeData.DummyCmpStatus8GRep1 = mChDataGroup(introw).DummyCmpStatus8GRep1
                                mCompositeData.DummyCmpStatus8GRep2 = mChDataGroup(introw).DummyCmpStatus8GRep2
                                mCompositeData.DummyCmpStatus8StaNm = mChDataGroup(introw).DummyCmpStatus8StaNm

                                mCompositeData.DummyCmpStatus9ExtGr = mChDataGroup(introw).DummyCmpStatus9ExtGr
                                mCompositeData.DummyCmpStatus9Delay = mChDataGroup(introw).DummyCmpStatus9Delay
                                mCompositeData.DummyCmpStatus9GRep1 = mChDataGroup(introw).DummyCmpStatus9GRep1
                                mCompositeData.DummyCmpStatus9GRep2 = mChDataGroup(introw).DummyCmpStatus9GRep2
                                mCompositeData.DummyCmpStatus9StaNm = mChDataGroup(introw).DummyCmpStatus9StaNm
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲

                            Case 6
                                '▼▼▼ 20110614 仮設定機能対応（パルス） ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
                                mPulseData.DummyExtG = gDummyCheckControl(.Cells(gCstChListColPosExtGrH))
                                mPulseData.DummyDelay = gDummyCheckControl(.Cells(gCstChListColPosDelayH))
                                mPulseData.DummyGroupRepose1 = gDummyCheckControl(.Cells(gCstChListColPosGrep1H))
                                mPulseData.DummyGroupRepose2 = gDummyCheckControl(.Cells(gCstChListColPosGrep2H))
                                mPulseData.DummyFuAddress = gDummyCheckControl(.Cells(gCstChListColPosFuAddress))
                                mPulseData.DummyUnitName = gDummyCheckControl(.Cells(gCstChListColPosUnit))
                                mPulseData.DummyStatusName = gDummyCheckControl(.Cells(gCstChListColPosStatusIn))
                                mPulseData.DummyAlarmValue = gDummyCheckControl(.Cells(gCstChListColPosValueH))
                                mPulseData.DummyAlarmStatus = gDummyCheckControl(.Cells(gCstChListColPosStaNmH))
                                '▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
                        End Select

                    End With

            End Select


        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try

    End Sub

#End Region

#Region "CH保存前の入力確認"

#Region "チャンネルリスト保存前の入力確認(共通)"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納前のチェック処理
    ' 返り値    : 入力が正しい値かどうか(True/False)
    ' 引き数    : チャンネルリスト1行分
    ' 機能説明  : 行毎のグリッド入力状態を確認する
    '--------------------------------------------------------------------
    Public Function SetInputDataChk(ByVal gCommonCont() As String, ByVal gRow As Integer) As Integer

        '重度エラー
        blnInputErrFlg = False

        '注意喚起
        blnInputCautionFlg = False

        If gCommonCont(gCstChListColPosChNo) = 6627 Then
            Dim a As Integer = 0
        End If

        Try
            ''CHTypeが設定されていない場合は未処理
            If Not gCommonCont(gCstChListColPosChType) = "" Then

                ''1SysNo
                If Not (gCommonCont(gCstChListColPosSysNo) = "0" Or gCommonCont(gCstChListColPosSysNo) = "1" Or gCommonCont(gCstChListColPosSysNo) = "2") Then
                    grdCHList(gCstChListColPosSysNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "E", "SysNo", "Not 0 or 1 or 2")

                End If

                ''2CH No ----------------------------------------
                If Not IsNumeric(gCommonCont(gCstChListColPosChNo)) Or gCommonCont(gCstChListColPosChNo) = "0000" Or gCommonCont(gCstChListColPosChNo) = "00000" Or gCommonCont(gCstChListColPosChNo) = Nothing Then
                    grdCHList(gCstChListColPosChNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True


                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "E", "CHNo", "Not Numeric")
                End If

                ''3Tag No ---------------------------------------
                Call SetInputChk_Length(gCommonCont, gCstChListColPosTagRow, gRow, "Tag", 16)

                ''4CH Name --------------------------------------
                Call SetInputChk_Length(gCommonCont, gCstChListColPosItemName, gRow, "CHName", 30)
                'Ver2.0.0.2 英文設定なのに ２バイト文字列が使われてたら警告
                If gudt.SetSystem.udtSysSystem.shtLanguage = 0 Then
                    Dim str As String = gCommonCont(gCstChListColPosItemName).ToString.Trim
                    Dim enc As System.Text.Encoding = System.Text.Encoding.GetEncoding(932)
                    If str.Length <> enc.GetByteCount(str) Then
                        '全角文字あり 
                        grdCHList(gCstChListColPosItemName, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "W", "CHName", "Used 2Byte Char")
                    End If
                End If


                ''5Device Status --------------------------------
                If Not gCommonCont(gCstChListColPosStatusIn) = Nothing Then

                End If

                '確認するチャンネルがWorkChで設定されているか確認
                strWKCH = Val(gCommonCont(gCstChListColPosFlagWK))

                'チャンネルタイプ分岐
                Select Case Val(gCommonCont(gCstChListColPosChType))

                    Case gCstCodeChTypeAnalog                                   'アナログ
                        Call SetAnalogInputDataChk(gCommonCont, gRow)

                    Case gCstCodeChTypeDigital                                  'デジタル
                        Call SetDigitalInputDataChk(gCommonCont, gRow)

                    Case gCstCodeChTypePulse                                    'パルス
                        Call SetPulseInputDataChk(gCommonCont, gRow)

                    Case gCstCodeChTypeComposite                                'コンポジット
                        'Ver2.0.0.2 現在コメント化
                        'Call SetCompInputDataChk(gCommonCont, gRow)

                    Case gCstCodeChTypeMotor                                    'モーター
                        Call SetMotorInputDataChk(gCommonCont, gRow)

                    Case gCstCodeChTypeValve                                    'バルブ
                        'Ver2.0.0.2 現在コメント化
                        'Call SetValveInputDataChk(gCommonCont, gRow)

                End Select

            End If

            'エラー無し
            If blnInputErrFlg = False Then
                If blnInputCautionFlg = True Then
                    SetInputDataChk = 10
                Else
                    SetInputDataChk = 0
                End If
            Else
                SetInputDataChk = 20
            End If
        Catch ex As Exception
            Call gOutputErrorLog(gMakeExceptionInfo(System.Reflection.MethodBase.GetCurrentMethod, ex.Message))
        End Try
    End Function

#End Region

#Region "チャンネルリスト保存前の入力確認(アナログ)"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納前のチェック処理(アナログ)
    ' 返り値    : 入力が正しい値かどうか(True/False)
    ' 引き数    : チャンネルリスト1行分
    ' 機能説明  : 行毎のグリッド入力状態を確認する
    '--------------------------------------------------------------------
    Public Function SetAnalogInputDataChk(ByVal gCommonCont() As String, ByVal gRow As Integer) As Integer

        Dim blnAnalogErr As Boolean = False
        Dim blnAnalogCaution As Boolean = False

        ''6RangeLo ----------------------------------------
        gstrChListWarningTemp = "RangeLO"
        Call SetInputChk_str(gCommonCont, gCstChListColPosRangeLo, gRow, "", Nothing, 1)

        ''7RangeHi ----------------------------------------
        gstrChListWarningTemp = "RangeHi"
        Call SetInputChk_str(gCommonCont, gCstChListColPosRangeHi, gRow, "", Nothing, 1)

        'レンジ大小比較
        gstrChListWarningTemp = "RangeHiLo"
        Call SetInputChk_RengeSet(gCommonCont, gCstChListColPosRangeHi, gCstChListColPosRangeLo, gRow)

        'Ver2.0.2.4
        '2,3線式でRangeType外は重度エラー
        If gCommonCont(gCstChListColPosDataType) >= gCstCodeChDataTypeAnalog2Pt And _
                                   gCommonCont(gCstChListColPosDataType) <= gCstCodeChDataTypeAnalog3Jpt Then
            Dim strLoRange As String = ""
            Dim strHiRange As String = ""
            Dim strRangeType As String = ""
            Dim intValue As Integer = -1
            If IsNumeric(gCommonCont(gCstChListColPosRangeLo)) = True Then
                strLoRange = CInt(gCommonCont(gCstChListColPosRangeLo))
            End If
            If IsNumeric(gCommonCont(gCstChListColPosRangeHi)) = True Then
                strHiRange = CInt(gCommonCont(gCstChListColPosRangeHi))
            End If
            strRangeType = strLoRange & " - " & strHiRange
            intValue = cmbRangeType.FindStringExact(strRangeType)
            If intValue < 0 Then
                grdCHList(gCstChListColPosRangeLo, gRow).Style.BackColor = Color.Red
                grdCHList(gCstChListColPosRangeHi, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
                gstrChListWarningTemp = "RangeHiLo"
                Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Range is not RangeType")
            End If
        End If

        '少数点以下桁数確認
        'Call SetInputChk_RengeSet(gCommonCont, gCstChListColPosRangeHi, gCstChListColPosRangeLo, gRow)

        ''8Unit ----------------------------------------- 
        Call SetInputChk_Length(gCommonCont, gCstChListColPosUnit, gRow, "Unit", 8)

        'Ver2.0.1.2 GR2で未入力時自動でゼロを格納する処理は削除

        ''10ALM2(H) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

            'ALM2(H) EX 0～24範囲外はエラー
            gstrChListWarningTemp = "ALM H EX"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosExtGrH, gRow, 0, 24, "E")

            ''9ALM2(H) SET ----------------------------------
            gstrChListWarningTemp = "ALM H SET"
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 2)

            ''11ALM2(H) DLY ----------------------------------
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 2)

            'Ver2.0.0.2
            'ALM2(H) DLY 0～240範囲外はエラー
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosDelayH, gRow, 0, 240, "E")


            ''12ALM2(H) GR1 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR1"
            '未入力は自動で0を入れる
            Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep1H, gRow)
            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep1H, gRow, 0, 48, "E")

            ''13ALM2(H) GR2 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR2"

            'Ver2.0.1.2 自動で0を入れるとおかしくなるので削除
            '未入力は自動で0を入れる
            'Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep2H, gRow)

            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep2H, gRow, 0, 48, "E")

            'Ver2.0.1.2 自動で0を入れるとおかしくなるので削除
            ''GR1が0で、GR2が0以外なら注意喚起
            'If gCommonCont(gCstChListColPosGrep1H) = "0" And gCommonCont(gCstChListColPosGrep2H) <> 0 Then
            '    grdCHList(gCstChListColPosGrep2H, gRow).Style.BackColor = Color.Yellow
            '    blnInputCautionFlg = True

            '    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
            '    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "GR1 is SET[0]")
            'End If


        Else
            ''9ALM2(H) SET ----------------------------------
            'Ver2.0.7.T アナログExGusRP(RP)はSET値があるよエラーはﾁｪｯｸしない
            If gCommonCont(gCstChListColPosDataType) = gCstCodeChDataTypeAnalogExhRepose Then
            Else
                gstrChListWarningTemp = "ALM H SET"
                Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 4)
            End If
            

            ''11ALM2(H) DLY ----------------------------------
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 4)


            ''12ALM2(H) GR1 ----------------------------------
            gstrChListWarningTemp = "ALM H GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

            ''13ALM2(H) GR2 ----------------------------------
            gstrChListWarningTemp = "ALM H GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
        End If

        ''15ALM3(L) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrL) <> Nothing Or gCommonCont(gCstChListColPosExtGrL) <> "" Then

            'ALM3(L) EX 0～24範囲外はエラー
            gstrChListWarningTemp = "ALM L EX"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosExtGrL, gRow, 0, 24, "E")

            ''14ALM3(L) SET ----------------------------------
            gstrChListWarningTemp = "ALM L SET"
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueL, gRow, "", Nothing, 2)

            ''16ALM3(L) DLY ----------------------------------
            gstrChListWarningTemp = "ALM L DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayL, gRow, "", Nothing, 2)

            'Ver2.0.0.2
            'ALM3(L) DLY 0～240範囲外はエラー
            gstrChListWarningTemp = "ALM L DLY"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosDelayL, gRow, 0, 240, "E")

            ''17ALM3(L) GR1 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1L, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM L GR1"
            '未入力は自動で0を入れる
            Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep1L, gRow)
            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep1L, gRow, 0, 48, "E")

            ''18ALM3(L) GR2 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2L, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM L GR2"

            'Ver2.0.1.2 自動で0を入れるとおかしくなるので削除
            '未入力は自動で0を入れる
            'Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep2L, gRow)

            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep2L, gRow, 0, 48, "E")
        Else
            ''14ALM3(L) SET ----------------------------------
            'Ver2.0.7.T アナログExGusRP(RP)はSET値があるよエラーはﾁｪｯｸしない
            If gCommonCont(gCstChListColPosDataType) = gCstCodeChDataTypeAnalogExhRepose Then
            Else
                gstrChListWarningTemp = "ALM L SET"
                Call SetInputChk_str(gCommonCont, gCstChListColPosValueL, gRow, "", Nothing, 4)
            End If
            

            ''16ALM3(L) DLY ----------------------------------
            gstrChListWarningTemp = "ALM L DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayL, gRow, "", Nothing, 4)

            ''17ALM3(L) GR1 ----------------------------------
            gstrChListWarningTemp = "ALM L GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1L, gRow, "", Nothing, 4)

            ''18ALM3(L) GR2 ----------------------------------
            gstrChListWarningTemp = "ALM L GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2L, gRow, "", Nothing, 4)
        End If

        ''24ALM1(HH) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrHH) <> Nothing Or gCommonCont(gCstChListColPosExtGrHH) <> "" Then

            'ALM1(HH) EX 0～24範囲外はエラー
            gstrChListWarningTemp = "ALM HH EX"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosExtGrHH, gRow, 0, 24, "E")

            ''23ALM1(HH) SET ----------------------------------
            gstrChListWarningTemp = "ALM HH SET"
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueHH, gRow, "", Nothing, 2)

            ''25ALM1(HH) DLY ----------------------------------
            gstrChListWarningTemp = "ALM HH DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayHH, gRow, "", Nothing, 2)

            'Ver2.0.0.2
            'ALM1(HH) DLY 0～240範囲外はエラー
            gstrChListWarningTemp = "ALM HH DLY"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosDelayHH, gRow, 0, 240, "E")

            ''26ALM1(HH) GR1 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1HH, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM HH GR1"
            '未入力は自動で0を入れる
            Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep1HH, gRow)
            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep1HH, gRow, 0, 48, "E")

            ''27ALM1(HH) GR2 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2HH, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM HH GR2"

            'Ver2.0.1.2 自動で0を入れるとおかしくなるので削除
            '未入力は自動で0を入れる
            'Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep2HH, gRow)

            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep2HH, gRow, 0, 48, "E")
        Else
            ''23ALM1(HH) SET ----------------------------------
            'Ver2.0.7.T アナログExGusRP(RP)はSET値があるよエラーはﾁｪｯｸしない
            If gCommonCont(gCstChListColPosDataType) = gCstCodeChDataTypeAnalogExhRepose Then
            Else
                gstrChListWarningTemp = "ALM HH SET"
                Call SetInputChk_str(gCommonCont, gCstChListColPosValueHH, gRow, "", Nothing, 4)
            End If
            

            ''25ALM1(HH) DLY ----------------------------------
            gstrChListWarningTemp = "ALM HH DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayHH, gRow, "", Nothing, 4)

            ''26ALM1(HH) GR1 ----------------------------------
            gstrChListWarningTemp = "ALM HH GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1HH, gRow, "", Nothing, 4)

            ''27ALM1(HH) GR2 ----------------------------------
            gstrChListWarningTemp = "ALM HH GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2HH, gRow, "", Nothing, 4)
        End If

        ''29ALM4(LL) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrLL) <> Nothing Or gCommonCont(gCstChListColPosExtGrLL) <> "" Then

            'ALM4(LL) EX 0～24範囲外はエラー
            gstrChListWarningTemp = "ALM LL EX"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosExtGrLL, gRow, 0, 24, "E")

            ''28ALM4(LL) SET ----------------------------------
            gstrChListWarningTemp = "ALM LL SET"
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueLL, gRow, "", Nothing, 2)

            ''30ALM4(LL) DLY ----------------------------------
            gstrChListWarningTemp = "ALM LL DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayLL, gRow, "", Nothing, 2)

            'Ver2.0.0.2
            'ALM4(LL) DLY 0～240範囲外はエラー
            gstrChListWarningTemp = "ALM LL DLY"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosDelayLL, gRow, 0, 240, "E")

            ''31ALM4(LL) GR1 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1LL, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM LL GR1"
            '未入力は自動で0を入れる
            Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep1LL, gRow)
            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep1LL, gRow, 0, 48, "E")

            ''32ALM4(LL) GR2 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2LL, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM LL GR2"

            'Ver2.0.1.2 自動で0を入れるとおかしくなるので削除
            '未入力は自動で0を入れる
            'Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep2LL, gRow)

            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep2LL, gRow, 0, 48, "E")
        Else
            ''28ALM4(LL) SET ----------------------------------
            'Ver2.0.7.T アナログExGusRP(RP)はSET値があるよエラーはﾁｪｯｸしない
            If gCommonCont(gCstChListColPosDataType) = gCstCodeChDataTypeAnalogExhRepose Then
            Else
                gstrChListWarningTemp = "ALM LL SET"
                Call SetInputChk_str(gCommonCont, gCstChListColPosValueLL, gRow, "", Nothing, 4)
            End If
            

            ''30ALM4(LL) DLY ----------------------------------
            gstrChListWarningTemp = "ALM LL DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayLL, gRow, "", Nothing, 4)

            ''31ALM4(LL) GR1 ----------------------------------
            gstrChListWarningTemp = "ALM LL GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1LL, gRow, "", Nothing, 4)

            ''32ALM4(LL) GR2 ----------------------------------
            gstrChListWarningTemp = "ALM LL GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2LL, gRow, "", Nothing, 4)
        End If

        'Ver2.0.6.3
        'センサフェイルチェック
        ' ExGr,Dly両方が入力されてるなら、センサフラグON　は保存時に整合性をとるためﾁｪｯｸしない
        ' ExGr,Dly両方が未入力なら、センサフラグOFF　は保存時に整合性をとるためﾁｪｯｸしない
        ' ExGr,Dlyどちらか一方だけ入力されてる場合にエラー
        Dim blSFex As Boolean = False
        Dim blSFdly As Boolean = False
        If gCommonCont(gCstChListColPosExtGrSF) <> Nothing And gCommonCont(gCstChListColPosExtGrSF) <> "" Then
            blSFex = True
        End If
        If gCommonCont(gCstChListColPosDelaySF) <> Nothing And gCommonCont(gCstChListColPosDelaySF) <> "" Then
            blSFdly = True
        End If
        If (blSFex = True And blSFdly = True) Or _
            (blSFex = False And blSFdly = False) Then
            'どちらとも入力 or どちらとも未入力ならOK
        Else
            grdCHList(gCstChListColPosExtGrSF, gRow).Style.BackColor = Color.Red
            grdCHList(gCstChListColPosDelaySF, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True
            gstrChListWarningTemp = "SesorFail"
            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "SensorFail EX and DLY")
        End If



        'Ver2.0.0.2 DEL START
        ''33DataType ----------------------------------
        'Select Case Val(gCommonCont(gCstChListColPosDataType))

        '    Case gCstCodeChDataTypeAnalogK, gCstCodeChDataTypeAnalog2Pt, gCstCodeChDataTypeAnalog2Jpt, gCstCodeChDataTypeAnalog3Pt, _
        '        gCstCodeChDataTypeAnalog3Jpt, gCstCodeChDataTypeAnalog1_5v, gCstCodeChDataTypeAnalog4_20mA, gCstCodeChDataTypeAnalogPT4_20mA

        '        ''35FU No ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 20, "Input")

        '        ''36FU Port ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")

        '        ''37FU Pin ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 16, "Input")

        '    Case gCstCodeChDataTypeAnalogModbus, gCstCodeChDataTypeAnalogLatitude, gCstCodeChDataTypeAnalogLongitude

        '        ''35FU No ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")

        '        ''36FU Port ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")

        '        ''37FU Pin ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")

        'End Select
        'Ver2.0.0.2 DEL END

        'Ver2.0.0.2 WKとFU Adr
        'Ver2.0.0.2
        gstrChListWarningTemp = "WK"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagWK, gRow)
        'WK 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagWK, gRow, 0, 1, "E")
        'WK再格納
        strWKCH = Val(gCommonCont(gCstChListColPosFlagWK))

        'WKが立っている場合は、INPUT FU Adr=Clear
        'Ver2.0.1.2 WKが立っている場合はノーチェックとする
        'Ver2.0.1.5 ShareTyprがRemoto=2である場合もノーチェックとする
        'Ver2.0.2.7 WKが立っている場合は、空白じゃないなら重度エラー
        If gCommonCont(gCstChListColPosShareType) = 2 Then
            ''FU
            'gCommonCont(gCstChListColPosFuAddress) = ""
            'grdCHList(gCstChListColPosFuAddress, gRow).Value = ""
            ''PORT
            'gCommonCont(gCstChListColPosPortAddress) = ""
            'grdCHList(gCstChListColPosPortAddress, gRow).Value = ""
            ''PIN
            'gCommonCont(gCstChListColPosPinAddress) = ""
            'grdCHList(gCstChListColPosPinAddress, gRow).Value = ""
        Else
            If gCommonCont(gCstChListColPosFlagWK) = "1" Then
                'WKが立ってる
                '35FU No ----------------------------------
                gstrChListWarningTemp = "FU No"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosFuAddress, gRow)
                '36FU Port ----------------------------------
                gstrChListWarningTemp = "FU Port"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPortAddress, gRow)
                '37FU Pin ----------------------------------
                gstrChListWarningTemp = "FU Pin"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPinAddress, gRow)
            Else
                'WKが立っていない
                Select Case Val(gCommonCont(gCstChListColPosDataType))
                    Case gCstCodeChDataTypeAnalogExhAve, gCstCodeChDataTypeAnalogExhRepose, gCstCodeChDataTypeAnalogExtDev
                        'Exｶﾞｽは入力不可のためノーチェック
                    Case gCstCodeChDataTypeAnalogModbus, gCstCodeChDataTypeAnalogLatitude, gCstCodeChDataTypeAnalogLongitude
                        '通信、緯度、経度
                        ''35FU No ----------------------------------
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")
                        gstrChListWarningTemp = "FU Port"

                        If gCommonCont(gCstChListColPosPortAddress).Trim <> "" Then
                            If IsNumeric(gCommonCont(gCstChListColPosPortAddress)) Then
                                '数値
                                If Val(gCommonCont(gCstChListColPosPortAddress)) <> 51 And Val(gCommonCont(gCstChListColPosPortAddress)) <> 52 Then
                                    Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 1, 18)
                                End If
                            End If
                        End If

            ''37FU Pin ----------------------------------
            'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 16, "Input")
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 2, 3000)

                    Case gCstCodeChDataTypeAnalogJacom
                        ''35FU No ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")
                        gstrChListWarningTemp = "FU Port"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosPortAddress, gRow, 0, 0, "W")

                        ''37FU Pin ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")
                        '空白なら注意
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_str(gCommonCont, gCstChListColPosRangeLo, gRow, "", Nothing, 2)

                    Case gCstCodeChDataTypeAnalogJacom55
                        ''35FU No ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")
                        gstrChListWarningTemp = "FU Port"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosPortAddress, gRow, 51, 51, "W")

                        ''37FU Pin ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")
                        '空白なら注意
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_str(gCommonCont, gCstChListColPosRangeLo, gRow, "", Nothing, 2)

                    Case Else
                        ''35FU No ----------------------------------
                        'Ver2.0.1.5 FUNoは０ならﾁｪｯｸしない
                        If gCommonCont(gCstChListColPosFuAddress) <> "0" Then
                            gstrChListWarningTemp = "FU No"
                            Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosFuAddress, gRow, 3, 20)
                        End If

                        ''36FU Port ----------------------------------
                        gstrChListWarningTemp = "FU Port"
                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 3, 8)

                        ''37FU Pin ----------------------------------
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 3, 16)
                End Select
            End If
        End If

        ''38RL -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagRL, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "RL"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagRL, gRow)
        'RL 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagRL, gRow, 0, 1, "E")

        ''39Sensor Fail ----------------------------------
        'gCstChListColPosExtGrSF

        ''40Sensor Fail(Delay) ---------------------------
        'gCstChListColPosDelaySF

        ''41Remarks --------------------------------------
        Call SetInputChk_Length(gCommonCont, gCstChListColPosRemarks, gRow, "Remarks", 16)

        ''42ALARM LEVEL ----------------------------------
        'プルダウンのため本項目は入力チェックしない
        'Call SetInputChk_AlmLevl(gCommonCont, gCstChListColPosLRRow, gRow, 4)

        ''43RANGE NOR L ----------------------------------
        gstrChListWarningTemp = "NOR L"
        Call SetInputChk_NorRange(gCommonCont, gRow, gCstChListColPosNormalLo, gCstChListColPosRangeLo, gCstChListColPosValueL, 1)

        ''44RANGE NOR H ----------------------------------
        gstrChListWarningTemp = "NOR H"
        Call SetInputChk_NorRange(gCommonCont, gRow, gCstChListColPosNormalHi, gCstChListColPosRangeHi, gCstChListColPosValueH, 2)

        ''45DMY ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagDmy, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "DMY"
        'DMYは0を強制格納
        gCommonCont(gCstChListColPosFlagDmy) = 0
        grdCHList(gCstChListColPosFlagDmy, gRow).Value = 0

        ''46SC -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSC, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "SC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSC, gRow)
        'SC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSC, gRow, 0, 1, "E")

        ''47DLY -------------------------------------------
        'プルダウンのため本項目は入力チェックしない

        ''48EP -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagEP, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "EP"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagEP, gRow)
        'EP 0～0範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagEP, gRow, 0, 0, "W")

        ''49AC -------------------------------------------
        'Call SetInputChk_ACVal(gCommonCont, gCstChListColPosFlagAC, gRow, gCstChListColPosExtGrH, gCstChListColPosFlagSC)
        'Ver2.0.0.2
        gstrChListWarningTemp = "AC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagAC, gRow)
        'AC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagAC, gRow, 0, 1, "E")

        ''50PLC ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagPLC, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "PLC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagPLC, gRow)
        'PLC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagPLC, gRow, 0, 1, "E")

        ''51POWER FACTOR ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''52STRING ---------------------------------------
        'Call SetInputChk_String(gCommonCont, gCstChListColPosString, gRow, 8)
        'STRINGは0を強制格納
        gCommonCont(gCstChListColPosString) = 0
        grdCHList(gCstChListColPosString, gRow).Value = 0

        ''53CENTER GRAPH ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''54ECCFUNC(延長警報盤) --------------------------
        'プルダウンのため本項目は入力チェックしない

        ''55SIO -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSIO, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "SIO"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSIO, gRow)
        'SIO 0～511範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSIO, gRow, 0, 511, "E")

        ''56GWS -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagGWS, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "GWS"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagGWS, gRow)
        'GWS 0～255範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagGWS, gRow, 0, 255, "E")

        ''57COMMON CH SET --------------------------------- (シェアではない時 ：0) (Local :1) (Remote :2)
        gstrChListWarningTemp = "COMMON CH SET"
        Call SetInputChk_CommChNo(gCommonCont, gRow, gCstChListColPosShareType, gCstChListColPosShareChid, 100)

        If gCommonCont(gCstChListColPosStatusIn) = "" Then

            ''59ALM HH STATUS -------------------------------
            gstrChListWarningTemp = "HH STATUS"
            Call SetInputChk_STATUS(gCommonCont, gCstChListColPosExtGrHH, gCstChListColPosStaNmHH, gRow, 8)

            ''60ALM H STATUS -------------------------------
            gstrChListWarningTemp = "H STATUS"
            Call SetInputChk_STATUS(gCommonCont, gCstChListColPosExtGrH, gCstChListColPosStaNmH, gRow, 8)

            ''61ALM L STATUS -------------------------------
            gstrChListWarningTemp = "L STATUS"
            Call SetInputChk_STATUS(gCommonCont, gCstChListColPosExtGrL, gCstChListColPosStaNmL, gRow, 8)

            ''62ALM LL STATUS -------------------------------
            gstrChListWarningTemp = "LL STATUS"
            Call SetInputChk_STATUS(gCommonCont, gCstChListColPosExtGrLL, gCstChListColPosStaNmLL, gRow, 8)

            '４つ全てが空白の場合注意
            If (gCommonCont(gCstChListColPosStaNmHH) = "" Or gCommonCont(gCstChListColPosStaNmHH) = Nothing) And _
                (gCommonCont(gCstChListColPosStaNmH) = "" Or gCommonCont(gCstChListColPosStaNmH) = Nothing) And _
                (gCommonCont(gCstChListColPosStaNmL) = "" Or gCommonCont(gCstChListColPosStaNmL) = Nothing) And _
                (gCommonCont(gCstChListColPosStaNmLL) = "" Or gCommonCont(gCstChListColPosStaNmLL) = Nothing) Then

                grdCHList(gCstChListColPosStaNmHH, gRow).Style.BackColor = Color.Yellow
                grdCHList(gCstChListColPosStaNmH, gRow).Style.BackColor = Color.Yellow
                grdCHList(gCstChListColPosStaNmL, gRow).Style.BackColor = Color.Yellow
                grdCHList(gCstChListColPosStaNmLL, gRow).Style.BackColor = Color.Yellow

                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", "HH STATUS", "ALL STATUS No Data")
                Call subSetChListWarningData(gRow, "W", "H STATUS", "ALL STATUS No Data")
                Call subSetChListWarningData(gRow, "W", "L STATUS", "ALL STATUS No Data")
                Call subSetChListWarningData(gRow, "W", "LL STATUS", "ALL STATUS No Data")
            End If
        End If

        ''63OFFSET -------------------------------
        'Ver2.0.2.6 空白は処理抜け
        If NZf(gCommonCont(gCstChListColPosOffset)) <> "" Then
            If Not IsNumeric(gCommonCont(gCstChListColPosOffset)) Then
                grdCHList(gCstChListColPosOffset, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "E", "OFFSET", "Not Numeric")
            Else
                '0以外は注意
                If Val(gCommonCont(gCstChListColPosOffset)) <> 0 Then
                    grdCHList(gCstChListColPosOffset, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True
                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", "OFFSET", "Not 0")
                End If
            End If
        End If

    End Function

#End Region

#Region "チャンネルリスト保存前の入力確認(デジタル)"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納前のチェック処理(デジタル)
    ' 返り値    : 入力が正しい値かどうか(True/False)
    ' 引き数    : チャンネルリスト1行分
    ' 機能説明  : 行毎のグリッド入力状態を確認する
    '--------------------------------------------------------------------
    Public Function SetDigitalInputDataChk(ByVal gCommonCont() As String, ByVal gRow As Integer) As Integer

        Dim blnDigitalErr As Boolean = False
        Dim blnDigitalCaution As Boolean = False

        ''10ALM2(H) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

            'ALM2(H) EX 0～24範囲外はエラー
            gstrChListWarningTemp = "ALM H EX"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosExtGrH, gRow, 0, 24, "E")

            ''11ALM2(H) DLY ----------------------------------
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 2)

            'Ver2.0.0.2
            'ALM2(H) DLY 0～240範囲外はエラー
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosDelayH, gRow, 0, 240, "E")


            ''12ALM2(H) GR1 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR1"
            '未入力は自動で0を入れる
            Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep1H, gRow)
            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep1H, gRow, 0, 48, "E")

            ''13ALM2(H) GR2 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR2"

            'Ver2.0.1.5 自動で0を入れるとおかしくなるので削除
            '未入力は自動で0を入れる
            'Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep2H, gRow)

            'ALM2(H) GR2 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep2H, gRow, 0, 48, "E")
            'GR1が0で、GR2が0以外なら注意喚起
            If gCommonCont(gCstChListColPosGrep1H) = "0" And gCommonCont(gCstChListColPosGrep2H) <> 0 Then
                grdCHList(gCstChListColPosGrep2H, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "GR1 is SET[0]")
            End If
        Else
            ''11ALM2(H) DLY ----------------------------------
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 4)

            'ACが1かつDLYが入っている場合、GR1,GR2をチェックしない
            If gCommonCont(gCstChListColPosFlagAC) = "1" And gCommonCont(gCstChListColPosDelayH) <> "" Then

            Else
                ''12ALM2(H) GR1 ----------------------------------
                gstrChListWarningTemp = "ALM H GR1"
                Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

                ''13ALM2(H) GR2 ----------------------------------
                gstrChListWarningTemp = "ALM H GR2"
                Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
            End If
        End If

        'Ver2.0.0.2 DEL START
        'Select Case Val(gCommonCont(gCstChListColPosDataType))

        '    Case gCstCodeChDataTypeDigitalNC, gCstCodeChDataTypeDigitalNO, gCstCodeChDataTypeDigitalExt

        '        ''35FU No ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 20, "Input")

        '        ''36FU Port ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")

        '        ''37FU Pin ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 64, "Input")

        '    Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO

        '        ''35FU No ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")

        '        ''36FU Port ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")

        '        ''37FU Pin ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")

        'End Select
        'Ver2.0.0.2 DEL END

        'Ver2.0.0.2 WKとFU Adr
        'Ver2.0.0.2
        gstrChListWarningTemp = "WK"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagWK, gRow)
        'WK 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagWK, gRow, 0, 1, "E")
        'WK再格納
        strWKCH = Val(gCommonCont(gCstChListColPosFlagWK))

        'WKが立っている場合は、INPUT FU Adr=Clear
        'Ver2.0.1.2 WKが立っている場合はノーチェックとする
        'Ver2.0.1.5 ShareTyprがRemoto=2である場合もノーチェックとする
        'Ver2.0.2.7 WKが立っている場合は、空白じゃないなら重度エラー
        If gCommonCont(gCstChListColPosShareType) = 2 Then
            ''FU
            'gCommonCont(gCstChListColPosFuAddress) = ""
            'grdCHList(gCstChListColPosFuAddress, gRow).Value = ""
            ''PORT
            'gCommonCont(gCstChListColPosPortAddress) = ""
            'grdCHList(gCstChListColPosPortAddress, gRow).Value = ""
            ''PIN
            'gCommonCont(gCstChListColPosPinAddress) = ""
            'grdCHList(gCstChListColPosPinAddress, gRow).Value = ""
        Else
            If gCommonCont(gCstChListColPosFlagWK) = "1" Then
                'WKが立ってる
                '35FU No ----------------------------------
                gstrChListWarningTemp = "FU No"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosFuAddress, gRow)
                '36FU Port ----------------------------------
                gstrChListWarningTemp = "FU Port"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPortAddress, gRow)
                '37FU Pin ----------------------------------
                gstrChListWarningTemp = "FU Pin"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPinAddress, gRow)
            Else
                'WKが立っていない
                Select Case Val(gCommonCont(gCstChListColPosDataType))

                    Case gCstCodeChDataTypeDigitalModbusNC, gCstCodeChDataTypeDigitalModbusNO
                        ''35FU No ----------------------------------
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")
                        gstrChListWarningTemp = "FU Port"

                        If gCommonCont(gCstChListColPosPortAddress).Trim <> "" Then
                            If IsNumeric(gCommonCont(gCstChListColPosPortAddress)) Then
                                '数値
                                If Val(gCommonCont(gCstChListColPosPortAddress)) <> 51 And Val(gCommonCont(gCstChListColPosPortAddress)) <> 52 Then
                                    Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 1, 18)
                                End If
                            End If
                        End If

                        ''37FU Pin ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 16, "Input")
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 2, 3000)

                    Case gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO
                        ''35FU No ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")
                        gstrChListWarningTemp = "FU Port"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosPortAddress, gRow, 0, 0, "W")

                        ''37FU Pin ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")
                        '空白なら注意
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_str(gCommonCont, gCstChListColPosPinAddress, gRow, "", Nothing, 2)
                    Case gCstCodeChDataTypeDigitalJacom55NC, gCstCodeChDataTypeDigitalJacom55NO
                        ''35FU No ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")
                        gstrChListWarningTemp = "FU Port"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosPortAddress, gRow, 51, 51, "W")

                        ''37FU Pin ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")
                        '空白なら注意
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_str(gCommonCont, gCstChListColPosPinAddress, gRow, "", Nothing, 2)
                    Case gCstCodeChDataTypeDigitalDeviceStatus
                        'チェックしない
                    Case Else
                        ''35FU No ----------------------------------
                        'Ver2.0.1.5 FUNoは０ならﾁｪｯｸしない
                        If gCommonCont(gCstChListColPosFuAddress) <> "0" Then
                            gstrChListWarningTemp = "FU No"
                            Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosFuAddress, gRow, 3, 20)
                        End If

                        ''36FU Port ----------------------------------
                        gstrChListWarningTemp = "FU Port"
                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 3, 8)

                        ''37FU Pin ----------------------------------
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 3, 64)
                End Select
            End If
        End If

        ''38RL -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagRL, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "RL"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagRL, gRow)
        'RL 0～0範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagRL, gRow, 0, 0, "E")

        ''41Remarks --------------------------------------
        Call SetInputChk_Length(gCommonCont, gCstChListColPosRemarks, gRow, "Remarks", 16)

        ''42ALARM LEVEL ----------------------------------
        'プルダウンのため本項目は入力チェックしない
        'Call SetInputChk_AlmLevl(gCommonCont, gCstChListColPosLRRow, gRow, 4)

        ''45DMY ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagDmy, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "DMY"
        'DMYは0を強制格納
        gCommonCont(gCstChListColPosFlagDmy) = 0
        grdCHList(gCstChListColPosFlagDmy, gRow).Value = 0

        ''46SC -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSC, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "SC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSC, gRow)
        'SC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSC, gRow, 0, 1, "E")

        ''47DLY -------------------------------------------
        'プルダウンのため本項目は入力チェックしない


        ''48EP -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagEP, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "EP"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagEP, gRow)
        'EP 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagEP, gRow, 0, 1, "E")

        ''49AC -------------------------------------------
        'Call SetInputChk_ACVal(gCommonCont, gCstChListColPosFlagAC, gRow, gCstChListColPosExtGrH, gCstChListColPosFlagSC)
        'Ver2.0.0.2
        gstrChListWarningTemp = "AC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagAC, gRow)
        'AC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagAC, gRow, 0, 1, "E")

        ''50PLC ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagPLC, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "PLC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagPLC, gRow)
        'PLC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagPLC, gRow, 0, 1, "E")



        ''54ECCFUNC(延長警報盤) --------------------------
        'プルダウンのため本項目は入力チェックしない

        ''55SIO -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSIO, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "SIO"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSIO, gRow)
        'SIO 0～511範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSIO, gRow, 0, 511, "E")

        ''56GWS -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagGWS, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "GWS"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagGWS, gRow)
        'GWS 0～255範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagGWS, gRow, 0, 255, "E")


        ''57COMMON CH SET --------------------------------- (シェアではない時 ：0) (Local :1) (Remote :2)
        gstrChListWarningTemp = "COMMON CH SET"
        Call SetInputChk_CommChNo(gCommonCont, gRow, gCstChListColPosShareType, gCstChListColPosShareChid, 100)


        '64FILTER
        'Select Case Val(gCommonCont(gCstChListColPosDataType))

        '    Case gCstCodeChDataTypeDigitalNC, gCstCodeChDataTypeDigitalNO, gCstCodeChDataTypeDigitalJacomNC, gCstCodeChDataTypeDigitalJacomNO, gCstCodeChDataTypeDigitalModbusNC, _
        '        gCstCodeChDataTypeDigitalModbusNO, gCstCodeChDataTypeDigitalExt

        '        Call SetInputChk_Filter(gCommonCont, gRow, gCstChListColPosFilterCoef, 250, 12)

        'End Select
        'gCstCodeChDataTypeDigitalDeviceStatus はフィルタ設定入力チェックを行わない
        If Val(gCommonCont(gCstChListColPosDataType)) <> gCstCodeChDataTypeDigitalDeviceStatus Then
            gstrChListWarningTemp = "FILTER"
            Call SetInputChk_Filter(gCommonCont, gRow, gCstChListColPosFilterCoef, 250, 12)
        End If

    End Function

#End Region

#Region "チャンネルリスト保存前の入力確認(パルス)"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納前のチェック処理(パルス)
    ' 返り値    : 入力が正しい値かどうか(True/False)
    ' 引き数    : チャンネルリスト1行分
    ' 機能説明  : 行毎のグリッド入力状態を確認する
    '--------------------------------------------------------------------
    Public Function SetPulseInputDataChk(ByVal gCommonCont() As String, ByVal gRow As Integer) As Integer

        Dim blnPulseErr As Boolean = False
        Dim blnPulseCaution As Boolean = False

        ''6RangeLo ----------------------------------------
        'Lo側は[0]固定なのでチェックしない

        ' ''7RangeHi ----------------------------------------
        'Call SetInputChk_str(gCommonCont, gCstChListColPosRangeHi, gRow, "", Nothing, 1)

        ''レンジHi側入力チェック(Lo側は0固定)
        'Dim intRangeHi As String = ""

        ''現在設定中の小数点桁数
        'Dim intDecmalPoint As Integer = Val(gCommonCont(gCstChListColPosDecimalPoint))

        ''予定されるデータ型
        'Dim strValueData As String

        ''データ種別から入力値の計算
        'Select Case Val(gCommonCont(gCstChListColPosDataType))

        '    Case gCstCodeChDataTypePulseTotal1_1, gCstCodeChDataTypePulseTotal1_10, gCstCodeChDataTypePulseTotal1_100, gCstCodeChDataTypePulseDay1_1, gCstCodeChDataTypePulseDay1_10, _
        '        gCstCodeChDataTypePulseDay1_100, gCstCodeChDataTypePulseExtDev, gCstCodeChDataTypePulseRevoTotalHour, gCstCodeChDataTypePulseRevoDayHour, gCstCodeChDataTypePulseRevoLapHour
        '        strValueData = 99999999 / 10 ^ intDecmalPoint
        '    Case Else
        '        strValueData = 9999959 / 10 ^ intDecmalPoint
        'End Select

        'If gCommonCont(gCstChListColPosRangeHi) <> "" Then
        '    intRangeHi = gCommonCont(gCstChListColPosRangeHi)

        '    If intRangeHi <> strValueData Then
        '        grdCHList(gCstChListColPosRangeHi, gRow).Style.BackColor = Color.Red
        '    End If
        'Else
        '    grdCHList(gCstChListColPosRangeHi, gRow).Style.BackColor = Color.Red
        'End If

        ''8Unit ----------------------------------------- 
        'Select Case Val(gCommonCont(gCstChListColPosDataType))

        '    Case gCstCodeChDataTypePulseTotal1_1, gCstCodeChDataTypePulseTotal1_10, gCstCodeChDataTypePulseTotal1_100, gCstCodeChDataTypePulseDay1_1, gCstCodeChDataTypePulseDay1_10, _
        '        gCstCodeChDataTypePulseDay1_100, gCstCodeChDataTypePulseExtDev, gCstCodeChDataTypePulseRevoTotalHour, gCstCodeChDataTypePulseRevoDayHour, gCstCodeChDataTypePulseRevoLapHour
        '        If gCommonCont(gCstChListColPosUnit) = "HR.M" Then
        '            grdCHList(gCstChListColPosUnit, gRow).Style.BackColor = Color.Yellow
        '        End If
        '    Case Else
        '        If gCommonCont(gCstChListColPosUnit) <> "HR.M" Then
        '            grdCHList(gCstChListColPosUnit, gRow).Style.BackColor = Color.Yellow
        '        End If
        'End Select

        ' ''8Unit ----------------------------------------- 
        'Ver2.0.3.1 Warningに変更
        'Call SetInputChk_Length(gCommonCont, gCstChListColPosUnit, gRow, "Unit", 8)
        gstrChListWarningTemp = "Unit"
        'Call SetInputChk_str(gCommonCont, gCstChListColPosUnit, gRow, "", Nothing, 1)
        Call SetInputChk_str(gCommonCont, gCstChListColPosUnit, gRow, "", Nothing, 2)

        ''10ALM2(H) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

            'ALM2(H) EX 0～24範囲外はエラー
            gstrChListWarningTemp = "ALM H EX"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosExtGrH, gRow, 0, 24, "E")

            ''9ALM2(H) SET ----------------------------------
            gstrChListWarningTemp = "ALM H SET"
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 2)

            ''11ALM2(H) DLY ----------------------------------
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 2)

            'Ver2.0.0.2
            'ALM2(H) DLY 0～240範囲外はエラー
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosDelayH, gRow, 0, 240, "E")


            ''12ALM2(H) GR1 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR1"
            '未入力は自動で0を入れる
            Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep1H, gRow)
            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep1H, gRow, 0, 48, "E")

            ''13ALM2(H) GR2 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR2"

            'Ver2.0.1.5 自動で0を入れるとおかしくなるので削除
            '未入力は自動で0を入れる
            'Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep2H, gRow)

            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep2H, gRow, 0, 48, "E")
            'GR1が0で、GR2が0以外なら注意喚起
            If gCommonCont(gCstChListColPosGrep1H) = "0" And gCommonCont(gCstChListColPosGrep2H) <> 0 Then
                grdCHList(gCstChListColPosGrep2H, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "GR1 is SET[0]")
            End If


        Else
            ''9ALM2(H) SET ----------------------------------
            gstrChListWarningTemp = "ALM H SET"
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 4)

            ''11ALM2(H) DLY ----------------------------------
            gstrChListWarningTemp = "ALM H DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 4)


            ''12ALM2(H) GR1 ----------------------------------
            gstrChListWarningTemp = "ALM H GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

            ''13ALM2(H) GR2 ----------------------------------
            gstrChListWarningTemp = "ALM H GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
        End If



        ''33DataType ----------------------------------
        'Ver2.0.0.2 DEL START
        'If gCommonCont(gCstChListColPosFlagWK) <> "1" Then

        '    Select Case Val(gCommonCont(gCstChListColPosDataType))

        '        Case gCstCodeChDataTypePulseExtDev

        '            ''35FU No ----------------------------------
        '            Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")

        '            ''36FU Port ----------------------------------
        '            Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")

        '            ''37FU Pin ----------------------------------
        '            Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")

        '        Case Else
        '            ''35FU No ----------------------------------
        '            Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 20, "Input")

        '            ''36FU Port ----------------------------------
        '            Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")

        '            ''37FU Pin ----------------------------------
        '            Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 64, "Input")
        '    End Select

        'Else
        '    'WK設定中のチャンネル
        '    ''35FU No ----------------------------------
        '    Call SetInputChk_str(gCommonCont, gCstChListColPosFuAddress, gRow, "", Nothing, 3)

        '    ''36FU Port ----------------------------------
        '    Call SetInputChk_str(gCommonCont, gCstChListColPosPortAddress, gRow, "", Nothing, 3)

        '    ''37FU Pin ----------------------------------
        '    Call SetInputChk_str(gCommonCont, gCstChListColPosPinAddress, gRow, "", Nothing, 3)
        'End If
        'Ver2.0.0.2 DEL END

        'Ver2.0.0.2 WKとFU Adr
        'Ver2.0.0.2
        gstrChListWarningTemp = "WK"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagWK, gRow)
        'WK 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagWK, gRow, 0, 1, "E")
        'WK再格納
        strWKCH = Val(gCommonCont(gCstChListColPosFlagWK))

        'WKが立っている場合は、INPUT FU Adr=Clear
        'Ver2.0.1.2 WKが立っている場合はノーチェックとする
        'Ver2.0.1.5 ShareTyprがRemoto=2である場合もノーチェックとする
        'Ver2.0.2.7 WKが立っている場合は、空白じゃないなら重度エラー
        If gCommonCont(gCstChListColPosShareType) = 2 Then
            ''FU
            'gCommonCont(gCstChListColPosFuAddress) = ""
            'grdCHList(gCstChListColPosFuAddress, gRow).Value = ""
            ''PORT
            'gCommonCont(gCstChListColPosPortAddress) = ""
            'grdCHList(gCstChListColPosPortAddress, gRow).Value = ""
            ''PIN
            'gCommonCont(gCstChListColPosPinAddress) = ""
            'grdCHList(gCstChListColPosPinAddress, gRow).Value = ""
        Else
            If gCommonCont(gCstChListColPosFlagWK) = "1" Then
                'WKが立ってる
                '35FU No ----------------------------------
                gstrChListWarningTemp = "FU No"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosFuAddress, gRow)
                '36FU Port ----------------------------------
                gstrChListWarningTemp = "FU Port"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPortAddress, gRow)
                '37FU Pin ----------------------------------
                gstrChListWarningTemp = "FU Pin"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPinAddress, gRow)
            Else
                'WKが立っていない
                Select Case Val(gCommonCont(gCstChListColPosDataType))

                    Case gCstCodeChDataTypePulseExtDev _
                        , gCstCodeChDataTypePulseRevoExtDev, gCstCodeChDataTypePulseRevoExtDevTotalMin _
                        , gCstCodeChDataTypePulseRevoExtDevDayHour, gCstCodeChDataTypePulseRevoExtDevDayMin _
                        , gCstCodeChDataTypePulseRevoExtDevLapHour, gCstCodeChDataTypePulseRevoExtDevLapMin
                        'Ver2.0.6.1 通信ﾁｬﾝﾈﾙが増えているため対応

                        'Ver2.0.2.0 通信ﾁｬﾝﾈﾙの場合Pinはﾁｪｯｸしない
                        ''35FU No ----------------------------------
                        If gCommonCont(gCstChListColPosFuAddress) <> "0" Then
                            gstrChListWarningTemp = "FU No"
                            Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosFuAddress, gRow, 3, 20)
                        End If

                        'Ver2.0.6.1 通信ﾁｬﾝﾈﾙの場合、Portもﾁｪｯｸしない
                        ''36FU Port ----------------------------------
                        'gstrChListWarningTemp = "FU Port"
                        'Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 3, 8)

                        '    ''35FU No ----------------------------------
                        '    gstrChListWarningTemp = "FU No"
                        '    '0外は警告
                        '    Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        '    ''36FU Port ----------------------------------
                        '    'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")
                        '    gstrChListWarningTemp = "FU Port"
                        '    Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 1, 18)

                        '    ''37FU Pin ----------------------------------
                        '    'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 16, "Input")
                        '    gstrChListWarningTemp = "FU Pin"
                        '    Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 2, 3000)

                        'Case gCstCodeChDataTypeValveJacom
                        '    ''35FU No ----------------------------------
                        '    'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")
                        '    gstrChListWarningTemp = "FU No"
                        '    '0外は警告
                        '    Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        '    ''36FU Port ----------------------------------
                        '    'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")
                        '    gstrChListWarningTemp = "FU Port"
                        '    '0外は警告
                        '    Call SetInputChk_int_Range(gCommonCont, gCstChListColPosPortAddress, gRow, 0, 0, "W")

                        '    ''37FU Pin ----------------------------------
                        '    'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")
                        '    '空白なら注意
                        '    gstrChListWarningTemp = "FU Pin"
                        '    Call SetInputChk_str(gCommonCont, gCstChListColPosRangeLo, gRow, "", Nothing, 2)
                    Case Else
                        ''35FU No ----------------------------------
                        'Ver2.0.1.5 FUNoは０ならﾁｪｯｸしない
                        If gCommonCont(gCstChListColPosFuAddress) <> "0" Then
                            gstrChListWarningTemp = "FU No"
                            Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosFuAddress, gRow, 3, 20)
                        End If

                        ''36FU Port ----------------------------------
                        gstrChListWarningTemp = "FU Port"

                        If gCommonCont(gCstChListColPosPortAddress).Trim <> "" Then
                            If IsNumeric(gCommonCont(gCstChListColPosPortAddress)) Then
                                '数値
                                If Val(gCommonCont(gCstChListColPosPortAddress)) <> 51 And Val(gCommonCont(gCstChListColPosPortAddress)) <> 52 Then
                                    Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 1, 18)
                                End If
                            End If
                        End If


                        ''37FU Pin ----------------------------------
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 3, 64)
                End Select
            End If
        End If



        ''38RL -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagRL, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "RL"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagRL, gRow)
        'RL 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagRL, gRow, 0, 1, "E")

        ''41Remarks --------------------------------------
        Call SetInputChk_Length(gCommonCont, gCstChListColPosRemarks, gRow, "Remarks", 16)

        ''42ALARM LEVEL ----------------------------------
        'プルダウンのため本項目は入力チェックしない
        'Call SetInputChk_AlmLevl(gCommonCont, gCstChListColPosLRRow, gRow, 4)

        ''45DMY ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagDmy, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "DMY"
        'DMYは0を強制格納
        gCommonCont(gCstChListColPosFlagDmy) = 0
        grdCHList(gCstChListColPosFlagDmy, gRow).Value = 0


        ''46SC -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSC, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "SC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSC, gRow)
        'SC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSC, gRow, 0, 1, "E")


        ''47DLY -------------------------------------------
        'プルダウンのため本項目は入力チェックしない

        ''48EP -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagEP, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "EP"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagEP, gRow)
        'EP 0～0範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagEP, gRow, 0, 0, "W")


        ''49AC -------------------------------------------
        'Call SetInputChk_ACVal(gCommonCont, gCstChListColPosFlagAC, gRow, gCstChListColPosExtGrH, gCstChListColPosFlagSC)
        'Ver2.0.0.2
        gstrChListWarningTemp = "AC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagAC, gRow)
        'AC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagAC, gRow, 0, 1, "E")


        ''50PLC ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagPLC, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "PLC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagPLC, gRow)
        'PLC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagPLC, gRow, 0, 1, "E")



        ''51POWER FACTOR ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''52STRING ---------------------------------------
        gstrChListWarningTemp = "STRING"
        Call SetInputChk_String(gCommonCont, gCstChListColPosString, gRow, 6)

        ''53CENTER GRAPH ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''54ECCFUNC(延長警報盤) --------------------------
        'プルダウンのため本項目は入力チェックしない

        ''55SIO -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSIO, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "SIO"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSIO, gRow)
        'SIO 0～511範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSIO, gRow, 0, 511, "E")


        ''56GWS -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagGWS, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "GWS"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagGWS, gRow)
        'GWS 0～255範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagGWS, gRow, 0, 255, "E")


        ''57COMMON CH SET --------------------------------- (シェアではない時 ：0) (Local :1) (Remote :2)
        gstrChListWarningTemp = "COMMON CH SET"
        Call SetInputChk_CommChNo(gCommonCont, gRow, gCstChListColPosShareType, gCstChListColPosShareChid, 100)



        If gCommonCont(gCstChListColPosStatusIn) = "" Then

            ''60ALM H STATUS -------------------------------
            gstrChListWarningTemp = "H STATUS"
            Call SetInputChk_STATUS(gCommonCont, gCstChListColPosExtGrH, gCstChListColPosStaNmH, gRow, 8)

            '空白の場合注意
            If (gCommonCont(gCstChListColPosStaNmH) = "" Or gCommonCont(gCstChListColPosStaNmH) = Nothing) Then

                grdCHList(gCstChListColPosStaNmH, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", "H STATUS", "STATUS No Data")
            End If

        End If

        ''64FILTER -------------------------------
        gstrChListWarningTemp = "FILTER"
        Call SetInputChk_Filter(gCommonCont, gRow, gCstChListColPosFilterCoef, 250, 2)

    End Function

#End Region

#Region "チャンネルリスト保存前の入力確認(コンポジット)"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納前のチェック処理(コンポジット)
    ' 返り値    : 入力が正しい値かどうか(True/False)
    ' 引き数    : チャンネルリスト1行分
    ' 機能説明  : 行毎のグリッド入力状態を確認する
    '--------------------------------------------------------------------
    Public Function SetCompInputDataChk(ByVal gCommonCont() As String, ByVal gRow As Integer) As Integer

        Dim blnCompErr As Boolean = False
        Dim blnCompCaution As Boolean = False

        ''10ALM2(H) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

            ''9ALM2(H) SET ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 2)

            ''11ALM2(H) DLY ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 2)

            ''12ALM2(H) GR1 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)

            ''13ALM2(H) GR2 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
        Else
            ''9ALM2(H) SET ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 4)

            ''11ALM2(H) DLY ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 4)

            ''12ALM2(H) GR1 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

            ''13ALM2(H) GR2 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
        End If

        ''38RL -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagRL, gRow)

        ''41Remarks --------------------------------------
        Call SetInputChk_Length(gCommonCont, gCstChListColPosRemarks, gRow, "Remarks", 16)

        ''42ALARM LEVEL ----------------------------------
        'プルダウンのため本項目は入力チェックしない
        'Call SetInputChk_AlmLevl(gCommonCont, gCstChListColPosLRRow, gRow, 4)

        ''45DMY ------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagDmy, gRow)

        ''46SC -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSC, gRow)

        ''47DLY -------------------------------------------
        'プルダウンのため本項目は入力チェックしない

        ''48EP -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagEP, gRow)

        ''49AC -------------------------------------------
        Call SetInputChk_ACVal(gCommonCont, gCstChListColPosFlagAC, gRow, gCstChListColPosExtGrH, gCstChListColPosFlagSC)

        ''50PLC ------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagPLC, gRow)

        ''50POWER FACTOR ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''52CENTER GRAPH ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''54ECCFUNC(延長警報盤) --------------------------
        'プルダウンのため本項目は入力チェックしない

        ''55SIO -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSIO, gRow)

        ''56GWS -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagGWS, gRow)

        ''57COMMON CH SET --------------------------------- (シェアではない時 ：0) (Local :1) (Remote :2)
        Call SetInputChk_CommChNo(gCommonCont, gRow, gCstChListColPosShareType, gCstChListColPosShareChid, 100)

        ''63FILTER -------------------------------
        Call SetInputChk_Filter(gCommonCont, gRow, gCstChListColPosFilterCoef, 250, 12)

        ''64COMPSITTE TABLE ------------------------
        If IsNumeric(gCommonCont(gCstChListColPosComposite)) Then
            If Val(gCommonCont(gCstChListColPosComposite)) > 64 Then
                grdCHList(gCstChListColPosComposite, gRow).Style.BackColor = Color.Red
                blnCompErr = True
                If Val(gCommonCont(gCstChListColPosComposite)) < 1 Then
                    grdCHList(gCstChListColPosComposite, gRow).Style.BackColor = Color.Red
                End If
            End If
        Else
            If gCommonCont(gCstChListColPosComposite) = "" Or gCommonCont(gCstChListColPosComposite) = Nothing Then
                grdCHList(gCstChListColPosFilterCoef, gRow).Style.BackColor = Color.Red
            End If
        End If

        ''69BITCOUNT ------------------------
        If IsNumeric(gCommonCont(gCstChListColPosBitCount)) Then
            If Val(gCommonCont(gCstChListColPosBitCount)) < 0 And Val(gCommonCont(gCstChListColPosBitCount)) > 8 Then
                grdCHList(gCstChListColPosBitCount, gRow).Style.BackColor = Color.Red
            End If
        Else
            If gCommonCont(gCstChListColPosComposite) = "" Or gCommonCont(gCstChListColPosComposite) = Nothing Then
                grdCHList(gCstChListColPosFilterCoef, gRow).Style.BackColor = Color.Yellow
            End If
        End If

    End Function

#End Region

#Region "チャンネルリスト保存前の入力確認(モーター)"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納前のチェック処理(モーター)
    ' 返り値    : 入力が正しい値かどうか(True/False)
    ' 引き数    : チャンネルリスト1行分
    ' 機能説明  : 行毎のグリッド入力状態を確認する
    '--------------------------------------------------------------------
    Public Function SetMotorInputDataChk(ByVal gCommonCont() As String, ByVal gRow As Integer) As Integer

        Dim blnMotorErr As Boolean = False
        Dim blnMotorCaution As Boolean = False


        ''10ALM2(H) EX ----------------------------------
        If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

            'DATA TYPE がモーターorJACOMの場合重度エラー 
            If Val(gCommonCont(gCstChListColPosDataType)) = gCstCodeChDataTypeMotorDevice Or _
                Val(gCommonCont(gCstChListColPosDataType)) = gCstCodeChDataTypeMotorDeviceJacom Or _
                Val(gCommonCont(gCstChListColPosDataType)) = gCstCodeChDataTypeMotorDeviceJacom55 Or _
                Val(gCommonCont(gCstChListColPosDataType)) = gCstCodeChDataTypeMotorRDevice Then

                grdCHList(gCstChListColPosDataType, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "E", "DATA TYPE", "No Motor")
            End If

            'ALM2(H) EX 0～24範囲外はエラー
            gstrChListWarningTemp = "ALM H EX"
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosExtGrH, gRow, 0, 24, "E")


            ''12ALM2(H) GR1 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR1"
            '未入力は自動で0を入れる
            Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep1H, gRow)
            'ALM2(H) GR1 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep1H, gRow, 0, 48, "E")

            ''13ALM2(H) GR2 ----------------------------------
            'Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
            'Ver2.0.0.2
            gstrChListWarningTemp = "ALM H GR2"

            'Ver2.0.1.5 自動で0を入れるとおかしくなるので削除
            '未入力は自動で0を入れる
            'Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosGrep2H, gRow)

            'ALM2(H) GR2 0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosGrep2H, gRow, 0, 48, "E")
            'GR1が0で、GR2が0以外なら注意喚起
            If gCommonCont(gCstChListColPosGrep1H) = "0" And gCommonCont(gCstChListColPosGrep2H) <> "0" Then
                grdCHList(gCstChListColPosGrep2H, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "GR1 is SET[0]")
            End If
        Else
            ''12ALM2(H) GR1 ----------------------------------
            gstrChListWarningTemp = "ALM H GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

            ''13ALM2(H) GR2 ----------------------------------
            gstrChListWarningTemp = "ALM H GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
        End If





        ''19FEEDBACK ALARM
        If gCommonCont(gCstChListColPosOutExtgH) <> Nothing Or gCommonCont(gCstChListColPosOutExtgH) <> "" Then

            ''20FBA DLY ----------------------------------
            gstrChListWarningTemp = "FBA DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutDelayH, gRow, "", Nothing, 2)
            '0～240範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosOutDelayH, gRow, 0, 240, "E")

            ''21FBA GR1 ----------------------------------
            gstrChListWarningTemp = "FBA GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep1H, gRow, "", Nothing, 2)
            '0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosOutGrep1H, gRow, 0, 48, "E")

            ''22FBA GR2 ----------------------------------
            gstrChListWarningTemp = "FBA GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep2H, gRow, "", Nothing, 2)
            '0～48範囲外はエラー
            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosOutGrep2H, gRow, 0, 48, "E")
            'GR1が0で、GR2が0以外なら注意喚起
            If (gCommonCont(gCstChListColPosOutGrep1H) = "0" Or gCommonCont(gCstChListColPosOutGrep1H) = "") _
                And _
                (gCommonCont(gCstChListColPosOutGrep2H) <> 0 And gCommonCont(gCstChListColPosOutGrep2H) <> "") Then
                grdCHList(gCstChListColPosGrep2H, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "GR1 is No SET")
            End If

            ''66FBA Timer --------------------------------
            gstrChListWarningTemp = "FBA Timer"
            Call SetInputChk_FeedBakTime(gCommonCont, gCstChListColPosAlarmTimeup, gCstChListColPosOutGrep2H, gRow, 600)

            ''88FBA STATUS --------------------------------
            Call SetInputChk_Length(gCommonCont, gCstChListColPosOutStatusH, gRow, "Status", 8)

        Else
            ''20FBA DLY ----------------------------------
            gstrChListWarningTemp = "FBA DLY"
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutDelayH, gRow, "", Nothing, 4)

            ''21FBA GR1 ----------------------------------
            gstrChListWarningTemp = "FBA GR1"
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep1H, gRow, "", Nothing, 4)

            ''22FBA GR2 ----------------------------------
            gstrChListWarningTemp = "FBA GR2"
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep2H, gRow, "", Nothing, 4)

            ''66FBA Timer --------------------------------
            gstrChListWarningTemp = "FBA Timer"
            If Not (gCommonCont(gCstChListColPosAlarmTimeup) = "" Or gCommonCont(gCstChListColPosAlarmTimeup) = Nothing Or gCommonCont(gCstChListColPosAlarmTimeup) = "0") Then
                grdCHList(gCstChListColPosAlarmTimeup, gRow).Style.BackColor = Color.Yellow

                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value is Not Input")
            End If

            ''88FBA STATUS --------------------------------
            gstrChListWarningTemp = "FBA STATUS"
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutStatusH, gRow, "", Nothing, 4)
        End If

        ''33Data Type ----------------------------------
        'Ver2.0.0.2 DEL START
        'Select Case Val(gCommonCont(gCstChListColPosDataType))

        '    Case gCstCodeChDataTypeMotorDevice

        '        ''35FU No ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 20, "Input")

        '        ''36FU Port ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")

        '        ''37FU Pin ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 64, "Input")

        '    Case gCstCodeChDataTypeMotorDeviceJacom

        '        ''37FU Pin ----------------------------------
        '        If IsNumeric(gCommonCont(gCstChListColPosPinAddress)) Then
        '            If Val(gCommonCont(gCstChListColPosPinAddress)) > 170 Then
        '                grdCHList(gCstChListColPosPinAddress, gRow).Style.BackColor = Color.Red
        '            End If
        '        Else
        '            If gCommonCont(gCstChListColPosPinAddress) <> "" Or gCommonCont(gCstChListColPosPinAddress) <> Nothing Then
        '                grdCHList(gCstChListColPosPinAddress, gRow).Style.BackColor = Color.Red
        '            Else
        '                grdCHList(gCstChListColPosPinAddress, gRow).Style.BackColor = Color.Yellow
        '            End If
        '        End If

        '    Case Else

        '        ''35FU No ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 20, "Input")

        '        ''36FU Port ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")

        '        ''37FU Pin ----------------------------------
        '        Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 64, "Input")

        'End Select
        'Ver2.0.0.2 DEL END

        'Ver2.0.0.2 WKとFU Adr
        'Ver2.0.0.2
        gstrChListWarningTemp = "WK"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagWK, gRow)
        'WK 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagWK, gRow, 0, 1, "E")
        'WK再格納
        strWKCH = Val(gCommonCont(gCstChListColPosFlagWK))

        'WKが立っている場合は、INPUT FU Adr=Clear
        'Ver2.0.1.2 WKが立っている場合はノーチェックとする
        'Ver2.0.1.5 ShareTyprがRemoto=2である場合もノーチェックとする
        'Ver2.0.2.7 WKが立っている場合は、空白じゃないなら重度エラー
        If gCommonCont(gCstChListColPosShareType) = 2 Then
            ''FU
            'gCommonCont(gCstChListColPosFuAddress) = ""
            'grdCHList(gCstChListColPosFuAddress, gRow).Value = ""
            ''PORT
            'gCommonCont(gCstChListColPosPortAddress) = ""
            'grdCHList(gCstChListColPosPortAddress, gRow).Value = ""
            ''PIN
            'gCommonCont(gCstChListColPosPinAddress) = ""
            'grdCHList(gCstChListColPosPinAddress, gRow).Value = ""
        Else
            If gCommonCont(gCstChListColPosFlagWK) = "1" Then
                'WKが立ってる
                '35FU No ----------------------------------
                gstrChListWarningTemp = "FU No"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosFuAddress, gRow)
                '36FU Port ----------------------------------
                gstrChListWarningTemp = "FU Port"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPortAddress, gRow)
                '37FU Pin ----------------------------------
                gstrChListWarningTemp = "FU Pin"
                Call SetInputChk_FUadrInput_WK(gCommonCont, gCstChListColPosPinAddress, gRow)
            Else
                'WKが立っていない
                Select Case Val(gCommonCont(gCstChListColPosDataType))

                    'Case gCstCodeChDataTypeAnalogExtDev
                    '    ''35FU No ----------------------------------
                    '    gstrChListWarningTemp = "FU No"
                    '    '0外は警告
                    '    Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                    '    ''36FU Port ----------------------------------
                    '    'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")
                    '    gstrChListWarningTemp = "FU Port"
                    '    Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 1, 18)

                    '    ''37FU Pin ----------------------------------
                    '    'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 16, "Input")
                    '    gstrChListWarningTemp = "FU Pin"
                    '    Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 2, 3000)

                    Case gCstCodeChDataTypeMotorDeviceJacom
                        ''35FU No ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")
                        gstrChListWarningTemp = "FU Port"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosPortAddress, gRow, 0, 0, "W")

                        ''37FU Pin ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")
                        '空白なら注意
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_str(gCommonCont, gCstChListColPosPinAddress, gRow, "", Nothing, 2)
                    Case gCstCodeChDataTypeMotorDeviceJacom55
                        ''35FU No ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 0, "Input")
                        gstrChListWarningTemp = "FU No"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                        ''36FU Port ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 18, "Input")
                        gstrChListWarningTemp = "FU Port"
                        '0外は警告
                        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosPortAddress, gRow, 51, 51, "W")

                        ''37FU Pin ----------------------------------
                        'Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 3000, "Input")
                        '空白なら注意
                        gstrChListWarningTemp = "FU Pin"
                        Call SetInputChk_str(gCommonCont, gCstChListColPosPinAddress, gRow, "", Nothing, 2)
                    Case Else
                        '' Ver2.0.8.9  2018.10.01 通信の場合の処理追加
                        If Val(gCommonCont(gCstChListColPosDataType)) >= gCstCodeChDataTypeMotorRManRun Then    '通信

                            ''35FU No ----------------------------------
                            gstrChListWarningTemp = "FU No"
                            '0外は警告
                            Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFuAddress, gRow, 0, 0, "W")

                            ''36FU Port ----------------------------------
                            gstrChListWarningTemp = "FU Port"

                            If gCommonCont(gCstChListColPosPortAddress).Trim <> "" Then
                                If IsNumeric(gCommonCont(gCstChListColPosPortAddress)) Then
                                    '数値
                                    If Val(gCommonCont(gCstChListColPosPortAddress)) <> 51 And Val(gCommonCont(gCstChListColPosPortAddress)) <> 52 Then
                                        Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 1, 18)
                                    End If
                                End If
                            End If

                            ''37FU Pin ----------------------------------
                            gstrChListWarningTemp = "FU Pin"
                            Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 2, 3000)

                        Else

                            ''35FU No ----------------------------------
                            'Ver2.0.1.5 FUNoは０ならﾁｪｯｸしない
                            If gCommonCont(gCstChListColPosFuAddress) <> "0" Then
                                gstrChListWarningTemp = "FU No"
                                Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosFuAddress, gRow, 3, 20)
                            End If

                            ''36FU Port ----------------------------------
                            gstrChListWarningTemp = "FU Port"
                            Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPortAddress, gRow, 3, 8)

                            ''37FU Pin ----------------------------------
                            gstrChListWarningTemp = "FU Pin"
                            Call SetInputChk_FUadrInput(gCommonCont, gCstChListColPosPinAddress, gRow, 3, 64)

                        End If
                        
                End Select
            End If
        End If




        ''38RL -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagRL, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "RL"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagRL, gRow)
        'RL 0～0範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagRL, gRow, 0, 0, "E")

        ''41Remarks --------------------------------------
        Call SetInputChk_Length(gCommonCont, gCstChListColPosRemarks, gRow, "Remarks", 16)

        ''42ALARM LEVEL ----------------------------------
        'プルダウンのため本項目は入力チェックしない
        'Call SetInputChk_AlmLevl(gCommonCont, gCstChListColPosLRRow, gRow, 4)

        ''45DMY ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagDmy, gRow)
        'Ver2.0.0.2
        gstrChListWarningTemp = "DMY"
        'DMYは0を強制格納
        gCommonCont(gCstChListColPosFlagDmy) = 0
        grdCHList(gCstChListColPosFlagDmy, gRow).Value = 0


        ''46SC -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSC, gRow)
        gstrChListWarningTemp = "SC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSC, gRow)
        'SC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSC, gRow, 0, 1, "E")

        ''47DLY -------------------------------------------
        'プルダウンのため本項目は入力チェックしない

        ''48EP -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagEP, gRow)
        gstrChListWarningTemp = "EP"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagEP, gRow)
        'EP 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagEP, gRow, 0, 1, "E")


        ''49AC -------------------------------------------
        'Call SetInputChk_ACVal(gCommonCont, gCstChListColPosFlagAC, gRow, gCstChListColPosExtGrH, gCstChListColPosFlagSC)
        gstrChListWarningTemp = "AC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagAC, gRow)
        'AC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagAC, gRow, 0, 1, "E")

        ''50PLC ------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagPLC, gRow)
        gstrChListWarningTemp = "PLC"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagPLC, gRow)
        'PLC 0～1範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagPLC, gRow, 0, 1, "E")

        ''50POWER FACTOR ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''52CENTER GRAPH ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''54ECCFUNC(延長警報盤) --------------------------
        'プルダウンのため本項目は入力チェックしない

        ''55SIO -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSIO, gRow)
        gstrChListWarningTemp = "SIO"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagSIO, gRow)
        'SIO 0～511範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagSIO, gRow, 0, 511, "E")

        ''56GWS -------------------------------------------
        'Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagGWS, gRow)
        gstrChListWarningTemp = "GWS"
        '未入力は自動で0を入れる
        Call SetInputChk_NoDataToZero(gCommonCont, gCstChListColPosFlagGWS, gRow)
        'GWS 0～255範囲外はエラー
        Call SetInputChk_int_Range(gCommonCont, gCstChListColPosFlagGWS, gRow, 0, 255, "E")


        ''57COMMON CH SET --------------------------------- (シェアではない時 ：0) (Local :1) (Remote :2)
        gstrChListWarningTemp = "COMMON CH SET"
        Call SetInputChk_CommChNo(gCommonCont, gRow, gCstChListColPosShareType, gCstChListColPosShareChid, 100)

        ''64FILTER -------------------------------
        gstrChListWarningTemp = "FILTER"
        Call SetInputChk_Filter(gCommonCont, gRow, gCstChListColPosFilterCoef, 250, 12)

        Dim blnOutputAddSet As Boolean = False
        'OUTPUTのアドレス設定があることを確認
        ''67OUTPUT FU No ----------------------------------
        If Not (gCommonCont(gCstChListColPosDoStart) = "" Or gCommonCont(gCstChListColPosDoStart) = Nothing) Then
            blnOutputAddSet = True
        End If

        ''68OUTPUT FU Port ----------------------------------
        If Not (gCommonCont(gCstChListColPosPortDoStart) = "" Or gCommonCont(gCstChListColPosPortDoStart) = Nothing) Then
            blnOutputAddSet = True
        End If

        ''69OUTPUT FU Pin ----------------------------------
        If Not (gCommonCont(gCstChListColPosPinDoStart) = "" Or gCommonCont(gCstChListColPosPinDoStart) = Nothing) Then
            blnOutputAddSet = True
        End If
        'Ver2.0.0.2 現在コメント化 START
        '' ''OUTPUTのアドレス設定があることを確認
        ' '' ''67OUTPUT FU No ----------------------------------
        ' ''If Not (gCommonCont(gCstChListColPosDoStart) = "" Or gCommonCont(gCstChListColPosDoStart) = Nothing) Then
        ' ''    blnOutputAddSet = True
        ' ''End If

        ' '' ''68OUTPUT FU Port ----------------------------------
        ' ''If Not (gCommonCont(gCstChListColPosPortDoStart) = "" Or gCommonCont(gCstChListColPosPortDoStart) = Nothing) Then
        ' ''    blnOutputAddSet = True
        ' ''End If

        ' '' ''69OUTPUT FU Pin ----------------------------------
        ' ''If Not (gCommonCont(gCstChListColPosPinDoStart) = "" Or gCommonCont(gCstChListColPosPinDoStart) = Nothing) Then
        ' ''    blnOutputAddSet = True
        ' ''End If

        '' ''OUTPUTアドレスとSTATUS OUTの設定条件で出力アドレスの確認を行う
        ' ''If blnOutputAddSet = True Or gCommonCont(gCstChListColPosStatusOut) <> gCstCodeChManualInputStatus.ToString Then

        ' ''    ''67OUTPUT FU No ----------------------------------
        ' ''    Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosDoStart, gRow, "", 20, "Output")

        ' ''    ''68OUTPUT FU Port ----------------------------------
        ' ''    Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortDoStart, gRow, "", 8, "Output")

        ' ''    ''69OUTPUT FU Pin ----------------------------------
        ' ''    Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinDoStart, gRow, "", 64, "Output")
        ' ''End If

        ' '' ''71Control Type
        ' ''If gCommonCont(gCstChListColPosControlType) = "2" Then
        ' ''    ''72PulseWidth
        ' ''    If IsNumeric(gCommonCont(gCstChListColPosPulseWidth)) Then

        ' ''        If Val(gCommonCont(gCstChListColPosPulseWidth)) < 1 And Val(gCommonCont(gCstChListColPosPulseWidth)) > 200 Then
        ' ''            grdCHList(gCstChListColPosPulseWidth, gRow).Style.BackColor = Color.Red
        ' ''        End If
        ' ''    Else
        ' ''        grdCHList(gCstChListColPosPulseWidth, gRow).Style.BackColor = Color.Red
        ' ''    End If
        ' ''Else
        ' ''    If gCommonCont(gCstChListColPosPulseWidth) <> "" Or gCommonCont(gCstChListColPosPulseWidth) <> Nothing Then
        ' ''        grdCHList(gCstChListColPosPulseWidth, gRow).Style.BackColor = Color.Red
        ' ''    End If
        ' ''End If
        'Ver2.0.0.2 現在コメント化 END

        ''73STATUS OUT
        'Ver2.0.2.0 出力ｱﾄﾞﾚｽが設定されてないならばﾁｪｯｸしない
        If blnOutputAddSet = True Then
            gstrChListWarningTemp = "STATUS OUT"
            Select Case Val(gCommonCont(gCstChListColPosDataType))

                Case gCstCodeChDataTypeMotorManRun, gCstCodeChDataTypeMotorAbnorRun
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRun, gRow)

                Case gCstCodeChDataTypeMotorManRunA, gCstCodeChDataTypeMotorAbnorRunA
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunA, gRow)

                Case gCstCodeChDataTypeMotorManRunB, gCstCodeChDataTypeMotorAbnorRunB
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunB, gRow)

                Case gCstCodeChDataTypeMotorManRunC, gCstCodeChDataTypeMotorAbnorRunC
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunC, gRow)

                Case gCstCodeChDataTypeMotorManRunD, gCstCodeChDataTypeMotorAbnorRunD
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunD, gRow)

                Case gCstCodeChDataTypeMotorManRunE, gCstCodeChDataTypeMotorAbnorRunE
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunE, gRow)

                Case gCstCodeChDataTypeMotorManRunF, gCstCodeChDataTypeMotorAbnorRunF
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunF, gRow)

                Case gCstCodeChDataTypeMotorManRunG, gCstCodeChDataTypeMotorAbnorRunG
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunG, gRow)

                Case gCstCodeChDataTypeMotorManRunH, gCstCodeChDataTypeMotorAbnorRunH
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunH, gRow)

                Case gCstCodeChDataTypeMotorManRunI, gCstCodeChDataTypeMotorAbnorRunI
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunI, gRow)

                Case gCstCodeChDataTypeMotorManRunJ, gCstCodeChDataTypeMotorAbnorRunJ
                    Call SetInputChk_MotorStatus(gCommonCont, gCstChListColPosStatusOut, gCstCodeChStatusTypeMotorRunJ, gRow)
            End Select
        End If

        ''74STATUS1
        Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus1, gRow, "Status", 8)

        ''75STATUS2
        Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus2, gRow, "Status", 8)

        ''76STATUS3
        Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus3, gRow, "Status", 8)

        ''77STATUS4
        Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus4, gRow, "Status", 8)

        ''78STATUS5
        Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus5, gRow, "Status", 8)

    End Function

#End Region

#Region "チャンネルリスト保存前の入力確認(バルブ)"

    '--------------------------------------------------------------------
    ' 機能      : ◎設定値格納前のチェック処理(バルブ)
    ' 返り値    : 入力が正しい値かどうか(True/False)
    ' 引き数    : チャンネルリスト1行分
    ' 機能説明  : 行毎のグリッド入力状態を確認する
    '--------------------------------------------------------------------
    Public Function SetValveInputDataChk(ByVal gCommonCont() As String, ByVal gRow As Integer) As Integer

        Dim blnValveErr As Boolean = False
        Dim blnValveCaution As Boolean = False

        ''38RL -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagRL, gRow)

        ''41Remarks --------------------------------------
        Call SetInputChk_Length(gCommonCont, gCstChListColPosRemarks, gRow, "Remarks", 16)

        ''42ALARM LEVEL ----------------------------------
        'プルダウンのため本項目は入力チェックしない
        'Call SetInputChk_AlmLevl(gCommonCont, gCstChListColPosLRRow, gRow, 4)

        ''45DMY ------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagDmy, gRow)

        ''46SC -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSC, gRow)

        ''47DLY -------------------------------------------
        'プルダウンのため本項目は入力チェックしない

        ''48EP -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagEP, gRow)

        ''49AC -------------------------------------------
        Call SetInputChk_ACVal(gCommonCont, gCstChListColPosFlagAC, gRow, gCstChListColPosExtGrH, gCstChListColPosFlagSC)

        ''50PLC ------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagPLC, gRow)

        ''50POWER FACTOR ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''52CENTER GRAPH ---------------------------------
        'チェックボックスのため本項目は入力チェックしない

        ''54ECCFUNC(延長警報盤) --------------------------
        'プルダウンのため本項目は入力チェックしない

        ''55SIO -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagSIO, gRow)

        ''56GWS -------------------------------------------
        Call SetInputChk_Val(gCommonCont, gCstChListColPosFlagGWS, gRow)

        ''19FEEDBACK ALARM
        If gCommonCont(gCstChListColPosOutExtgH) <> Nothing Or gCommonCont(gCstChListColPosOutExtgH) <> "" Then

            ''20FBA DLY ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutDelayH, gRow, "", Nothing, 2)

            ''21FBA GR1 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep1H, gRow, "", Nothing, 2)

            ''22FBA GR2 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep2H, gRow, "", Nothing, 2)

            ''66FBA Timer --------------------------------
            Call SetInputChk_FeedBakTime(gCommonCont, gCstChListColPosAlarmTimeup, gCstChListColPosOutGrep2H, gRow, 600)

            ''88FBA STATUS --------------------------------
            If gCommonCont(gCstChListColPosOutStatusH).ToString.Trim.Length > 8 Then
                grdCHList(gCstChListColPosOutStatusH, gRow).Style.BackColor = Color.Red
                blnValveErr = True
            End If

        Else
            ''20FBA DLY ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutDelayH, gRow, "", Nothing, 4)

            ''21FBA GR1 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep1H, gRow, "", Nothing, 4)

            ''22FBA GR2 ----------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutGrep2H, gRow, "", Nothing, 4)

            ''66FBA Timer --------------------------------
            If Not (gCommonCont(gCstChListColPosAlarmTimeup) = "" And gCommonCont(gCstChListColPosAlarmTimeup) = Nothing And gCommonCont(gCstChListColPosAlarmTimeup) = "0") Then
                grdCHList(gCstChListColPosAlarmTimeup, gRow).Style.BackColor = Color.Yellow
            End If

            ''88FBA STATUS --------------------------------
            Call SetInputChk_str(gCommonCont, gCstChListColPosOutStatusH, gRow, "", Nothing, 4)

        End If

        ''バルブはデータタイプで使用、未使用が異なるため最初に分岐
        ''33DataType ----------------------------------
        Select Case Val(gCommonCont(gCstChListColPosDataType))

            ''******************************************************************************************************
            Case gCstCodeChDataTypeValveDI_DO

                ''10ALM2(H) EX ----------------------------------
                If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

                    ''9ALM2(H) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 2)

                    ''11ALM2(H) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 2)

                    ''12ALM2(H) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)

                    ''13ALM2(H) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
                Else
                    ''9ALM2(H) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 4)

                    ''11ALM2(H) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 4)

                    ''12ALM2(H) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

                    ''13ALM2(H) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
                End If

                ''35FU No ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 20, "Input")

                ''36FU Port ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")

                ''37FU Pin ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 64, "Input")

                ''67OUTPUT FU No ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosDoStart, gRow, "", 20, "Output")

                ''68OUTPUT FU Port ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortDoStart, gRow, "", 8, "Output")

                ''69OUTPUT FU Pin ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinDoStart, gRow, "", 64, "Output")

                ''70TERMINAL COUNT ---------------------------------
                Call SetInputChk_TermCount(gCommonCont, gCstChListColPosBitCount, gRow, 9)

                ''71Control Type
                Call SetInputChk_ContType(gCommonCont, gCstChListColPosControlType, gCstChListColPosPulseWidth, gRow)

                ''74STATUS1
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus1, gRow, "Status", 8)

                ''75STATUS2
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus2, gRow, "Status", 8)

                ''76STATUS3
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus3, gRow, "Status", 8)

                ''77STATUS4
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus4, gRow, "Status", 8)

                ''78STATUS5
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus5, gRow, "Status", 8)

                ''78STATUS6
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus6, gRow, "Status", 8)

                ''78STATUS7
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus7, gRow, "Status", 8)

                ''78STATUS8
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus8, gRow, "Status", 8)


                ''******************************************************************************************************
            Case gCstCodeChDataTypeValveAI_DO1, gCstCodeChDataTypeValveAI_DO2, gCstCodeChDataTypeValvePT_DO2

                ''6RangeLo ----------------------------------------
                Call SetInputChk_str(gCommonCont, gCstChListColPosRangeLo, gRow, "", Nothing, 1)

                ''7RangeHi ----------------------------------------
                Call SetInputChk_str(gCommonCont, gCstChListColPosRangeHi, gRow, "", Nothing, 1)

                'レンジ大小比較
                Call SetInputChk_RengeSet(gCommonCont, gCstChListColPosRangeHi, gCstChListColPosRangeLo, gRow)

                '少数点以下桁数確認
                Call SetInputChk_RengeSet(gCommonCont, gCstChListColPosRangeHi, gCstChListColPosRangeLo, gRow)

                ''8Unit ----------------------------------------- 
                Call SetInputChk_Length(gCommonCont, gCstChListColPosUnit, gRow, "Unit", 8)

                ''10ALM2(H) EX ----------------------------------
                If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

                    ''9ALM2(H) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 2)

                    ''11ALM2(H) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 2)

                    ''12ALM2(H) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)

                    ''13ALM2(H) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
                Else
                    ''9ALM2(H) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 4)

                    ''11ALM2(H) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 4)

                    ''12ALM2(H) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

                    ''13ALM2(H) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
                End If

                ''15ALM3(L) EX ----------------------------------
                If gCommonCont(gCstChListColPosExtGrL) <> Nothing Or gCommonCont(gCstChListColPosExtGrL) <> "" Then

                    ''14ALM3(L) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueL, gRow, "", Nothing, 2)

                    ''16ALM3(L) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayL, gRow, "", Nothing, 2)

                    ''17ALM3(L) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1L, gRow, "", Nothing, 2)

                    ''18ALM3(L) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2L, gRow, "", Nothing, 2)
                Else
                    ''14ALM3(L) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueL, gRow, "", Nothing, 4)

                    ''16ALM3(L) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayL, gRow, "", Nothing, 4)

                    ''17ALM3(L) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1L, gRow, "", Nothing, 4)

                    ''18ALM3(L) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2L, gRow, "", Nothing, 4)
                End If

                ''24ALM1(HH) EX ----------------------------------
                If gCommonCont(gCstChListColPosExtGrHH) <> Nothing Or gCommonCont(gCstChListColPosExtGrHH) <> "" Then

                    ''23ALM1(HH) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueHH, gRow, "", Nothing, 2)

                    ''25ALM1(HH) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayHH, gRow, "", Nothing, 2)

                    ''26ALM1(HH) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1HH, gRow, "", Nothing, 2)

                    ''27ALM1(HH) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2HH, gRow, "", Nothing, 2)
                Else
                    ''23ALM1(HH) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueHH, gRow, "", Nothing, 4)

                    ''25ALM1(HH) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayHH, gRow, "", Nothing, 4)

                    ''26ALM1(HH) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1HH, gRow, "", Nothing, 4)

                    ''27ALM1(HH) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2HH, gRow, "", Nothing, 4)
                End If

                ''29ALM4(LL) EX ----------------------------------
                If gCommonCont(gCstChListColPosExtGrLL) <> Nothing Or gCommonCont(gCstChListColPosExtGrLL) <> "" Then

                    ''28ALM4(LL) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueLL, gRow, "", Nothing, 2)

                    ''30ALM4(LL) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayLL, gRow, "", Nothing, 2)

                    ''31ALM4(LL) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1LL, gRow, "", Nothing, 2)

                    ''32ALM4(LL) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2LL, gRow, "", Nothing, 2)
                Else
                    ''28ALM4(LL) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueLL, gRow, "", Nothing, 4)

                    ''30ALM4(LL) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayLL, gRow, "", Nothing, 4)

                    ''31ALM4(LL) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1LL, gRow, "", Nothing, 4)

                    ''32ALM4(LL) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2LL, gRow, "", Nothing, 4)
                End If

                ''35FU No ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosFuAddress, gRow, "", 20, "Input")

                ''36FU Port ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortAddress, gRow, "", 8, "Input")

                ''37FU Pin ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinAddress, gRow, "", 16, "Input")

                ''67OUTPUT FU No ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosDoStart, gRow, "", 20, "Output")

                ''68OUTPUT FU Port ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortDoStart, gRow, "", 8, "Output")

                ''69OUTPUT FU Pin ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinDoStart, gRow, "", 64, "Output")

                ''70TERMINAL COUNT ---------------------------------
                Call SetInputChk_TermCount(gCommonCont, gCstChListColPosBitCount, gRow, 9)

                ''71Control Type
                Call SetInputChk_ContType(gCommonCont, gCstChListColPosControlType, gCstChListColPosPulseWidth, gRow)

                ''83FEEDBACK ALARM SP1(CONTROL VALUE1) ------------
                Call SetInputChk_FDBKALM(gCommonCont, gCstChListColPosOutSp1, gRow, 0)

                ''84FEEDBACK ALARM SP2(CONTROL VALUE2) ------------
                Call SetInputChk_FDBKALM(gCommonCont, gCstChListColPosOutSp2, gRow, 0)

                ''85FEEDBACK HYS1 ---------------------------------
                Call SetInputChk_FDBKHYS(gCommonCont, gCstChListColPosOutHys1, gRow, 65535)

                ''85FEEDBACK HYS2 ---------------------------------
                Call SetInputChk_FDBKHYS(gCommonCont, gCstChListColPosOutHys2, gRow, 65535)

                ''52STRING ---------------------------------------
                Call SetInputChk_String(gCommonCont, gCstChListColPosString, gRow, 8)


                ''******************************************************************************************************
            Case gCstCodeChDataTypeValveAI_AO1, gCstCodeChDataTypeValveAI_AO2, gCstCodeChDataTypeValvePT_AO2


                ''******************************************************************************************************
            Case gCstCodeChDataTypeValveAO_4_20

                ''6RangeLo ----------------------------------------
                Call SetInputChk_str(gCommonCont, gCstChListColPosRangeLo, gRow, "", Nothing, 1)

                ''7RangeHi ----------------------------------------
                Call SetInputChk_str(gCommonCont, gCstChListColPosRangeHi, gRow, "", Nothing, 1)

                'レンジ大小比較
                Call SetInputChk_RengeSet(gCommonCont, gCstChListColPosRangeHi, gCstChListColPosRangeLo, gRow)

                '少数点以下桁数確認
                Call SetInputChk_RengeSet(gCommonCont, gCstChListColPosRangeHi, gCstChListColPosRangeLo, gRow)

                ''8Unit ----------------------------------------- 
                Call SetInputChk_Length(gCommonCont, gCstChListColPosUnit, gRow, "Unit", 8)

                ''10ALM2(H) EX ----------------------------------
                If gCommonCont(gCstChListColPosExtGrH) <> Nothing Or gCommonCont(gCstChListColPosExtGrH) <> "" Then

                    ''9ALM2(H) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 2)

                    ''11ALM2(H) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 2)

                    ''12ALM2(H) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 2)

                    ''13ALM2(H) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 2)
                Else
                    ''9ALM2(H) SET ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosValueH, gRow, "", Nothing, 4)

                    ''11ALM2(H) DLY ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosDelayH, gRow, "", Nothing, 4)

                    ''12ALM2(H) GR1 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep1H, gRow, "", Nothing, 4)

                    ''13ALM2(H) GR2 ----------------------------------
                    Call SetInputChk_str(gCommonCont, gCstChListColPosGrep2H, gRow, "", Nothing, 4)
                End If

                ''83FEEDBACK ALARM SP1(CONTROL VALUE1) ------------
                Call SetInputChk_FDBKALM(gCommonCont, gCstChListColPosOutSp1, gRow, 0)

                ''84FEEDBACK ALARM SP2(CONTROL VALUE2) ------------
                Call SetInputChk_FDBKALM(gCommonCont, gCstChListColPosOutSp2, gRow, 0)

                ''85FEEDBACK HYS1 ---------------------------------
                Call SetInputChk_FDBKHYS(gCommonCont, gCstChListColPosOutHys1, gRow, 65535)

                ''85FEEDBACK HYS2 ---------------------------------
                Call SetInputChk_FDBKHYS(gCommonCont, gCstChListColPosOutHys2, gRow, 65535)


                ''******************************************************************************************************
            Case gCstCodeChDataTypeValveDO

                ''67OUTPUT FU No ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosDoStart, gRow, "", 20, "Output")

                ''68OUTPUT FU Port ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortDoStart, gRow, "", 8, "Output")

                ''69OUTPUT FU Pin ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinDoStart, gRow, "", 64, "Output")

                ''70TERMINAL COUNT ---------------------------------
                Call SetInputChk_TermCount(gCommonCont, gCstChListColPosBitCount, gRow, 9)

                ''71Control Type
                Call SetInputChk_ContType(gCommonCont, gCstChListColPosControlType, gCstChListColPosPulseWidth, gRow)

                ''74STATUS1
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus1, gRow, "Status", 8)

                ''75STATUS2
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus2, gRow, "Status", 8)

                ''76STATUS3
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus3, gRow, "Status", 8)

                ''77STATUS4
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus4, gRow, "Status", 8)

                ''78STATUS5
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus5, gRow, "Status", 8)

                ''78STATUS6
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus6, gRow, "Status", 8)

                ''78STATUS7
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus7, gRow, "Status", 8)

                ''78STATUS8
                Call SetInputChk_Length(gCommonCont, gCstChListColPosDoStatus8, gRow, "Status", 8)


                ''******************************************************************************************************
            Case gCstCodeChDataTypeValveJacom, gCstCodeChDataTypeValveJacom55

                ''71Control Type
                Call SetInputChk_ContType(gCommonCont, gCstChListColPosControlType, gCstChListColPosPulseWidth, gRow)


                ''******************************************************************************************************
            Case gCstCodeChDataTypeValveExt

                ''67OUTPUT FU No ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosDoStart, gRow, "", 20, "Output")

                ''68OUTPUT FU Port ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPortDoStart, gRow, "", 8, "Output")

                ''69OUTPUT FU Pin ----------------------------------
                Call SetInputChk_FUPortPin(gCommonCont, gCstChListColPosPinDoStart, gRow, "", 64, "Output")

                ''71Control Type
                Call SetInputChk_ContType(gCommonCont, gCstChListColPosControlType, gCstChListColPosPulseWidth, gRow)

        End Select

    End Function

#End Region

#Region "各エラー関数"

    '*****************************************************************
    'Input Check(string型)
    '*****************************************************************
    Public Function SetInputChk_str(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal strChkValue1 As String, ByVal strChkValue2 As String, _
                                    ByVal intType As Integer) As Boolean

        Select Case intType

            Case 1
                If gCommonCont(intColNo) = strChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value is " & strChkValue1.ToString)
                Else
                    If gCommonCont(intColNo) = strChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value is " & strChkValue2.ToString)
                    End If
                End If

            Case 2
                If gCommonCont(intColNo) = strChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value is " & strChkValue1.ToString)
                Else
                    If gCommonCont(intColNo) = strChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value is " & strChkValue2.ToString)
                    End If
                End If

            Case 3
                If gCommonCont(intColNo) <> strChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value is not " & strChkValue1.ToString)
                Else
                    If gCommonCont(intColNo) <> strChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value is not " & strChkValue2.ToString)
                    End If
                End If

            Case 4
                If gCommonCont(intColNo) <> strChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value is not " & strChkValue1.ToString)
                Else
                    If gCommonCont(intColNo) <> strChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value is not " & strChkValue2.ToString)
                    End If
                End If

        End Select

    End Function

    '*****************************************************************
    'Input Check(Integer型)
    '*****************************************************************
    Public Function SetInputChk_int(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal intChkValue1 As Integer, ByVal intChkValue2 As Integer, _
                                    ByVal intType As Integer) As Boolean

        Select Case intType

            Case 1
                If gCommonCont(intColNo) = intChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True
                Else
                    If gCommonCont(intColNo) = intChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True
                    End If
                End If

            Case 2
                If gCommonCont(intColNo) = intChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True
                Else
                    If gCommonCont(intColNo) = intChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True
                    End If
                End If

            Case 3
                If gCommonCont(intColNo) <> intChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True
                Else
                    If gCommonCont(intColNo) <> intChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True
                    End If
                End If

            Case 4
                If gCommonCont(intColNo) <> intChkValue1 Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True
                Else
                    If gCommonCont(intColNo) <> intChkValue2 Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True
                    End If
                End If

        End Select

    End Function

    '*****************************************************************
    'Input Check(Integer型 範囲指定) Ver2.0.0.2
    '*****************************************************************
    Public Function SetInputChk_int_Range(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal intChkValueLow As Integer, ByVal intChkValueHigh As Integer, _
                                    ByVal pstrWorE As String) As Boolean
        Dim col As Color
        Select Case pstrWorE
            Case "W"
                col = Color.Yellow
            Case "E"
                col = Color.Red
            Case Else
                col = Color.Yellow
        End Select

        '空白は処理抜け
        If Trim(gCommonCont(intColNo)) = "" Then
            Exit Function
        End If

        If IsNumeric(gCommonCont(intColNo)) Then
            If Val(gCommonCont(intColNo)) < intChkValueLow Or Val(gCommonCont(intColNo)) > intChkValueHigh Then
                grdCHList(intColNo, gRow).Style.BackColor = col
                Select Case pstrWorE
                    Case "W"
                        blnInputCautionFlg = True
                    Case "E"
                        blnInputErrFlg = True
                    Case Else
                        blnInputCautionFlg = True
                End Select


                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, pstrWorE, gstrChListWarningTemp, "Range out")
            End If
        Else
            '数値じゃないなら重度エラー
            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True

            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Not Numeric")
        End If

    End Function

    '*****************************************************************
    'Input Check(Integer型 空白ならば０を自動格納) Ver2.0.0.2
    '*****************************************************************
    Public Function SetInputChk_NoDataToZero(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer) As Boolean

        '空白は0を格納
        If Trim(gCommonCont(intColNo)) = "" Then
            gCommonCont(intColNo) = 0
            grdCHList(intColNo, gRow).Value = 0
        End If

    End Function


    '*****************************************************************
    'DMY/SC/SIO/GWS/WK/RL/EP/PLC/SP用
    '*****************************************************************
    Public Function SetInputChk_Val(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer) As Boolean

        Select Case gCommonCont(intColNo)
            Case "0", "1"
                '問題なし
            Case "", Nothing
                grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True
            Case Else
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
        End Select

    End Function

    '*****************************************************************
    'AC用
    '*****************************************************************
    Public Function SetInputChk_ACVal(ByVal gCommonCont() As String, ByVal intACColNo As Integer, ByVal gRow As Integer, ByVal intEXTGColNo As Integer, ByVal intSCColNo As Integer) As Boolean

        '隠しチャンネルで警報設定がある場合アラームキャンセルを設定しているかどうか
        If gCommonCont(intSCColNo) = "1" Then
            If gCommonCont(intEXTGColNo) <> "" Or gCommonCont(intEXTGColNo) <> Nothing Then
                If gCommonCont(intACColNo) <> "1" Then
                    grdCHList(intACColNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True
                End If
            End If
        Else

            Select Case gCommonCont(intACColNo)
                Case "0", "1"
                    '問題なし
                Case "", Nothing
                    grdCHList(intACColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True
                Case Else
                    grdCHList(intACColNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True
            End Select

        End If

    End Function

    '*****************************************************************
    'FU ADDRESS(Input/Output)
    '*****************************************************************
    Public Function SetInputChk_FUPortPin(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal strType As String, ByVal intTypeValue As Integer, ByVal strIOType As String) As Boolean

        Select Case strIOType

            Case "Input"

                If strWKCH = 0 Or strWKCH = Nothing Then

                    If IsNumeric(gCommonCont(intColNo)) Then
                        If Val(gCommonCont(intColNo)) > intTypeValue Then
                            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                            blnInputErrFlg = True
                        End If
                    Else
                        If gCommonCont(intColNo) <> "" Or gCommonCont(intColNo) <> Nothing Then
                            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                            blnInputErrFlg = True
                        Else
                            grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                            blnInputCautionFlg = True
                        End If
                    End If
                Else
                    If IsNumeric(gCommonCont(intColNo)) Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True
                    Else
                        If gCommonCont(intColNo) <> "" Or gCommonCont(intColNo) <> Nothing Then
                            grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                            blnInputCautionFlg = True
                        End If
                    End If
                End If

            Case "Output"

                If IsNumeric(gCommonCont(intColNo)) Then
                    If Val(gCommonCont(intColNo)) > intTypeValue Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True
                    End If
                Else
                    If gCommonCont(intColNo) <> "" Or gCommonCont(intColNo) <> Nothing Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True
                    Else
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True
                    End If
                End If

        End Select

    End Function


    '*****************************************************************
    'FU ADDRESS(Input) Ver2.0.0.2
    '*****************************************************************
    Private Sub SetInputChk_FUadrInput(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal pintType As Integer, pintVal As Integer)
        Select Case pintType
            Case 1  '空白：注意　大きい：注意　0または数値：重度
                If gCommonCont(intColNo).Trim = "" Then
                    '空白は注意
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Not Input")
                Else
                    '0または数値以外
                    If IsNumeric(gCommonCont(intColNo)) Then
                        If Val(gCommonCont(intColNo)) <= 0 Then
                            'Zeroは重度
                            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                            blnInputErrFlg = True

                            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value is 0")
                        Else
                            '値より大きいは注意
                            If Val(gCommonCont(intColNo)) > pintVal Then
                                '値より大きいは注意
                                grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                                blnInputCautionFlg = True

                                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value > " & pintVal)
                            End If
                        End If
                    Else
                        '数値以外は重度
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Not Numeric")
                    End If
                End If
            Case 2  '空白：注意　大きい：重度　0または数値：重度
                If gCommonCont(intColNo).Trim = "" Then
                    '空白は注意
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Not Input")
                Else
                    '0または数値以外
                    If IsNumeric(gCommonCont(intColNo)) Then
                        If Val(gCommonCont(intColNo)) <= 0 Then
                            'Zeroは重度
                            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                            blnInputErrFlg = True

                            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value is 0")
                        Else
                            '値より大きいは重度
                            If Val(gCommonCont(intColNo)) > pintVal Then
                                '値より大きいは注意
                                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                                blnInputErrFlg = True

                                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                                Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value > " & pintVal)
                            End If
                        End If
                    Else
                        '数値以外は重度
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Not Numeric")
                    End If
                End If
            Case 3  '大きい：重度　空白または0：注意
                If gCommonCont(intColNo).Trim = "" Then
                    '空白は注意
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Not Input")
                Else
                    '0または数値以外
                    If IsNumeric(gCommonCont(intColNo)) Then
                        If Val(gCommonCont(intColNo)) <= 0 Then
                            'Zeroは注意
                            grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                            blnInputCautionFlg = True

                            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                            Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value is 0")
                        Else
                            '値より大きいは重度
                            If Val(gCommonCont(intColNo)) > pintVal Then
                                '値より大きいは注意
                                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                                blnInputErrFlg = True

                                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                                Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value > " & pintVal)
                            End If
                        End If
                    End If
                End If
        End Select
    End Sub
    'FU ADRESS(INPUT) WK_ON時＝空白がOKそれ以外は重度エラー
    Private Sub SetInputChk_FUadrInput_WK(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer)
        If NZf(gCommonCont(intColNo)).Trim <> "" Then
            '空白じゃない場合重度エラー
            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True
            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Input is Error")
        End If
    End Sub

    '*****************************************************************
    'LENGTH(文字長さ)
    '*****************************************************************
    Public Function SetInputChk_Length(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal strType As String, ByVal intTypeValue As Integer) As Boolean

        Select Case strType

            Case "Unit"
                If gCommonCont(intColNo).ToString.Trim.Length > intTypeValue Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "E", "Unit", "Length Over " & intTypeValue)
                ElseIf gCommonCont(intColNo) = Nothing Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", "Unit", "No Input")
                ElseIf gCommonCont(intColNo) = "" Then
                    grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", "Unit", "No Input")
                End If

            Case "Remarks", "Status", "CHName", "Tag"
                If gCommonCont(intColNo) <> Nothing Then
                    If gCommonCont(intColNo).ToString.Trim.Length > intTypeValue Then
                        grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", strType, "Length Over " & intTypeValue)
                    End If
                End If

        End Select

    End Function

    '*****************************************************************
    'STATUS
    '*****************************************************************
    Public Function SetInputChk_STATUS(ByVal gCommonCont() As String, ByVal intColNo1 As Integer, ByVal intColNo2 As Integer, ByVal gRow As Integer, ByVal intTypeValue As Integer) As Boolean

        If gCommonCont(intColNo1) <> "" Or gCommonCont(intColNo1) <> Nothing Then
            If gCommonCont(intColNo2) = "" Or gCommonCont(intColNo2) = Nothing Then
                grdCHList(intColNo2, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "EX Data BUT STATUS Not Data")
            ElseIf gCommonCont(2).ToString.Trim.Length > intTypeValue Then
                grdCHList(intColNo2, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Length Over " & intTypeValue.ToString)
            End If
        Else
            If gCommonCont(intColNo2) <> "" Or gCommonCont(intColNo2) <> Nothing Then
                grdCHList(intColNo2, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "EX No Data BUT STATUS Data")
            End If
        End If

    End Function

    '*****************************************************************
    'NORMAL RENGE HIGH/LOW
    '*****************************************************************
    Public Function SetInputChk_NorRange(ByVal gCommonCont() As String, ByVal gRow As Integer, ByVal intColNo1 As Integer, ByVal intColNo2 As Integer, intColNo3 As Integer, ByVal intTypeValue As Integer) As Boolean

        Select Case intTypeValue

            Case 1
                'Lo
                'Ver2.0.0.7 判定大小が逆のため修正
                'RANGE LO < LL < L < NOR L が正しい
                If IsNumeric(gCommonCont(intColNo1)) Then
                    If Val(gCommonCont(intColNo1)) <= Val(gCommonCont(intColNo2)) Then
                        'NOR Lo <= RangeLo なら注意
                        grdCHList(intColNo1, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "NOR L <= Range Lo")
                    End If
                    If IsNumeric(gCommonCont(intColNo3)) Then
                        'L SET が数値の場合のみ判定
                        If Val(gCommonCont(intColNo1)) <= Val(gCommonCont(intColNo3)) Then
                            'NOR Lo <= L SET なら注意
                            grdCHList(intColNo1, gRow).Style.BackColor = Color.Yellow
                            blnInputCautionFlg = True

                            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                            Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "NOR L <= L SET")
                        End If
                    End If
                Else
                    If gCommonCont(intColNo1) <> "" Or gCommonCont(intColNo1) <> Nothing Then
                        '数値じゃなく、空白でもないなら重度エラー
                        grdCHList(intColNo1, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Not Numeric")
                    End If
                End If

            Case 2
                'Hi
                'Ver2.0.0.7 判定大小が逆のため修正
                'NOR H < H < HH < RANGE HI が正しい
                If IsNumeric(gCommonCont(intColNo1)) Then
                    If Val(gCommonCont(intColNo1)) >= Val(gCommonCont(intColNo2)) Then
                        'NOR Hi >= RangeHi なら注意
                        grdCHList(intColNo1, gRow).Style.BackColor = Color.Yellow
                        blnInputCautionFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "NOR H >= Range Hi")
                    End If
                    If IsNumeric(gCommonCont(intColNo3)) Then
                        'H SET が数値の場合のみ判定
                        If Val(gCommonCont(intColNo1)) >= Val(gCommonCont(intColNo3)) Then
                            'NOR Hi >= H SET なら注意
                            grdCHList(intColNo1, gRow).Style.BackColor = Color.Yellow
                            blnInputCautionFlg = True

                            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                            Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "NOR H >= H SET")
                        End If
                    End If
                Else
                    If gCommonCont(intColNo1) <> "" Or gCommonCont(intColNo1) <> Nothing Then
                        '数値じゃなく、空白でもないなら重度エラー
                        grdCHList(intColNo1, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Not Numeric")
                    End If
                End If

        End Select

    End Function

    '*****************************************************************
    'STRING
    '*****************************************************************
    Public Function SetInputChk_String(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal intTypeValue As Integer) As Boolean

        If IsNumeric(gCommonCont(intColNo)) Then
            If Val(gCommonCont(intColNo)) > intTypeValue Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value > " & intTypeValue)
            End If
        Else
            If gCommonCont(intColNo) = "" Or gCommonCont(intColNo) = Nothing Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "No Data")
            End If
        End If

    End Function

    '*****************************************************************
    'ALARM LEVEL
    '*****************************************************************
    Public Function SetInputChk_AlmLevl(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal intTypeValue As Integer) As Boolean

        If IsNumeric(gCommonCont(intColNo)) Then
            If Val(gCommonCont(intColNo)) > intTypeValue Or gCommonCont(intColNo) = Nothing Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
            End If
        Else
            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True
        End If

    End Function

    '*****************************************************************
    'FEED BACK TIME
    '*****************************************************************
    Public Function SetInputChk_CommChNo(ByVal gCommonCont() As String, ByVal gRow As Integer, ByVal intColNo1 As Integer, ByVal intColNo2 As Integer, ByVal intTypeValue As Integer) As Boolean

        '' (シェアではない時 ：0) (Local :1) (Remote :2)
        If gCommonCont(intColNo1) <> "0" Then

            If gCommonCont(intColNo1) = "1" Then

                ''COMMON CHNo.
                If gCommonCont(intColNo2) <> "" Or gCommonCont(intColNo2) <> Nothing Then
                    If IsNumeric(gCommonCont(intColNo2)) Then
                        If Val(gCommonCont(intColNo2)) < intTypeValue Then
                            grdCHList(intColNo2, gRow).Style.BackColor = Color.Red
                            blnInputErrFlg = True

                            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value < " & intTypeValue.ToString)
                        End If
                    Else
                        grdCHList(intColNo2, gRow).Style.BackColor = Color.Red
                        blnInputErrFlg = True

                        'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                        Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Not Numeric")
                    End If
                Else
                    grdCHList(intColNo2, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "No Data ")
                End If
            End If
        End If

    End Function

    '*****************************************************************
    'FILTER
    '*****************************************************************
    Public Function SetInputChk_Filter(ByVal gCommonCont() As String, ByVal gRow As Integer, ByVal intColNo As Integer, ByVal intTypeValue1 As Integer, ByVal intTypeValue2 As Integer) As Boolean

        If IsNumeric(gCommonCont(intColNo)) Then
            If Val(gCommonCont(intColNo)) > intTypeValue1 Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Value > " & intTypeValue1)
            ElseIf Val(gCommonCont(intColNo)) <> intTypeValue2 Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value <> " & intTypeValue2)
            End If
        Else
            grdCHList(intColNo, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True

            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Not Numeric")
        End If

    End Function

    '*****************************************************************
    'MOTOR STATUS
    '*****************************************************************
    Public Function SetInputChk_MotorStatus(ByVal gCommonCont() As String, ByVal intColNo1 As Integer, ByVal intColNo2 As Integer, ByVal gRow As Integer) As Boolean

        If gCommonCont(intColNo1) <> gCstCodeChManualInputStatus.ToString Then
            If gCommonCont(intColNo1) <> intColNo2 Then
                grdCHList(intColNo1, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True

                'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "OUT Status <> IN Status")
            End If
        End If

    End Function

    '*****************************************************************
    'FEED BACK TIME
    '*****************************************************************
    Public Function SetInputChk_FeedBakTime(ByVal gCommonCont() As String, ByVal intColNo1 As Integer, ByVal intColNo2 As Integer, ByVal gRow As Integer, ByVal intTypeValue As Integer) As Boolean

        If gCommonCont(intColNo1) = "" Or gCommonCont(intColNo1) = Nothing Then
            grdCHList(intColNo2, gRow).Style.BackColor = Color.Yellow
            blnInputCautionFlg = True

            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
            Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Not Input")

        Else
            If IsNumeric(gCommonCont(intColNo1)) Then

                If Val(gCommonCont(intColNo1)) > intTypeValue Then
                    grdCHList(intColNo1, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value > " & intTypeValue.ToString)
                Else
                    grdCHList(intColNo1, gRow).Style.BackColor = Color.Yellow
                    blnInputCautionFlg = True

                    'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
                    Call subSetChListWarningData(gRow, "W", gstrChListWarningTemp, "Value is Numeric")
                End If
            End If
        End If

    End Function

    '*****************************************************************
    'FEED BACK ALARM
    '*****************************************************************
    Public Function SetInputChk_FDBKALM(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal intTypeValue As Integer) As Boolean

        If IsNumeric(gCommonCont(intColNo)) Then
            If Val(gCommonCont(intColNo)) <> intTypeValue Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
            End If
        Else
            If gCommonCont(intColNo) = "" Or gCommonCont(intColNo) = Nothing Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True
            End If
        End If

    End Function

    '*****************************************************************
    'FEED BACK HYS
    '*****************************************************************
    Public Function SetInputChk_FDBKHYS(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal intTypeValue As Integer) As Boolean

        If IsNumeric(gCommonCont(intColNo)) Then
            If Val(gCommonCont(intColNo)) > intTypeValue Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True

            End If
        Else
            If gCommonCont(intColNo) = "" Or gCommonCont(intColNo) = Nothing Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Yellow
                blnInputCautionFlg = True
            End If
        End If

    End Function

    '*****************************************************************
    'TERMINAL COUNT
    '*****************************************************************
    Public Function SetInputChk_TermCount(ByVal gCommonCont() As String, ByVal intColNo As Integer, ByVal gRow As Integer, ByVal intTypeValue As Integer) As Boolean

        If IsNumeric(gCommonCont(intColNo)) Then
            If Val(gCommonCont(intColNo)) > intTypeValue Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
            End If
        Else
            If gCommonCont(intColNo) = "" Or gCommonCont(intColNo) = Nothing Then
                grdCHList(intColNo, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
            End If
        End If

    End Function

    '*****************************************************************
    'CONTROL TYPE
    '*****************************************************************
    Public Function SetInputChk_ContType(ByVal gCommonCont() As String, ByVal intColNo1 As Integer, ByVal intColNo2 As Integer, ByVal gRow As Integer) As Boolean

        If gCommonCont(intColNo1) = "1" Then

            If IsNumeric(gCommonCont(intColNo2)) Then

                If Val(gCommonCont(intColNo2)) < 1 And Val(gCommonCont(intColNo2)) > 200 Then
                    grdCHList(intColNo2, gRow).Style.BackColor = Color.Red
                    blnInputErrFlg = True
                End If
            Else
                grdCHList(intColNo2, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
            End If
        Else
            If gCommonCont(intColNo2) <> "" Or gCommonCont(intColNo2) <> Nothing Then
                grdCHList(intColNo2, gRow).Style.BackColor = Color.Red
                blnInputErrFlg = True
            End If
        End If

    End Function

    '*****************************************************************
    'レンジ設定チェック
    '*****************************************************************
    Public Function SetInputChk_RengeSet(ByVal gCommonCont() As String, ByVal intColHighRenge As Integer, ByVal intColLowRenge As Integer, ByVal gRow As Integer) As Boolean

        'レンジ大小比較
        Dim intRangeLo As Integer = 0
        Dim intRangeHi As Integer = 0

        If IsNumeric(gCommonCont(intColLowRenge)) Then
            intRangeLo = Val(gCommonCont(intColLowRenge))
        Else
            grdCHList(intColLowRenge, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True

            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Range Lo is not Numeric")
        End If

        If IsNumeric(gCommonCont(intColHighRenge)) Then
            intRangeHi = Val(gCommonCont(intColHighRenge))
        Else
            grdCHList(intColHighRenge, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True

            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Range Hi is Not Numeric")
        End If

        If intRangeLo > intRangeHi Then
            grdCHList(intColLowRenge, gRow).Style.BackColor = Color.Red
            grdCHList(intColHighRenge, gRow).Style.BackColor = Color.Red
            blnInputErrFlg = True

            'Ver2.0.0.2 CHNoの色変えとエラー理由を変数へ格納
            Call subSetChListWarningData(gRow, "E", gstrChListWarningTemp, "Range Hi < Lo")
        End If

    End Function

    '*****************************************************************
    'レンジ小数点設定チェック
    '*****************************************************************
    Public Function SetInputChk_RengeDecimalSet(ByVal gCommonCont() As String, ByVal intColHighRenge As Integer, ByVal intColLowRenge As Integer, ByVal gRow As Integer) As Boolean

        '少数点以下桁数確認
        Dim intRangeLoDigit As Integer = 0
        Dim intRangeHiDigit As Integer = 0

        intRangeLoDigit = intDecimalPointSch(gCommonCont(intColLowRenge))
        intRangeHiDigit = intDecimalPointSch(gCommonCont(intColHighRenge))

        If intRangeLoDigit <> intRangeHiDigit Then
            grdCHList(intColHighRenge, gRow).Style.BackColor = Color.Yellow
            grdCHList(intColHighRenge, gRow).Style.BackColor = Color.Yellow
            blnInputCautionFlg = True
        End If

    End Function

#End Region

#End Region

#Region "小数点桁合わせ"

    '--------------------------------------------------------------------
    ' 機能      : 小数点桁合わせ処理1
    '--------------------------------------------------------------------
    Public Function mChkDesimalPos(ByVal intRowNo As Integer, ByVal intColNo As Integer, ByVal intPosi As Integer) As String

        Dim lngValue As Long
        Dim dblValue As Double
        Dim strDecimalFormat As String

        ''小数点以下桁数フォーマット
        strDecimalFormat = "0.".PadRight(intPosi + 2, "0"c)

        lngValue = Int(Val(grdCHList(intColNo, intRowNo).Value) * (10 ^ intPosi) + 0.5)
        dblValue = lngValue / (10 ^ intPosi)

        mChkDesimalPos = dblValue.ToString(strDecimalFormat)

    End Function

    '-------------------------------------------------------------------- 
    ' 機能      : 小数点桁合わせ処理2
    '--------------------------------------------------------------------
    Public Function BeamSsmallNumber(ByVal ColPos As Integer, ByVal intRow As Integer, ByVal DecimalP As Integer) As Integer()

        Dim inVal As Integer
        Dim ValueUse(2) As Integer

        If IsNumeric(grdCHList(ColPos, intRow).Value) Then

            ''小数以下桁合わせ　ver.1.4.0 2011.09.30

            inVal = Int(Val(grdCHList(ColPos, intRow).Value) * (10 ^ DecimalP) + 0.5)

            If inVal.ToString.Length > 9 Then                        ''桁あふれ回避の為に9桁まで
                inVal = CCLong(inVal.ToString.Substring(inVal.ToString.Length - 9))
            End If
            ValueUse(1) = inVal     ''Value HH
            ValueUse(2) = 1
        Else
            ValueUse(1) = 0
            ValueUse(2) = 0
        End If

        Return ValueUse

    End Function

#End Region

#Region "各共通関数"

    '--------------------------------------------------------------------
    ' 機能      : 設定内容確認
    '--------------------------------------------------------------------
    Public Sub ValueChk(ByVal ALMSet As UShort, ByVal intCompValue As Integer, ByVal intCol As Integer, ByVal intRow As Integer, ByVal intDecimalPos As Integer, ByVal strFormat As String)

        Dim dblValue As Double

        'アラーム設定無し
        If ALMSet = 0 Then
            grdCHList(intCol, intRow).Value = ""
        Else
            dblValue = ALMSet / (10 ^ intDecimalPos)
            grdCHList(intCol, intRow).Value = dblValue.ToString(strFormat)
        End If

    End Sub

    '--------------------------------------------------------------------
    ' 機能      : レンジ分解処理
    '--------------------------------------------------------------------
    Public Sub RangeSepChk(ByVal intColRangeType As Integer, ByVal intColHiRangeType As Integer, ByVal intColLowRangeType As Integer, ByVal intRow As Integer, ByVal strFormat As String)

        Dim strRangeValue As String
        Dim intPos As Integer

        strRangeValue = grdCHList(intColRangeType, intRow).FormattedValue

        If strRangeValue <> "" Then
            strRangeValue = strRangeValue.Replace(" - ", "/")
            intPos = strRangeValue.LastIndexOf("/")
            grdCHList(intColLowRangeType, intRow).Value = (Val(Long.Parse(strRangeValue.Substring(0, intPos))).ToString(strFormat))   'Range Low
            grdCHList(intColHiRangeType, intRow).Value = (Val(Long.Parse(strRangeValue.Substring(intPos + 1))).ToString(strFormat))  'Range Hi
        End If

    End Sub

#End Region


#Region "登録前チェックエラーウィンドウ用値ｾｯﾄ関数"
    Private Sub subSetChListWarningData(pRow As Integer, pstrWorE As String, pstrItemName As String, pstrDetail As String)
        Dim col As Color
        Dim strErr As String = ""
        Select Case pstrWorE
            Case "W"
                '警告は黄色
                col = Color.Yellow
                strErr = "War"
            Case "E"
                'エラーは赤色
                col = Color.Red
                strErr = "Err"
            Case Else
                '上記以外は警告と同じとする
                col = Color.Yellow
                strErr = "Other"
        End Select

        'Ver2.0.0.2 CHNoも色変えする
        grdCHList(gCstChListColPosChNo, pRow).Style.BackColor = col
        'Ver2.0.0.2 エラー理由を変数へ格納
        gintChListwarning = gfnGetChListWarningRow()
        If gintChListwarning >= 0 Then
            gChListWarningData(0, gintChListwarning) = grdCHList(gCstChListColPosChNo, pRow).Value
            gChListWarningData(1, gintChListwarning) = pstrItemName
            gChListWarningData(2, gintChListwarning) = strErr
            gChListWarningData(3, gintChListwarning) = pstrDetail
        End If
    End Sub
#End Region

    
    
    Private Sub grdHead1_CellContentClick(sender As System.Object, e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdHead1.CellContentClick

    End Sub
End Class
